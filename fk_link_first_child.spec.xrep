`{`@eq`(`'to_store`'`,`$section`)\
   // [(start fk_link_first_child)]
`{`@eq`(`$arg_new_only`,`'`'`)`&`@eq`(`$arg_not_create`,`'`'`)`&`@eq`(`$arg_status_field`,`'`'`)\
   // NOTE: Empty code block for scope purposes.
`,\
`{`$sep`=`'`'`}`{`!`@eq`(`$arg_status_field`,`'`'`)`&`(`!`@eq`(`$arg_new_only`,`'`'`)`|`!`@eq`(`$arg_not_create`,`'`'`)`)\
`$sep`=`' && `'`}\
   if( `{`@eq`(`$arg_new_only`,`'true`'`)is_create`}`{`@eq`(`$arg_not_create`,`'true`'`)!is_create`}`{`$sep`}\
`{`!`@eq`(`$arg_status_field`,`'`'`)get_obj( ).`{`$arg_status_field`}( ).has_changed( ) && to_string( get_obj( ).`{`$arg_status_field`}( ) ) == "`{`$arg_status_value`}"`} )
`}\
   {
`{`!`@eq`(`$arg_order_field`,`'`'`)\
      string key_info( FIELD_ID( `{`$module_name`}, `{`$arg_child_class`}, `{`$arg_order_field`} ) );
      key_info += ' ';
`,\
      string key_info;
`}\
      if( get_obj( ).`{`!`@eq`(`$arg_pfield`,`'`'`)`{`$arg_pfield`}( ).`}child_`{`$arg_child_class`}( ).iterate_forwards( key_info ) )
      {
         get_obj( ).`{`$arg_field`}( get_obj( ).`{`!`@eq`(`$arg_pfield`,`'`'`)`{`$arg_pfield`}( ).`}child_`{`$arg_child_class`}( ).\
`{`!`@eq`(`$arg_child_field`,`'`'`)`{`$arg_child_field`}`,get_key`}( ) );
         get_obj( ).`{`!`@eq`(`$arg_pfield`,`'`'`)`{`$arg_pfield`}( ).`}child_`{`$arg_child_class`}( ).iterate_stop( );
      }
      else
         // FUTURE: The error message itself should be a module string.
         throw runtime_error( "Cannot provide " + GMS( c_field_display_name_`{`$arg_field`} )
          + " without at least one " + get_obj( ).`{`!`@eq`(`$arg_pfield`,`'`'`)`{`$arg_pfield`}( ).`}child_`{`$arg_child_class`}( ).get_display_name( ) + "." );
   }
   // [(finish fk_link_first_child)]
`}
