storage_init -admin %CIYAM_STORAGE%
module_load Meta
storage_term
storage_init %CIYAM_STORAGE%
perform_create sys 20120102 Meta 102100 string "102101=string,102102=0,102109=1,102111=T000"
perform_create sys 20120102 Meta 102100 datetime "102101=datetime,102102=1,102109=1,102111=T001"
perform_create sys 20120102 Meta 102100 date "102101=date,102102=2,102109=1,102111=T002"
perform_create sys 20120102 Meta 102100 time "102101=time,102102=3,102109=1,102111=T003"
perform_create sys 20120102 Meta 102100 numeric "102101=numeric,102102=4,102109=1,102111=T004"
perform_create sys 20120102 Meta 102100 int "102101=int,102102=5,102109=1,102111=T005"
perform_create sys 20120102 Meta 102100 bool "102101=bool,102102=6,102109=1,102111=T006"
perform_create sys 20120102 Meta 102100 foreign_key "102101=foreign_key,102102=0,102109=1,102111=T007"
perform_create sys 20120102 Meta 103100 primitive "103101=primitive,103102=5,103103=1,103104=E000"
perform_create sys 20120102 Meta 104100 primitive0000000001 "104102=0,104101=string,300400=primitive"
perform_create sys 20120102 Meta 104100 primitive0000000002 "104102=1,104101=datetime,300400=primitive"
perform_create sys 20120102 Meta 104100 primitive0000000003 "104102=2,104101=date,300400=primitive"
perform_create sys 20120102 Meta 104100 primitive0000000004 "104102=3,104101=time,300400=primitive"
perform_create sys 20120102 Meta 104100 primitive0000000005 "104102=4,104101=numeric,300400=primitive"
perform_create sys 20120102 Meta 104100 primitive0000000006 "104102=5,104101=int,300400=primitive"
perform_create sys 20120102 Meta 104100 primitive0000000007 "104102=6,104101=bool,300400=primitive"
perform_create sys 20120102 Meta 125100 101100X101102 "125101=V001###,125102=V001000"
perform_create sys 20120102 Meta 101100 guests "101101=Guests"
perform_create sys 20120102 Meta 100100 admin "100101=admin,100103=nimda,100104=Administrator"
perform_create sys 20120102 Meta 100100 guest "100101=guest,100103=guest,100104=Guest User,300100=guests"
perform_create sys 20120102 Meta 117100 print "117101=print,117102={class}(print)"
perform_create sys 20120102 Meta 117100 normal "117101=normal,117102={class}"
perform_create sys 20120102 Meta 117100 user_info "117101=user_info,117102={class}(user)"
perform_create sys 20120102 Meta 119100 key "119101=key,119102=field_key"
perform_create sys 20120102 Meta 119100 tab "119101=tab,119102=tab_{tab}"
perform_create sys 20120102 Meta 119100 field "119101=field,119102=field_{sfield}[fk_]{sparent}{schild}[&_]{sechild}"
perform_create sys 20120102 Meta 121100 home "121101=home,121102={class}(home),121104=1"
perform_create sys 20120102 Meta 121100 group "121101=group,121102={class}(group){vname},121105=1"
perform_create sys 20120102 Meta 121100 non_group "121101=non_group,121102={class}{vname}(non-group)"
perform_create sys 20120102 Meta 121100 normal "121101=normal,121102={class}{vname}"
perform_create sys 20120102 Meta 121100 user "121101=user,121102={class}(user){vname},121105=1"
perform_create sys 20120102 Meta 121100 non_user "121101=non_user,121102={class}(non-user){vname}"
perform_create sys 20120102 Meta 121100 view_child "121101=view_child,121102={class}for_{pfield}(child),121103=1"
perform_create sys 20120102 Meta 123100 field "123101=field,123102=field_{sfield}[fk_]{sparent}{schild}{sgchild},123107=1,123112=1,123114=1,123119=1"
perform_create sys 20120102 Meta 123100 row_number "123101=row_number,123102=field_row,123110=1,123112=1"
perform_create sys 20120102 Meta 123100 new_select "123101=new_select,123102=new_select_{sfield}{sparent}{schild},123103=1,123109=1,123106=1,123114=1"
perform_create sys 20120102 Meta 123100 link_select "123101=link_select,123102=link_select_{sfield}{sparent}{schild},123103=1,123109=1,123114=1,123119=1"
perform_create sys 20120102 Meta 123100 restrict_field "123101=restrict_field,123102=restrict_field_{rfield},123104=1,123109=1,123116=1,123117=1"
perform_create sys 20120102 Meta 123100 restrict_search "123101=restrict_search,123102=restrict_search_{sfield}{sparent}{schild},123109=1,123114=1,123118=1"
perform_create sys 20120102 Meta 123100 restrict_select "123101=restrict_select,123102=restrict_select_{sfield}{sparent}{schild},123103=1,123104=1,123109=1,123111=1,123114=1,123115=1"
perform_create sys 20120102 Meta 123100 restrict_select_child_rel "123101=restrict_select_child_rel,123102=restrict_select_child_{child}{crsfield}{crsparent}{crschild},123103=1,123104=1,123109=1,123113=1,123115=1"
perform_create sys 20120102 Meta 123100 restrict_switch "123101=restrict_switch,123102=restrict_switch_{sfield}{sparent}{schild},123103=1,123104=1,123105=1,123109=1,123114=1,123120=1"
perform_create sys 20120102 Meta 123100 user_action_event "123101=user_action_event,123102=user_action_event_{procedure},123108=1,123109=1"
perform_create sys 20120102 Meta 114100 field "114101=field,114102={field},114103=n/a,114104=1,114124=1,114105=1,114139=1,114146=1,114151=1"
perform_create sys 20120102 Meta 114100 field_list "114101=field_list,114102=field_list,114103=n/a,114140=115430$115100.301405,301710=field,114147=1,114151=1"
perform_create sys 20120102 Meta 114100 field_restrict "114101=field_restrict,114102={field}is_{value_label},114103=n/a,114104=1,114124=1,114105=1,114135=1,114110=1,114139=1,114146=1,114151=1"
perform_create sys 20120102 Meta 114100 field_first_child_opt_order "114101=field_first_child_opt_order,114102=first_child[_]{field}[by_]{sfield},114103=n/a,114104=1,114146=1,114124=1,114128=1,114147=1,114148=1,114149=1,114151=1,114120=If Field is provided then it's value will be used rather than the key. Source Field is an optional single field ordering.,114158=child_field={field}\r\norder_field={sfield}"
perform_create sys 20120102 Meta 114100 field_first_source_info "114101=field_first_source_info,114102=field_from_first_{child},114103=n/a,114104=1,114152=1,114191=1,114138=1,114146=1,114145=1,114147=1,114149=1,114151=1,114140=115432$115100.301405,301710=field_first_child_opt_order,114158=child={child}\r\nchild_class={cclass}"
perform_create sys 20120102 Meta 114100 field_pair "114101=field_pair,114102={class}{field}and_{spfield}{scfield},114103=n/a,114104=1,114146=1,114124=1,114105=1,114121=1,114122=1,114139=1,114125=1,114137=1,114144=1,114151=1"
perform_create sys 20120102 Meta 114100 field_pair_list "114101=field_pair_list,114102=field_pair_list,114103=n/a,114124=1,114140=115431$115100.301405,301710=field_pair,114147=1,114151=1,114120=Field is an optional test field for the parent specification.,114158=ptfield={field}"
perform_create sys 20120102 Meta 114100 field_pair_g "114101=field_pair_g,114102={class}{field}and_{spfield}{scfield}{sgcfield},114103=n/a,114104=1,114146=1,114124=1,114105=1,114121=1,114122=1,114139=1,114125=1,114137=1,114178=1,114144=1,114151=1"
perform_create sys 20120102 Meta 114100 field_pair_g_list "114101=field_pair_g_list,114102=field_pair_g_list,114103=n/a,114140=115431$115100.301405,301710=field_pair_g,114147=1,114151=1"
perform_create sys 20120102 Meta 114100 field_pair2 "114101=field_pair2,114102={class}{field}and_{sclass}{sfield},114103=n/a,114104=1,114146=1,114124=1,114105=1,114128=1,114113=1,114139=1,114172=1,114173=1,114151=1"
perform_create sys 20120102 Meta 114100 field_pair2_list "114101=field_pair2_list,114102=field_pair2_list,114103=n/a,114140=115431$115100.301405,301710=field_pair2,114147=1,114151=1"
perform_create sys 20120102 Meta 114100 field_child_source_pair "114101=field_child_source_pair,114102={field}with_{scfield},114103=n/a,114168=1,114148=1,114104=1,114146=1,114137=1,114124=1,114105=1,114125=1,114121=1,114122=1,114149=1,114147=1,114151=1"
perform_create sys 20120102 Meta 114100 field_from_child_concat_cinfo "114101=field_from_child_concat_cinfo,114102=field_{spclass}{class}children_info,114103=field_from_child_concat,114104=1,114146=1,114148=1,114124=1,114174=1,114128=1,114113=1,114125=1,114121=1,114147=1,114149=1,114151=0,114120=Field is an optional child field for the parent to use. Other Field is an optional \"order\" field. Source Field is the FK relationship to the parent. Source Parent and Source Child are an optional FK class and field to use.,114158=cclass={class}\r\ncfield={field}\r\nctransient={ftransient}\r\nofield={ofield}\r\npfield={sfield}\r\nxpfield={spfield}\r\nxdfield={scfield}\r\nsections=for_store after_store after_destroy"
perform_create sys 20120102 Meta 114100 field_source "114101=field_source,114102={sfield}{spfield}{scfield},114103=n/a,114104=1,114128=1,114121=1,114125=1,114123=1,114154=1,114139=1,114146=1,114151=1"
perform_create sys 20120102 Meta 114100 field_source_and_value "114101=field_source_and_value,114102={sfield}{spfield}{scfield}and_{value_label},114103=n/a,114104=1,114128=1,114121=1,114125=1,114123=1,114154=1,114135=1,114110=1,114139=1,114146=1,114151=1"
perform_create sys 20120102 Meta 114100 for_ordered_move_rvalues "114101=for_ordered_move_rvalues,114102=procedure_arg_{procedure_arg},114103=n/a,114104=1,114171=1,114106=1,114132=1,114146=1,114160=1,114139=1,114159=1,114133=0,114134=0,114149=1,114161=1,114147=1,114151=1,114158=values={procedure_arg}"
perform_create sys 20120102 Meta 114100 for_ordered_move_rfields "114101=for_ordered_move_rfields,114102=procedure_arg_{procedure_arg},114103=n/a,114104=1,114171=1,114106=1,114132=1,114146=1,114160=1,114139=1,114159=1,114133=0,114134=0,114149=1,114161=1,114150=115440$115100.301405,301720=for_ordered_move_rvalues,114147=1,114151=1,114158=fields={procedure_arg}"
perform_create sys 20120102 Meta 114100 for_ordered_move_down "114101=for_ordered_move_down,114102=for_ordered_move_down,114103=n/a,114104=1,114171=1,114106=1,114139=1,114140=115439$115100.301405,301710=for_ordered_move_rfields,114146=1,114149=1,114150=,301720=,114161=1,114147=1,114151=1,114158=dn_proc={procedure},114164=dn"
perform_create sys 20120102 Meta 114100 for_ordered_move_up "114101=for_ordered_move_up,114102=for_ordered_move_up,114103=n/a,114104=1,114171=1,114106=1,114139=1,114140=115439$115100.301405,301710=for_ordered_move_rfields,114146=1,114149=1,114150=115440$115100.301405,301720=for_ordered_move_down,114161=1,114147=1,114151=1,114158=up_proc={procedure},114164=up"
perform_create sys 20120102 Meta 114100 home_message_stats_info "114101=home_message_stats_info,114102=stats_{field}is_{value_label}[and_]{tfield}[is_]{tvalue},114103=n/a,114104=1,114124=1,114105=1,114148=1,114146=1,114135=1,114110=1,114126=1,114115=1,114149=1,114147=1,114151=1,114120=For each record where Field is equal to Value the total is incremented. Test Field [== Test Value] is an optional extra precondition.,114158=cclass={class}\r\nclass1={fclass}\r\nfield1={field}\r\nvalue1={value_leftpart}\r\nclass2={tfclass}\r\nfield2={tfield}\r\nvalue2={tvalue},114166=title={value_rightpart}"
perform_create sys 20120102 Meta 114100 home_message_stats_2 "114101=home_message_stats_2,114102=stats_{child},114103=n/a,114104=1,114139=1,114191=1,114136=1,114138=1,114146=1,114145=1,114140=115436$115100.301405,301710=home_message_stats_info,114147=1,114149=1,114153=1,114151=1,114120=All Child Relationship records will be iterated in order to determine the statisical value. Permission is an optional required permission to be able to see this value.,114164=stats2,114158=stats2_cfield={child}\r\nstats2_perm={permission_id}"
perform_create sys 20120102 Meta 114100 home_message_stats_1 "114101=home_message_stats_1,114102=stats_{child},114103=n/a,114104=1,114139=1,114191=1,114138=1,114146=1,114145=1,114140=115436$115100.301405,301710=home_message_stats_info,114150=115435$115100.301405,301720=home_message_stats_2,114147=1,114149=1,114153=1,114151=1,114120=All Child Relationship records will be iterated in order to determine the statisical value.,114164=stats1,114158=stats1_cfield={child}"
perform_create sys 20120102 Meta 114100 home_message_secondary "114101=home_message_secondary,114102=secondary,114103=n/a,114104=1,114136=1,114152=1,114146=1,114140=115434$115100.301405,301710=home_message_stats_1,114147=1,114149=1,114153=1,114151=1,114120=Secondary statistics are obtained from Source Parent of the main specification. Permission is an optional permission to be able to retreive the secondary stats.,114164=secondary,114158=secondary_perm={permission_id}"
perform_create sys 20120102 Meta 114100 transient_field_from_child_concat_child "114101=transient_field_from_child_concat_child,114102=iterate_child_for_{field}info[_by_]{sfield},114103=n/a,114104=1,114124=1,114148=1,114146=1,114128=1,114149=1,114147=1,114151=1,114120=If Field is provided then it's value will be used (otherwise the record's key) and if Source Field is provided it will be used for ordering.,114158=cfield={field}\r\nofield={sfield}"
perform_create sys 20120102 Meta 114100 transient_search_rep_from_child_vars_child "114101=transient_search_rep_from_child_vars_child,114102=search_rep_vars_from_{field}and_{sfield},114103=n/a,114104=1,114148=1,114146=1,114124=1,114105=1,114128=1,114113=1,114147=1,114149=1,114151=1,114120=Field is the search \"name\" and Source Field is the replacement \"value\".,114158=varname={field}\r\nvarvalue={sfield}"
perform_create sys 20120102 Meta 114100 trigger_child_cascade_search_replace_cinfo "114101=trigger_child_cascade_search_replace_cinfo,114102={field}with_{scfield},114103=n/a,114168=1,114148=1,114104=1,114146=1,114137=1,114124=1,114105=1,114125=1,114121=1,114122=1,114149=1,114147=1,114151=1,114158=field={scfield}\r\ncfield={field}"
perform_create sys 20120102 Meta 114100 trigger_child_cascade_status_source_info "114101=trigger_child_cascade_status_source_info,114102={class}{spfield}source_info,114103=n/a,114104=1,114124=1,114111=50,114135=1,114146=1,114110=1,114147=1,114148=1,114149=1,114151=1,114120=The Field must be a matching FK for the parent Source Parent field and the Value is status key for the matching child record.,114158=special_value={value}\r\nspecial_cfield={field}\r\n"
perform_create sys 20120102 Meta 114100 trigger_child_cascade_status_info "114101=trigger_child_cascade_status_info,114102={field}info,114103=n/a,114104=1,114124=1,114105=1,114135=1,114128=1,114110=1,114146=1,114147=1,114148=1,114149=1,114150=115437$115100.301405,301720=trigger_child_cascade_status_source_info,114151=1,114120=Field is the \"status\" and Value is the value to be cascaded. Source Field as an optional \"order\" field.,114158=child_field={field}\r\norder_field={sfield}\r\nstatus_value={value}"
perform_create sys 20120102 Meta 114100 trigger_clone_default_user_children_info "114101=trigger_clone_default_user_children_info,114102={class}{spfield}info,114103=n/a,114148=1,114146=1,114147=1,114149=1,114125=1,114112=1,114151=1,114120=Source Parent is the \"user\".,114158=ufield={spfield}"
perform_create sys 20120102 Meta 114100 trigger_clone_for_fk_children_sinfo_cinfo "114101=trigger_clone_for_fk_children_sinfo_cinfo,114102={child}info,114103=n/a,114104=1,114148=1,114191=1,114138=1,114146=1,114147=1,114149=1,114151=1,114150=,114120=Child Relationship is where records will be cloned.,114158=schildren={child}"
perform_create sys 20120102 Meta 114100 trigger_clone_for_fk_children_sinfo "114101=trigger_clone_for_fk_children_sinfo,114102={child}info,114103=n/a,114104=1,114152=1,114191=1,114138=1,114146=1,114140=115432$115100.301405,301710=trigger_clone_for_fk_children_sinfo_cinfo,114147=1,114149=1,114151=1,114150=,114120=After saving click \"Add Child Info\" to continue.,114158=children={child}"
perform_create sys 20120102 Meta 114100 trigger_copy_self_children_for_create_grandchild "114101=trigger_copy_self_children_for_create_grandchild,114102={child}grandchild,114103=n/a,114104=1,114146=1,114191=1,114138=1,114147=1,114148=1,114149=1,114151=1,114157=1"
perform_create sys 20120102 Meta 114100 trigger_copy_self_children_for_create_children "114101=trigger_copy_self_children_for_create_children,114102={child}children,114103=n/a,114104=1,114146=1,114191=1,114138=1,114147=1,114140=115438$115100.301405,301710=trigger_copy_self_children_for_create_grandchild,114145=1,114149=1,114151=1,114152=1,114153=1,114155=1"
perform_create sys 20120102 Meta 114100 user_info_extra_select "114101=user_info_extra_select,114102=select,114103=n/a,114104=1,114152=1,114146=1,114124=1,114125=1,114174=1,114183=1,114126=1,114136=1,114117=1,114149=1,114147=1,114151=1,114120=Use Field to specify a user restriction selection field and optionally Source Parent to the \"user\" class if options are user constrained\\, Other_Field for \"user other\" key override\\, Other_Field_2 for \"access level\" override\\, Test Field for ordering and a required Permission.\r\n\r\nUse Option \"-strict\" to prevent unrestricted selection.,114158=pfield={field_id}\r\nkoverride={ofield_id}\r\nsoverride={o2field_id}\r\npcfield={spfield_id}\r\nofield={tfield_id}\r\nslperm={permission_id}\r\nsclsnm={class}\r\nostrict={?-strict}"
perform_create sys 20120102 Meta 114100 qlink_info_details "114101=qlink_info_details,114102=qlink_info_details,114103=n/a,114104=1,114124=1,114105=1,114113=1,114128=1,114126=1,114114=1,114136=1,114139=1,114146=1,114147=1,114149=1,114151=1,114120=Field is the \"name\" field and Source Field is the \"URL\" suffix. The Test Field is to hold values for FCGI checksum calcuation that is used to prevent URL tampering and the optional Permission will determine whether a user can add quick links.,114158=name={field_id}\r\nurl={sfield_id}\r\nchecksum={tfield_id}\r\nperm={permission_id}"
perform_create sys 20120102 Meta 114100 check_compare_fields "114101=check_compare_fields,114102=check_{class}{field}{tvalue}{tpfield}{tcfield}{tfield},114103=check_compare_fields,114104=1,114124=1,114105=1,114142=1,114126=1,114115=1,114116=1,114117=1,114120=Test Value being one of \"eq\"\\, \"neq\"\\, \"lt\"\\, \"gt\"\\, \"lteq\"\\ or \"gteq\".\r\n\r\nUse Option \"-ignore_null\" to ignore test if either field is null and \"-not_parent_edit\" to ignore this check if the parent is being edited.,114158=class={class}\r\nfield={field}\r\ntfield={tfield}{tcfield}\r\ntpfield={tpfield}\r\ntestop={tvalue}\r\nnot_null={?-ignore_null}\r\nnot_pedit={?-not_parent_edit}\r\nsections=validate"
perform_create sys 20120102 Meta 114100 check_cond_ignore_uneditable "114101=check_cond_ignore_uneditable,114102=check_{class}{tpfield}{tcfield}{tfield}[is_]{tvalue},114103=check_cond_ignore_uneditable,114104=1,114142=1,114126=1,114115=1,114120=Test Field/Child is either itself a conditional or will be compared to Test Value.,114158=class={class}\r\ntfield={tcfield}{tfield}\r\ntpfield={tpfield}\r\ntvalue={tvalue}\r\nsections=get_state"
perform_create sys 20120102 Meta 114100 check_cond_non_null "114101=check_cond_non_null,114102=check_{class}{field}non_null_if_{sfield}{spfield}{scfield}[and_]{tpfield}{tcfield}{tfield}[is_]{tvalue},114103=check_cond_non_null,114104=1,114128=1,114124=1,114125=1,114121=1,114123=1,114154=1,114126=1,114115=1,114130=35,114131=38,114142=1,114120=Field must be conditionally non-null with Source Field/Child being the condition (and optionally Test Field/Child [== Test Value] for an additional precondition).,114158=class={class}\r\nfield={field}\r\npfield={spfield}\r\ncfield={scfield}{sfield}\r\ntpfield={tpfield}\r\ntfield={tcfield}{tfield}\r\ntvalue={tvalue}\r\nis_neg=\r\ntest_neq=\r\nsections=validate"
perform_create sys 20120102 Meta 114100 check_dep_field_changed "114101=check_dep_field_changed,114102=check_{class}{field}has_changed_if_{tfield}has_changed,114103=check_dep_field_changed,114104=1,114124=1,114105=1,114126=1,114114=1,114127=1,114120=If Test Field has changed then require that Field must have been changed.,114158=class={class}\r\nfield={field}\r\ntfield={tfield}\r\nsections=validate"
perform_create sys 20120102 Meta 114100 check_fk_match "114101=check_fk_match,114102=check_{class}{field}matches_{spfield}{scfield},114103=check_parent_fk_match,114104=1,114124=1,114105=1,114125=1,114112=1,114121=1,114122=1,114118=1,114120=Checks that Field's value matches that of the Source Child field.,114158=class={class}\r\nfield={field}\r\npclass={spclass}\r\npfield={spfield}\r\ncfield={scfield}\r\nsections=validate"
perform_create sys 20120102 Meta 114100 check_fk_match_with_original "114101=check_fk_match_with_original,114102=check_original_{class}{field}matches_{spfield}{scfield},114103=check_child_match_with_original,114104=1,114124=1,114105=1,114125=1,114112=1,114121=1,114122=1,114158=nsections=validate"
perform_create sys 20120102 Meta 114100 check_for_repeated_values "114101=check_for_repeated_values,114102=check_{class}for_repeated_values,114103=check_no_repeats,114104=1,114117=1,114120=Use option \"-skip_nulls\" to ignore repeated null values.,114158=sections=validate"
perform_create sys 20120102 Meta 114100 check_for_repeated_values_field_list "114101=check_for_repeated_values_field_list,114102=field_list,114103=n/a,114139=1,114140=115430$115100.301405,301700=check_for_repeated_values,301710=field,114147=1"
perform_create sys 20120102 Meta 114100 check_modifier_non_null "114101=check_modifier_non_null,114102=check_{class}{field}non_null_if_{modifier},114103=modifier_field_required,114104=1,114124=1,114105=1,114197=1,114107=1,114158=field={field}\r\nmodifier={modifier}\r\nsections=validate"
perform_create sys 20120102 Meta 114100 check_null_match "114101=check_null_match,114102=check_{class}{field}and_{tfield}null_match,114103=check_null_match,114104=1,114124=1,114105=1,114111=20,114126=1,114114=1,114127=1,114120=Field and Test Field must both be matching text types.114158=sections=validate"
perform_create sys 20120102 Meta 114100 check_null_or_gteq "114101=check_null_or_gteq,114102=check_{class}{field}is_greater_than_or_equal_to_{tfield},114103=check_null_or_gteq,114104=1,114124=1,114105=1,114111=30,114126=1,114114=1,114127=1,114120=If Field is non-null then it is checked to be greater than or equal to Test Field.,114158=class={class}\r\nfield={field}\r\nfield2={tfield}\r\nsections=validate"
perform_create sys 20120102 Meta 114100 check_user_ignore_uneditable "114101=check_user_ignore_uneditable,114102=check_{class}{spfield}{scfield}{tvalue}{tpfield}{tcfield}{tfield}[and_]{ofield},114103=check_user_ignore_uneditable,114125=1,114124=1,114174=1,114112=1,114121=1,114122=1,114104=1,114142=1,114126=1,114115=1,114117=1,114171=1,114120=Field is for \"actions\" with Procedure to be appended. Source Child is the field that will be checked in the comparison with Test Field/Child.\r\n\r\nIf Test Field/Child is being used then ensure that Test Value is one of \"eq\"\\, \"neq\"\\, \"lt\"\\, \"gt\"\\, \"lteq\"\\ or \"gteq\".\r\n\r\nOther Field is an optional additional condition with the Option \"-test_neq\" available to invert its test.\r\n\r\nUse Option \"-var=<varname>\" to use a variable in place of Source Parent/Child if value was provided. Use option \"-prompt\" to force UI confirmation for action and \"-back_for_view\" to force a UI \"back\" to occur after the action completes if records are not being iterated.,114158=class={class}\r\nactions={field}\r\nspclass={spclass}\r\nspfield={spfield}\r\nscfield={scfield}\r\ntfield={tfield}{tcfield}\r\ntpfield={tpfield}\r\ntestop={tvalue}\r\notfield={ofield}\r\notest_neq={?-test_neq}\r\nprocedure={procedure}\r\nvname={#-var}\r\nprompt={?-prompt}\r\nback_for_view={?-back_for_view}\r\nsections=get_state after_fetch get_always_required_field_names"
perform_create sys 20120102 Meta 114100 default_fk_from_user_fk_default "114101=default_fk_from_user_fk_default,114102=default_{class}{field}to_{spfield}{scfield}default,114103=default_group_fk_for_user,114104=1,114124=1,114105=1,114111=50,114125=1,114112=1,114121=1,114122=1,114120=Defaults foreign key to a hard-coded group default record (Source Child must be a FK to the group).,114158=class={class}\r\npfield={field}\r\nufield={spfield}\r\ngfield={scfield}\r\nsections=at_create"
perform_create sys 20120102 Meta 114100 default_fk_global "114101=default_fk_global,114102=default_{class}{field}to_{value_label},114103=fk_default,114104=1,114124=1,114105=1,114135=1,114110=1,114111=50,114120=Defaults foreign key to a hard-coded value (i.e. FK record must be part of initial data).,114158=class={class}\r\nfield={field}\r\nvalue={value}\r\nsections=at_create"
perform_create sys 20120102 Meta 114100 default_for_clone "114101=default_for_clone,114102=field_{class}{field}to_default_for_clone,114103=default_for_clone,114104=1,114124=1,114105=1,114158=class={class}\r\nfield={field}\r\nsections=after_fetch"
perform_create sys 20120102 Meta 114100 default_from_key "114101=default_from_key,114102=default_{class}{field}from_key,114103=default_from_key,114104=1,114124=1,114105=1,114117=1,114120=Use option \"-not_new\" to prevent usage in a new record and \"-check_null\" to check Field is null before defaulting.\r\n\r\nUse option \"-func=<func>\" to transform Field with the key value via a suitable function and \"-include_clones\" if defaulting is required for cloned records.\r\n\r\nUse option \"-for_store\" to only occur after validation and option \"-append=<value>\" to append a literal. Option \"-skip_fk_handling\" is provided to bypass normal FK handling (this should generally not be used).,114158=class={class}\r\nfield={field}\r\nfunc={#-func}\r\nnot_dflt={?-not_new}\r\nchk_null={?-check_null}\r\nfor_store={?-for_store}\r\nfmandatory={fmandatory}\r\nappend={#-append}\r\ninc_clones={?-include_clones}\r\nskip_fk_handling={?-skip_fk_handling}\r\nsections=value_will_be_provided to_store for_store"
perform_create sys 20120102 Meta 114100 default_from_other_field "114101=default_from_other_field,114102=default_{class}{field}from_{sfield}{spfield}{scfield}[if_]{tpfield}{tcfield}{tfield}[is_]{tvalue},114103=default_to_field,114104=1,114128=1,114124=1,114125=1,114121=1,114123=1,114154=1,114117=1,114126=1,114115=1,114142=1,114120=Use option \"-convert=<convert func>\" to convert Field and \"-append=<value>\" to append a literal and \"-not_new\" to prevent usage in a new record or \"-for_store\" to only occur after validation and \"-include_clones\" if defaulting is required for cloned records.,114158=class={class}\r\nfield={field}\r\nsfield={sfield}{scfield}\r\npfield={spfield}\r\ntfield={tfield}{tcfield}\r\ntpfield={tpfield}\r\ntvalue={tvalue}\r\nappend={#-append}\r\ncvt_func={#-convert}\r\nnot_dflt={?-not_new}\r\nfor_store={?-for_store}\r\nfmandatory={fmandatory}\r\nfistexttype={fistexttype}\r\ninc_clones={?-include_clones}\r\nsections=value_will_be_provided to_store for_store"
perform_create sys 20120102 Meta 114100 default_to_dtm "114101=default_to_dtm,114102=default_{class}{field}to_dtm,114103=default_to_dtm,114104=1,114124=1,114105=1,114117=,114120=Use option \"-for_store\" to only occur after validation.,114158=class={class}\r\nfield={field}\r\nfor_store={?-for_store}\r\nfmandatory={fmandatory}\r\nsections=value_will_be_provided to_store for_store"
perform_create sys 20120102 Meta 114100 default_to_global "114101=default_to_global,114102=default_{class}{field}to_{value_label}[if_has_]{tfield}[equal_to_]{tvalue},114103=default_to_global,114104=1,114124=1,114105=1,114135=1,114110=1,114115=1,114128=1,114126=1,114142=1,114117=1,114120=Source Field and Test Field/Child [== Test Value] are optional preconditions. Use option \"-default_only\" to only apply to a default new record and option \"-include_existing\" to set even for existing records.\r\n\r\nNote that If the field is a FK then the value must be the key of a pre-populated DB record.,114158=class={class}\r\nfield={field}\r\nvalue={value_literal}\r\ncfield={sfield}\r\ntpfield={tpfield}\r\ntfield={tfield}{tcfield}\r\ntvalue={tvalue}\r\ndflt_only={?-default_only}\r\ninc_exist={?-include_existing}\r\nsections=to_store"
perform_create sys 20120102 Meta 114100 default_to_label "114101=default_to_label,114102=default_{class}{field}to_{value_label},114103=default_to_label,114104=1,114124=1,114105=1,114135=1,114110=1,114163=1,114120=Value is the default label.,114158=class={class}\r\nfield={field}\r\nlabel_str={id}_label\r\nftransient={ftransient}\r\nsections=after_fetch to_store,114166=label={value}"
perform_create sys 20120102 Meta 114100 default_to_uid "114101=default_to_uid,114102=default_{class}{field}to_uid,114103=default_to_uid,114104=1,114124=1,114105=1,114117=1,114120=Use option \"-for_store\" to only occur after validation.,114158=class={class}\r\nfield={field}\r\nfor_store={?-for_store}\r\nfmandatory={fmandatory}\r\nsections=value_will_be_provided to_store for_store"
perform_create sys 20120102 Meta 114100 field_action "114101=field_action,114102=field_{class}{field}{procedure}[creates_]{newclass},114103=field_empty_action,114104=1,114124=1,114105=1,114135=1,114170=603100,114128=1,114125=1,114121=1,114123=1,114171=1,114106=1,114117=1,114120=Field will contain the action. Source Field/Child is an optional non-null precondition and Value is used as the action if the test is null.\r\n\r\nUse option \"-create_only\" to apply to new records only and \"-negate\" to logically negate the precondition and \"-is_testval\" to use Value as a test value for Source Field/Child.,114158=class={class}\r\nact_field={field}\r\npfield={spfield}\r\nfield={scfield}{sfield}\r\ntfield={tfield}\r\nis_neg={?-negate}\r\nnvalue={value}\r\ncreate_only={?-create_only}\r\nis_testval={?-is_testval}\r\nsections=to_store"
perform_create sys 20120102 Meta 114100 field_clear "114101=field_clear,114102=field_clear_{class}{field}[if_]{sfield}{spfield}{scfield}[and_]{tfield},114103=field_clear,114104=1,114124=1,114105=1,114128=1,114125=1,114121=1,114126=1,114130=35,114131=38,114123=1,114117=1,114120=Both Source Field/Child and Test Field are optional preconditions but Test Field should not be supplied unless Source Field/Child has also been supplied. Use option \"-for_store\" to only occur after validation.,114158=class={class}\r\nfield={field}\r\nsfield={sfield}{scfield}\r\nspfield={spfield}\r\ntfield={tfield}\r\nis_neg=\r\nfor_store={?-for_store}\r\nsections=to_store for_store"
perform_create sys 20120102 Meta 114100 field_clear_not1 "114101=field_clear_not1,114102=field_clear_{class}{field}if_not_{sfield}{spfield}{scfield},114103=field_clear,114104=1,114124=1,114105=1,114128=1,114113=1,114125=1,114121=1,114130=35,114131=38,114123=1,114117=1,114120=Source Field/Child is a mandatory negative precondition. Use option \"-for_store\" to only occur after validation.,114158=class={class}\r\nfield={field}\r\nsfield={sfield}{scfield}\r\nspfield={spfield}\r\ntfield={tfield}\r\nis_neg=true\r\nfor_store={?-for_store}\r\nsections=to_store for_store"
perform_create sys 20120102 Meta 114100 field_clear_not2 "114101=field_clear_not2,114102=field_clear_{class}{field}if_{sfield}{spfield}{scfield}and_not_{tfield},114103=field_clear,114104=1,114124=1,114105=1,114128=1,114113=1,114125=1,114121=1,114126=1,114114=1,114130=35,114131=38,114123=1,114117=1,114120=Source Field/Child is a mandatory precondition and Test Field is a mandatory negative precondition. Use option \"-for_store\" to only occur after validation.,114158=class={class}\r\nfield={field}\r\nsfield={sfield}{scfield}\r\nspfield={spfield}\r\ntfield={tfield}\r\nis_neg=true\r\nfor_store={?-for_store}\r\nsections=to_store for_store"
perform_create sys 20120102 Meta 114100 field_clear_on_changed_fk "114101=field_clear_on_changed_fk,114102=field_clear_{class}{field}on_{spfield}change[_if_]{tpfield}{tcfield}{tfield}[is_]{tvalue},114103=field_clear_on_changed_fk,114104=1,114124=1,114105=1,114125=1,114112=1,114115=1,114126=1,114142=1,114117=1,114120=Test Field/Child [== Test Value] is an optional precondition. Use option \"-ignore={new|create}\" to ignore new records or records being created.,114158=class={class}\r\ndfield={field}\r\npfield={spfield}\r\ntpfield={tpfield}\r\ntfield={tcfield}{tfield}\r\ntvalue={tvalue}\r\nnot_create={?-ignore=create}\r\nnot_dflt={?-ignore=new}\r\nsections=to_store"
perform_create sys 20120102 Meta 114100 field_dependency "114101=field_dependency,114102=field_dependency_{class}{field}upon_{sfield},114103=field_dependency,114104=1,114124=1,114105=1,114128=1,114113=1,114120=Source Field will always be included if Field is in the field list.,114158=class={class}\r\nfield={field}\r\nsfield={sfield}\r\nsections=get_required_field_names"
perform_create sys 20120102 Meta 114100 field_from_changed_fk "114101=field_from_changed_fk,114102=field_{class}{field}from_changed_{spfield}{scfield},114103=field_from_changed_fk,114104=1,114124=1,114105=1,114125=1,114112=1,114117=1,114121=1,114122=1,114120=Use option \"-for_store\" to only occur after validation or option \"-new=also|only\" to apply also/only to new records. Use option \"-update_only\" to only apply to existing records and \"-not_null\" to not change value if Source Parent is null.,114158=class={class}\r\ndfield={field}\r\npfield={spfield}\r\nsfield={scfield}\r\nfor_store={?-for_store}\r\nfmandatory={fmandatory}\r\nnew_only={?-new=only}\r\ninc_dflt={?-new=also}\r\nnot_create={?-update_only}\r\nnot_null={?-not_null}\r\nsections=value_will_be_provided to_store for_store"
perform_create sys 20120102 Meta 114100 field_from_child_concat "114101=field_from_child_concat,114102=field_{class}{field}from_{child}children,114103=field_from_child_concat,114104=1,114124=1,114105=1,114135=1,114191=1,114138=1,114117=1,114140=115432$115100.301405,301710=field_from_child_concat_cinfo,114120=Field will be the concatenated values from the Child Relationship records. Value is an optional record separator.\r\n\r\nUse option \"-embed_links\" to put link information into the field (the field will need to have the \"manual_link\" extra setting for this to work).\r\n\r\nAfter saving click \"Add Child Info\" to continue.,114158=class={class}\r\nfield={field}\r\nchildren={child}\r\nseparator={value_string}\r\ncclass={cclass}\r\nembed_links={?-embed_links}\r\nsections=for_store after_store after_destroy"
perform_create sys 20120102 Meta 114100 field_from_concatenation "114101=field_from_concatenation,114102=field_{class}{field}from_concatenation,114103=field_from_concatenation,114104=1,114124=1,114105=1,114117=1,114135=1,114120=Field will be the concatenated \"field list\". Value is an optional separator.,114158=class={class}\r\ndfield={field}\r\nfield_list={fields}\r\nseparator={value}\r\nsections=to_store"
perform_create sys 20120102 Meta 114100 field_from_concatenation_field_list "114101=field_from_concatenation_field_list,114102=field_list,114103=n/a,114139=1,114140=115430$115100.301405,301700=field_from_concatenation,301710=field,114147=1"
perform_create sys 20120102 Meta 114100 field_from_first_child "114101=field_from_first_child,114102=field_{class}{field}from_first_{child},114103=fk_link_first_child,114104=1,114124=1,114105=1,114126=1,114115=1,114117=1,114191=1,114138=1,114140=115432$115100.301405,114145=1,301710=field_first_child_opt_order,114120=Field will be obtained from the Child Relationship. Test Field and Test Value are optional preconditions. Use option \"-for_store\" to perform after validation and option \"-create_only\" to only apply to records being created or \"-update_only\" to only apply to existing records.,114158=class={class}\r\nfield={field}\r\nchild={child}\r\nchild_class={cclass}\r\npfield=\r\nstatus_field={tfield}\r\nstatus_value={tvalue}\r\nfor_store={?-for_store}\r\nfmandatory={fmandatory}\r\nnew_only={?-create_only}\r\nnot_create={?-update_only}\r\nreverse=\r\nsections=value_will_be_provided to_store for_store"
perform_create sys 20120102 Meta 114100 field_from_first_fk_child "114101=field_from_first_fk_child,114102=field_{class}{field}from_first_{spfield}child,114103=fk_link_first_child,114104=1,114124=1,114105=1,114125=1,114112=1,114126=1,114115=1,114117=1,114140=115437$115100.301405,301710=field_first_source_info,114120=Field will be obtained from a child relationship of the Source Parent. Test Field and Test Value are optional preconditions. Use option \"-for_store\" to perform after validation and option \"-create_only\" to only apply to records being created or \"-update_only\" to only apply to existing records.,114158=class={class}\r\nfield={field}\r\npfield={spfield}\r\nstatus_field={tfield}\r\nstatus_value={tvalue}\r\nfor_store={?-for_store}\r\nfmandatory={fmandatory}\r\nnew_only={?-create_only}\r\nnot_create={?-update_only}\r\nreverse=\r\nsections=value_will_be_provided to_store for_store"
perform_create sys 20120102 Meta 114100 field_from_last_child "114101=field_from_last_child,114102=field_{class}{field}from_last_{child},114103=fk_link_first_child,114104=1,114124=1,114105=1,114126=1,114115=1,114117=1,114191=1,114138=1,114140=115432$115100.301405,114145=1,301710=field_first_child_opt_order,114120=Field will be obtained from the Child Relationship. Test Field and Test Value are optional preconditions. Use option \"-for_store\" to perform after validation and option \"-create_only\" to only apply to records being created or \"-update_only\" to only apply to existing records.,114158=class={class}\r\nfield={field}\r\nchild={child}\r\nchild_class={cclass}\r\npfield=\r\nstatus_field={tfield}\r\nstatus_value={tvalue}\r\nfor_store={?-for_store}\r\nfmandatory={fmandatory}\r\nnew_only={?-create_only}\r\nnot_create={?-update_only}\r\nreverse=true\r\nsections=value_will_be_provided to_store for_store"
perform_create sys 20120102 Meta 114100 field_from_last_fk_child "114101=field_from_last_fk_child,114102=field_{class}{field}from_last_{spfield}child,114103=fk_link_first_child,114104=1,114124=1,114105=1,114125=1,114112=1,114126=1,114115=1,114117=1,114140=115437$115100.301405,301710=field_first_source_info,114120=Field will be obtained from a child relationship of the Source Parent. Test Field and Test Value are optional preconditions. Use option \"-for_store\" to perform after validation and option \"-create_only\" to only apply to records being created or \"-update_only\" to only apply to existing records.,114158=class={class}\r\nfield={field}\r\npfield={spfield}\r\nstatus_field={tfield}\r\nstatus_value={tvalue}\r\nfor_store={?-for_store}\r\nfmandatory={fmandatory}\r\nnew_only={?-create_only}\r\nnot_create={?-update_only}\r\nreverse=true\r\nsections=value_will_be_provided to_store for_store"
perform_create sys 20120102 Meta 114100 field_from_op_field "114101=field_from_op_field,114102=field_{class}{field}from_{sfield}{tvalue}{ofield}[if_]{tfield}[in_]{procedure},114103=field_from_op,114104=1,114124=1,114105=1,114174=1,114175=1,114128=1,114113=1,114117=1,114118=1,114126=1,114115=1,114131=30,114116=1,114171=1,114120=Field is Source Field \"op\" Other Field. Test Field is an optional precondition and Test Value must be one of \"add | sub | mul | div | and | or | xor | mod | bitand | bitor | bitnot | bitsleft | bitsright\". If Procedure is provided then it will be used as the source point rather than \"to_store\" or \"for_store\".\r\n\r\nUse option \"-type=<type>\" to cast Other Field and option \"-for_store\" to only occur after validation. If using Procedure then can use option \"-update\" to perform a record update. Use option \"-check={default|notdefault}\" to only perform op if Source Field is (not) its default value.,114158=class={class}\r\nofield={ofield}\r\nfield={field}\r\nfmandatory={fmandatory}\r\nsfield={sfield}\r\ntfield={tfield}\r\nop={tvalue}\r\nprocedure={procedure}\r\ntype={#-type}\r\nfor_store={?-for_store}\r\nupdate={?-update}\r\ncheck={#-check}\r\nvalue=\r\nsections=procedure value_will_be_provided to_store for_store get_required_field_names"
perform_create sys 20120102 Meta 114100 field_from_op_value "114101=field_from_op_value,114102=field_{class}{field}from_{sfield}{tvalue}{value_numstr}[if_]{tfield}[in_]{procedure},114103=field_from_op,114104=1,114124=1,114105=1,114135=1,114110=1,114111=30,114128=1,114113=1,114117=1,114118=1,114126=1,114115=1,114131=30,114116=1,114171=1,114120=Field is Source Field \"op\" Value. Test Field is an optional precondition and Test Value must be one of \"add | sub | mul | div | and | or | xor | mod | bitand | bitor | bitnot | bitsleft | bitsright\". If Procedure is provided then it will be used as the source point rather than \"to_store\" or \"for_store\".\r\n\r\nUse option \"-type=<type>\" to cast Value and option \"-for_store\" to only occur after validation. If using Procedure then can use option \"-update\" to perform a record update. Use option \"-check={default|notdefault}\" to only perform op if Source Field is (not) its default value.,114158=class={class}\r\nvalue={value}\r\nfield={field}\r\nfmandatory={fmandatory}\r\nsfield={sfield}\r\ntfield={tfield}\r\nop={tvalue}\r\nprocedure={procedure}\r\ntype={#-type}\r\nfor_store={?-for_store}\r\nupdate={?-update}\r\ncheck={#-check}\r\nofield=\r\nsections=procedure value_will_be_provided to_store for_store get_required_field_names"
perform_create sys 20120102 Meta 114100 field_from_other_field "114101=field_from_other_field,114102=field_{class}{field}from_{sfield}{spfield}{scfield}[if_]{tfield}{tpfield}{tcfield}[is_]{tvalue},114103=field_from_other_field,114104=1,114124=1,114125=1,114121=1,114123=1,114135=1,114154=1,114128=1,114126=1,114115=1,114117=1,114131=38,114142=1,114120=Test Field/Child [== Test Value] is an optional precondition and if Value is provided it will be used if the Test fails.\r\n\r\nUse option \"-create_only\" to prevent usage in updates and option \"-for_store\" to only occur after validation. Use option \"-func=<func>\" to transform the Source Field/Child value for Field and \"-mfunc=<mfunc>\" to use the specified Source Field's/Child's member function.,114158=class={class}\r\ndfield={field}\r\nfmandatory={fmandatory}\r\npfield={spfield}\r\nsfield={scfield}{sfield}\r\ntpfield={tpfield}\r\ntfield={tcfield}{tfield}\r\ntvalue={tvalue}\r\ncreate_only={?-create_only}\r\nfor_store={?-for_store}\r\nchk_null=\r\nnvalue={value_literal}\r\nfunc={#-func}\r\nmfunc={#-mfunc}\r\nsections=value_will_be_provided to_store for_store get_required_field_names"
perform_create sys 20120102 Meta 114100 field_from_other_non_null_field "114101=field_from_other_non_null_field,114102=field_{class}{field}from_non_null_{sfield}{spfield}{scfield}[if_]{tfield}{tpfield}{tcfield}[is_]{tvalue},114103=field_from_other_field,114104=1,114124=1,114125=1,114121=1,114123=1,114135=1,114154=1,114117=1,114128=1,114126=1,114115=1,114131=38,114142=1,114120=Test Field/Child [== Test Value] is an optional precondition and if Value is provided it will be used if the Source is null or the Test fails.\r\n\r\nUse option \"-create_only\" to prevent usage in updates and option \"-for_store\" to only occur after validation. Use option \"-func=<func>\" to transform the Source Field/Child value for Field and \"-mfunc=<mfunc>\" to use the specified Source Field's/Child's member function.,114158=class={class}\r\ndfield={field}\r\nfmandatory={fmandatory}\r\npfield={spfield}\r\nsfield={scfield}{sfield}\r\ntpfield={tpfield}\r\ntfield={tcfield}{tfield}\r\ntvalue={tvalue}\r\ncreate_only={?-create_only}\r\nfor_store={?-for_store}\r\nchk_null=true\r\nnvalue={value_literal}\r\nfunc={#-func}\r\nmfunc={#-mfunc}\r\nsections=value_will_be_provided to_store for_store get_required_field_names"
perform_create sys 20120102 Meta 114100 field_from_parent_auto_int_inc "114101=field_from_parent_auto_int_inc,114102=field_{class}{field}from_{spfield}{scfield},114103=parent_auto_int_inc,114104=1,114124=1,114105=1,114125=1,114112=1,114121=1,114122=1,114126=1,114117=1,114115=1,114120=Test Field is an optional field for \"id chaining\" (use Test Value as the child's increment suffix). Use option \"-use_static\" to only increment from the class static instance.,114158=class={class}\r\nfield={field}\r\npclass={spclass}\r\npfield={spfield}\r\ncfield={scfield}\r\nnfield={tfield}\r\nnew_val={tvalue}\r\nfmandatory={fmandatory}\r\nstatic={?-use_static}\r\nsections=value_will_be_provided for_store"
perform_create sys 20120102 Meta 114100 field_from_procedure_call "114101=field_from_procedure_call,114102=field_{class}{field}from_{procedure},114103=field_from_procedure_call,114104=1,114124=1,114105=1,114171=1,114106=1,114135=1,114120=Field will get its value from a call to Procedure. Value is an optional argument to pass to the procedure.,114158=class={class}\r\nfield={field}\r\nvalue={value}\r\nprocedure={procedure}\r\ntransient=\r\nsections=finalise_fetch to_store"
perform_create sys 20120102 Meta 114100 field_from_search_replace "114101=field_from_search_replace,114102=field_{class}{field}from_{sfield}{spfield}{scfield}search_replace,114103=field_from_search_replace,114104=1,114124=1,114105=1,114128=1,114121=1,114125=1,114123=1,114117=1,114154=1,114120=Use option \"-keyrep=<token>\" for key replacement token and option \"-include_labels\" to also include field display names.,114158=class={class}\r\ndfield={field}\r\nsfield={spfield}{sfield}\r\ncfield={scfield}\r\nfield_list={fields}\r\nkeyrep={#-keyrep}\r\nftransient={ftransient}\r\nseparator=\r\nopt_prefix=\r\nofield=\r\noleftb=\r\norightb=\r\ninc_labels={?-include_labels}\r\nsections=after_fetch to_store get_required_field_names"
perform_create sys 20120102 Meta 114100 field_from_search_replace_field_list "114101=field_from_search_replace_field_list,114102=field_svlist,114103=n/a,114139=1,114140=115430$115100.301405,301700=field_from_search_replace,301710=field_source_and_value,114147=1"
perform_create sys 20120102 Meta 114100 field_inc_in_proc "114101=field_inc_in_proc,114102=field_{class}{field}to_{procedure},114103=field_inc_in_proc,114104=1,114124=1,114105=1,114171=1,114106=1,114135=1,114110=1,114111=30,114120=For a calendar Value use \"now\" or \"today\" for the present or provide a number and a type (e.g. 2 hours).,114158=class={class}\r\nfield={field}\r\nvalue={value}\r\nproc={procedure}\r\nsections=procedure"
perform_create sys 20120102 Meta 114100 field_to_rounded "114101=field_to_rounded,114102=field_{class}{field}to_rounded,114103=field_to_rounded,114104=1,114124=1,114105=1,114111=4,114117=1,114120=Field must be a numeric and use Option \"-method=<up|down|normal|bankers>\" to specify a method (the default is normal).,114158=class={class}\r\nfield={field}\r\ndecimals={fdecimals}\r\nmethod={#-method}\r\nsections=to_store"
perform_create sys 20120102 Meta 114100 field_value_enum_for_modifier "114101=field_value_enum_for_modifier,114102=field_{class}{field}to_{enum_item}if_{modifier},114103=modifier_set_field,114104=1,114124=1,114105=1,114197=1,114107=1,114198=1,114108=1,114199=1,114109=1,114162=1,114158=class={class}\r\nfield={field}\r\nmodifier={modifier}\r\nvalue={enum_value}\r\nevalue={enum_item}\r\nsections=to_store"
perform_create sys 20120102 Meta 114100 field_value_for_modifier "114101=field_value_for_modifier,114102=field_{class}{field}to_{value_label}if_{modifier},114103=modifier_set_field,114104=1,114124=1,114105=1,114197=1,114107=1,114135=1,114110=1,114158=class={class}\r\nfield={field}\r\nmodifier={modifier}\r\nvalue={value}\r\nevalue=\r\nsections=to_store"
perform_create sys 20120102 Meta 114100 field_value_if_non_null "114101=field_value_if_non_null,114102=field_{class}{field}to_{value_label}if_{tpfield}{tcfield}{tfield}is_non_null,114103=field_empty_action,114104=1,114124=1,114105=1,114135=1,114110=1,114126=1,114142=1,114131=20,114114=1,114117=1,114120=Use option \"-create_only\" to prevent usage in updates and option \"-no_clear\" to prevent field being cleared when Test Field/Child is null."
perform_create sys 20120102 Meta 114100 field_value_if_null "114101=field_value_if_null,114102=field_{class}{field}to_{value_label}if_{tpfield}{tcfield}{tfield}is_null,114103=field_empty_action,114104=1,114124=1,114105=1,114135=1,114110=1,114126=1,114142=1,114131=20,114114=1,114117=1,114120=Use option \"-create_only\" to prevent usage in updates and option \"-no_clear\" to prevent field being cleared when Test Field/Child is non-null."
perform_create sys 20120102 Meta 114100 field_values_from_updating_graph_parent_source_info "114101=field_values_from_updating_graph_parent_source_info,114102=source_info,114103=n/a,114104=1,114148=1,114124=1,114105=1,114111=50,114168=1,114146=1,114125=1,114137=1,114147=1,114149=1,114151=1,114169=1,114120=Select a Field to be the FK source for value copying to the Source Parent then add field pairs to the field list.,114158=pclass={class}\r\npsfield={field}\r\nfield_info={field_pairs}"
perform_create sys 20120102 Meta 114100 field_values_from_updating_graph_parent_source_field_list "114101=field_values_from_updating_graph_parent_source_field_list,114102=field_pair_list,114103=n/a,114104=1,114146=1,114125=1,114137=1,114167=1,114144=1,114140=115431$115100.301405,301700=field_values_from_updating_graph_parent_source_info,301710=field_pair,114147=1,114151=1"
perform_create sys 20120102 Meta 114100 field_values_from_updating_graph_parent "114101=field_values_from_updating_graph_parent,114102=field_values_for_{class}when_{child}is_updating,114103=field_values_from_graph_parent,114104=1,114191=1,114138=1,114140=115437$115100.301405,301710=field_values_from_updating_graph_parent_source_info,114120=Choose a Child Relationship to the graph parent that will update this class then click \"Add Source Info\".,114158=class={class}\r\nsections=to_store"
perform_create sys 20120102 Meta 114100 filter_field_value "114101=filter_field_value,114102=filter_{class}if_{field}is_{value_label}[and_]{tfield},114103=filter_field_value,114104=1,114124=1,114105=1,114135=1,114110=1,114126=1,114120=Use Test Field as an optional precondition.,114158=class={class}\r\nfield={field}\r\nvalue={value}\r\ntfield={tfield}\r\nperm=\r\nsections=is_filtered get_required_field_names"
perform_create sys 20120102 Meta 114100 filter_field_value_perm "114101=filter_field_value_perm,114102=filter_{class}if_{field}is_{value_label}and_not_{permission},114103=filter_field_value,114104=1,114124=1,114105=1,114135=1,114110=1,114136=1,114180=1,114120=If user does not have Permission then filter if Field is equal to Value.,114158=class={class}\r\nfield={field}\r\nvalue={value}\r\nperm={permission_id}\r\ntfield=\r\nsections=is_filtered get_required_field_names"
perform_create sys 20120102 Meta 114100 filter_fk_in_uid_set "114101=filter_fk_in_uid_set,114102=filter_{class}if_{spfield}is_in_{scfield},114103=filter_fk_in_uid_set,114104=1,114125=1,114112=1,114121=1,114122=1,114117=1,114120=Source Parent must be a \"user\" relationship and Source Child is expected to be a key set. Use Option \"-var=<varname>\" to use a variable in place of Source Child.,114158=class={class}\r\nspfield={spfield}\r\nscfield={scfield}\r\nvname={#-var}\r\nsections=is_filtered get_required_field_names"
perform_create sys 20120102 Meta 114100 filter_non_uid "114101=filter_non_uid,114102=filter_{class}if_{spfield}{scfield}does_not_contain_uid,114103=non_uid_filter,114104=1,114125=1,114112=1,114119=52,114121=1,114122=1,114130=0,114120=Source Child Field is expected to contain a comma separated list of User keys (\"transient_field_from_child_concat\" can be used to create a transient for this purpose).,114158=class={class}\r\npclass={spclass}\r\npfield={spfield}\r\ncfield={scfield}\r\nsections=is_filtered"
perform_create sys 20120102 Meta 114100 filter_perm_restricted "114101=filter_perm_restricted,114102=filter_{class}if_{field}is_restricted,114103=filter_perm_restricted,114104=1,114124=1,114105=1,114111=20,114158=class={class}\r\nfield={field}\r\nsections=is_filtered get_required_field_names"
perform_create sys 20120102 Meta 114100 filter_security_level "114101=filter_security_level,114102=filter_{class}if_{field}is_insufficient,114103=filter_security_level,114104=1,114124=1,114105=1,114111=20,114158=class={class}\r\nslevel={field}\r\nsections=is_filtered get_required_field_names"
perform_create sys 20120102 Meta 114100 for_acyclic "114101=for_acyclic,114102=for_{class}acyclic,114103=acyclic,114104=1,114125=1,114112=1,114119=51,114120=Source Parent is the self relationship parent.,114158=class={class}\r\nfield={spfield}\r\nsections=validate"
perform_create sys 20120102 Meta 114100 for_audit_fields "114101=for_audit_fields,114102=for_{class}audit_fields,114103=audit_fields,114104=1,114124=1,114105=1,114174=1,114125=1,114126=1,114120=Field is the \"Created By\" field\\, Other_Field is \"Created On\"\\, Source_Parent is \"Modified By\" and Test_Field is \"Modified On\".,114158=class={class}\r\ncusrfield={field}\r\ncdtmfield={ofield}\r\nmusrfield={spfield}\r\nmdtmfield={tfield}\r\nsections=value_will_be_provided for_store"
perform_create sys 20120102 Meta 114100 for_calc_interest "114101=for_calc_interest,114102=for_{class}{procedure},114103=interest,114104=1,114124=1,114105=1,114111=4,114128=1,114113=1,114130=2,114126=1,114114=1,114131=4,114171=1,114106=1,114132=1,114133=2,114120=Field is the \"balance\"\\, Source Field is the \"last calculation date\" and Test Field is the \"interest rate\". Procedure Arg is the \"new calculation date\"."
perform_create sys 20120102 Meta 114100 for_clone "114101=for_clone,114102=for_{class}clone,114103=for_clone,114104=1,114124=1,114105=1,114125=1,114112=1,114121=1,114122=1,114135=1,114110=1,114171=1,114106=1,114132=1,114126=1,114120=Field and Value will be the unique \"display\" field/value. Source Parent and Child specify a copy \"counter\" to ensure unique keys and Test Field is optionally provided to identity a self-relationship parent. The Procedure is where the \"clone\" implementation will be placed and the Procedure Arg must be a string \"output\" argument so a success message can be returned.,114158=class={class}\r\nfield={field}\r\nvalue={value}\r\nscfield={scfield}\r\nspfield={spfield}\r\ntfield={tfield}\r\nprocedure={procedure}\r\noutput_arg={procedure_arg}\r\nsections=procedure"
perform_create sys 20120102 Meta 114100 for_cms_gen "114101=for_cms_gen,114102=for_{class}cms_gen,114103=for_cms_gen,114104=1,114170=603400,114120=Note that the Generate Children Field and Required Links Field must be transient.,114158=pgclass={class}\r\npgcode={pgcode}\r\npgtitle={pgtitle}\r\npgfname={pgfname}\r\npgfnamegen={pgfnamegen}\r\npgstitle={pgstitle}\r\npgparent={pgparent}\r\npgactions={pgactions}\r\npgtext={pgtext}\r\npgmeta={pgmeta}\r\npglink={pglink}\r\npgolinks={pgolinks}\r\npglchild={pglchild}\r\npghyper={pghyper}\r\npgnext={pgnext}\r\npgchildgen={pgchildgen}\r\npgcanclone={pgcanclone}\r\npgchild={pgchild}\r\npggen={pggen}\r\npggenout={pggenout}\r\npgcopy={pgcopy}\r\npgcopyid={pgcopyid}\r\npgcopyout={pgcopyout}\r\nplclass={plclass}\r\nplorder={plorder}\r\nplpage={plpage}\r\nplchild={plchild}\r\npfclass={pfclass}\r\npffile={pffile}\r\npfname={pfname}\r\npfnamegen={pfnamegen}\r\nfrclass={frclass}\r\nfrcode={frcode}\r\nfrgroup={frgroup}\r\nfrmeta={frmeta}\r\ngclass={gclass}\r\ngname={gname}\r\ngextra={gextra}\r\ngbase={gbase}\r\nvclass={vclass}\r\nvname={vname}\r\nvvalue={vvalue}\r\npgctype={pgctype}\r\npggroup={pggroup}\r\nlclass={lclass}\r\nlname={lname}\r\nlgroup={lgroup}\r\nsections=includes anonymous procedure after_fetch to_store for_store for_destroy after_destroy"
perform_create sys 20120102 Meta 114100 for_destroy "114101=for_destroy,114102={class}{procedure},114103=for_destroy,114104=1,114171=1,114106=1,114120=Procedure is for \"destroy\".,114158=class={class}\r\nprocedure={procedure}\r\nsections=procedure"
perform_create sys 20120102 Meta 114100 for_directed_graph "114101=for_directed_graph,114102=for_{class}directed_graph,114103=folder,114104=1,114125=1,114112=1,114119=51"
perform_create sys 20120102 Meta 114100 for_file_attachment "114101=for_file_attachment,114102=for_{class}file_attachment_is_{field},114103=file_attachment,114104=1,114124=1,114105=1,114128=1,114120=Field must be a \"file\" field. Source Field is an optional \"size\" field.,114158=class={class}\r\nfield={field}\r\nfield_id={field_id}\r\nsfield={sfield}\r\nsections=at_create for_store for_destroy"
perform_create sys 20120102 Meta 114100 for_file_content "114101=for_file_content,114102=for_{class}{sfield}file,114103=file_content,114104=1,114124=1,114105=1,114128=1,114113=1,114120=Field is the \"file\" and Source Field is the \"content\".,114158=class={class}\r\nfield={field}\r\nsfield={sfield}\r\nsections=for_store"
perform_create sys 20120102 Meta 114100 for_file_link "114101=for_file_link,114102=for_{class}{field}file_link,114103=file_link,114104=1,114124=1,114105=1,114125=1,114126=1,114114=1,114128=1,114121=1,114123=1,114135=1,114110=1,114120=Field is the \"file link\" and Test Field is the file name with Source Field/Child as an optional prefix. Value is the \"file extension\".,114158=class={class}\r\nfield={field}\r\nfield1={tfield}\r\nfield2={sfield}{scfield}\r\npfield2={spfield}\r\next={value}\r\nsections=for_store for_destroy"
perform_create sys 20120102 Meta 114100 for_file_link_demo "114101=for_file_link_demo,114102=for_{class}{field}file_link_demo,114103=file_link_demo,114104=1,114124=1,114105=1,114135=1,114110=1,114120=Field is the \"file\" and Value is the \"file extension\".\r\n\r\nNote that this specification is intended only to create file links to populate demo attached file records.,114158=class={class}\r\nfield={field}\r\next={value}\r\nsections=for_store"
perform_create sys 20120102 Meta 114100 for_ordered_move "114101=for_ordered_move,114102=for_{class}{field},114103=move_up_and_down,114104=1,114124=1,114105=1,114125=1,114111=0,114140=115439$115100.301405,301710=for_ordered_move_up,114120=Field is the \"order\" field and Source Parent is an optional parent to be updated after moving.\r\n\r\nAfter saving click \"Add Arg 1\" to continue.,114158=class={class}\r\nfield={field}\r\nupdate_parent={spfield}\r\npclass=\r\npfield=\r\nefield=\r\nsections=procedure get_always_required_field_names"
perform_create sys 20120102 Meta 114100 gen_execute "114101=gen_execute,114102=gen_exec_{procedure},114103=gen_script,114104=1,114135=1,114171=1,114106=1,114117=1,114120=Value is an optional \"log comment\" and Procedure is to be \"executed\".\r\n\r\nUse Option \"-auto\" for auto scheduled scripts.,114158=class={class}\r\nclass_id={class_id}\r\ncomment={value}\r\nprocedure={procedure}\r\nprocedure_id={procedure_id}\r\nmodel={model}\r\nmodel_id={model_id}\r\nis_auto={?-auto}\r\nscript={model}_{class}_{procedure}.cin\r\nsections=unused"
perform_create sys 20120102 Meta 114100 gen_pdf_child_list "114101=gen_pdf_child_list,114102=gen_{child}pdf_list,114103=gen_script,114104=1,114124=1,114105=1,114135=1,114110=1,114171=1,114106=1,114191=1,114138=1,114120=Field is for \"order\"\\, Value is the PDF \"list ext\"\\, Procedure is for \"generate\" and Child Relationship for the child list itself.,114158=class={class}\r\nofield={field}\r\nlist_ext={value}\r\ngen_proc={procedure}\r\nchild={child}\r\ncclass={cclass}\r\nmodel={model}\r\nscript={model}_{class}_{procedure}.cin\r\nvars={model}_{cclass}.{value}.pdf.vars.xrep\r\nsections=unused"
perform_create sys 20120102 Meta 114100 home_message_stats "114101=home_message_stats,114102=home_message,114103=home_message_stats,114104=1,114125=1,114140=115433$115100.301405,301710=home_message_secondary,114163=1,114120=Class is the primary source for statistics with Source Parent being an optional secondary source (typically the primary source would be the \"user\" and the secondary the \"group\").,114158=type=stats\r\ncommand={model}_Home_Message\r\ncmd_args=-p=$perms $user\r\nprimary_class={class}\r\nsecondary_class={spfield},114165=secondary_stats1_cclass=\r\nprimary_stats1_cfield=\r\nprimary_stats1_class1=\r\nprimary_stats1_field1=\r\nprimary_stats1_value1=\r\nprimary_stats1_class2=\r\nprimary_stats1_field2=\r\nprimary_stats1_value2=\r\nprimary_stats2_cclass=\r\nprimary_stats2_cfield=\r\nprimary_stats2_perm=\r\nprimary_stats2_class1=\r\nprimary_stats2_field1=\r\nprimary_stats2_value1=\r\nprimary_stats2_class2=\r\nprimary_stats2_field2=\r\nprimary_stats2_value2=\r\nsecondary_perm=\r\nsecondary_stats1_cfield=\r\nsecondary_stats1_class1=\r\nsecondary_stats1_field1=\r\nsecondary_stats1_value1=\r\nsecondary_stats1_class2=\r\nsecondary_stats1_field2=\r\nsecondary_stats1_value2=\r\nsecondary_stats2_cclass=\r\nsecondary_stats2_cfield=\r\nsecondary_stats2_perm=\r\nsecondary_stats2_class1=\r\nsecondary_stats2_field1=\r\nsecondary_stats2_value1=\r\nsecondary_stats2_class2=\r\nsecondary_stats2_field2=\r\nsecondary_stats2_value2="
perform_create sys 20120102 Meta 114100 home_message_primary "114101=home_message_primary,114102=primary,114103=n/a,114104=1,114139=1,114146=1,301700=home_message_stats,114140=115434$115100.301405,301710=home_message_stats_1,114147=1,114151=1,114164=primary"
perform_create sys 20120102 Meta 114100 home_message_top_n "114101=home_message_top_n,114102=home_message,114103=home_message_top_n,114104=1,114124=1,114105=1,114128=1,114113=1,114135=1,114110=1,114120=Field is what will be output and Source Field is used for ordering. Value is the number of records to output.,114158=type=top_n\r\nlimit={value}\r\nclass={class}\r\nfield={field}\r\nofield={sfield}\r\ncommand={model}_{class}_Home_Message\r\ncmd_args=-p=$perms $user"
perform_create sys 20120102 Meta 114100 loop_do_while "114101=loop_do_while,114102=loop_{class}{procedure}calls_{oprocedure}while_{field},114103=loop_do_while,114104=1,114124=1,114105=1,114171=1,114106=1,114187=1,114111=30,114120=Procedure calls Other Procedure and will continue while Field scalar is true.,114158=class={class}\r\nfield={field}\r\nprocedure={procedure}\r\noprocedure={oprocedure}\r\nsections=procedure"
perform_create sys 20120102 Meta 114100 loop_for_int "114101=loop_for_int,114102=loop_{class}{procedure}calls_{oprocedure}{field}times,114103=loop_for_int,114104=1,114124=1,114105=1,114171=1,114106=1,114187=1,114111=5,114120=Procedure will call Other Procedure Field times.,114158=class={class}\r\nfield={field}\r\nprocedure={procedure}\r\noprocedure={oprocedure}\r\nsections=procedure"
perform_create sys 20120102 Meta 114100 loop_while_do "114101=loop_while_do,114102=loop_{class}{procedure}while_{field}calls_{oprocedure},114103=loop_while_do,114104=1,114124=1,114105=1,114171=1,114106=1,114187=1,114111=30,114120=Procedure calls Other Procedure while Field scalar is true.,114158=class={class}\r\nfield={field}\r\nprocedure={procedure}\r\noprocedure={oprocedure}\r\nsections=procedure"
perform_create sys 20120102 Meta 114100 modifier_date_alert "114101=modifier_date_alert,114102=modifier_{class}{modifier}if_{field}is_within_{value_label},114103=modifier_date_notification,114104=1,114124=1,114105=1,114197=1,114107=1,114111=2,114135=1,114110=1,114117=1,114120=Use option \"-annual\" for an annual event.,114158=class={class}\r\nfield={field}\r\nmodifier={modifier}\r\nperiod={value_leftpart}\r\ntype={value_rightpart}\r\nannual={?-annual}\r\nsections=get_state get_always_required_field_names"
perform_create sys 20120102 Meta 114100 modifier_datetime_was_prior "114101=modifier_datetime_was_prior,114102=modifier_{class}{modifier}if_{field}was_prior_to_{value_label}[and_]{tfield}[is_]{tvalue},114103=modifier_past_date_time,114104=1,114124=1,114105=1,114111=41,114197=1,114107=1,114126=1,114135=1,114110=1,114115=1,114120=Test Field [== Test Value] is an optional precondition. Use Value \"now\" or \"today\" for current comparison or provide a number and a type (e.g. 3 hours).,114158=class={class}\r\ndfield={field}\r\ndfprim={primitive}\r\nvalue={value}\r\nmodifier={modifier}\r\ntfield={tfield}\r\ntvalue={tvalue}\r\nfuture=\r\nsections=get_state get_always_required_field_names"
perform_create sys 20120102 Meta 114100 modifier_datetime_will_follow "114101=modifier_datetime_will_follow,114102=modifier_{class}{modifier}if_{field}will_be_after_{value_label}[and_]{tfield}[is_]{tvalue},114103=modifier_past_date_time,114104=1,114124=1,114105=1,114111=41,114197=1,114107=1,114126=1,114135=1,114110=1,114115=1,114120=Test Field [== Test Value] is an optional precondition. Use Value \"now\" or \"today\" for current comparison or provide a number and a type (e.g. 3 hours).,114158=class={class}\r\ndfield={field}\r\ndfprim={primitive}\r\nvalue={value}\r\nmodifier={modifier}\r\ntfield={tfield}\r\ntvalue={tvalue}\r\nfuture=true\r\nsections=get_state get_always_required_field_names"
perform_create sys 20120102 Meta 114100 modifier_field_compare "114101=modifier_field_compare,114102=modifier_{class}{modifier}if_{field}{tvalue}{spfield}{scfield}{sfield}[_and_]{tpfield}{tfield},114103=modifier_field_compare,114104=1,114124=1,114105=1,114128=1,114125=1,114121=1,114123=1,114154=1,114197=1,114107=1,114126=1,114115=1,114142=1,114120=Source Field/Child is compared to Field with Test Value being one of \"eq\"\\, \"neq\"\\, \"lt\"\\, \"gt\"\\, \"lteq\"\\ or \"gteq\". Test Field/Child is an optional precondition.,114158=field={field}\r\nsfield={scfield}{sfield}\r\npfield={spfield}\r\nmodifier={modifier}\r\ntfield={tfield}{tcfield}\r\ntpfield={tpfield}\r\nop={tvalue}\r\nsections=get_state get_always_required_field_names"
perform_create sys 20120102 Meta 114100 modifier_field_non_null "114101=modifier_field_non_null,114102=modifier_{class}{modifier}if_{spfield}{scfield}{sfield}is_non_null[_and_]{tpfield}{tfield}[is_]{tvalue},114103=modifier_field_null,114104=1,114128=1,114125=1,114121=1,114123=1,114154=1,114197=1,114107=1,114117=1,114126=1,114115=1,114142=1,114120=Test Field/Child [== Test Value] is an optional extra test condition. Use option \"-not_new\" to prevent usage in a new record.,114158=field={scfield}{sfield}\r\npfield={spfield}\r\nmodifier={modifier}\r\ntfield={tfield}{tcfield}\r\ntpfield={tpfield}\r\ntvalue={tvalue}\r\nnot_dflt={?-not_new}\r\nis_neg=true\r\nsections=get_state get_always_required_field_names"
perform_create sys 20120102 Meta 114100 modifier_field_null "114101=modifier_field_null,114102=modifier_{class}{modifier}if_{spfield}{scfield}{sfield}is_null[_and_]{tpfield}{tfield}[is_]{tvalue},114103=modifier_field_null,114104=1,114128=1,114125=1,114121=1,114123=1,114154=1,114197=1,114107=1,114117=1,114126=1,114115=1,114142=1,114120=Test Field/Child [== Test Value] is an optional extra test condition. Use option \"-not_new\" to prevent usage in a new record.,114158=field={scfield}{sfield}\r\npfield={spfield}\r\nmodifier={modifier}\r\ntfield={tfield}{tcfield}\r\ntpfield={tpfield}\r\ntvalue={tvalue}\r\nnot_dflt={?-not_new}\r\nis_neg=\r\nsections=get_state get_always_required_field_names"
perform_create sys 20120102 Meta 114100 modifier_field_value "114101=modifier_field_value,114102=modifier_{class}{modifier}if_{spfield}{scfield}{sfield}is_{value_label}[and_]{tpfield}{tfield}[is_]{tvalue},114103=modifier_field_value,114104=1,114128=1,114121=1,114125=1,114123=1,114197=1,114107=1,114135=1,114110=1,114126=1,114115=1,114117=1,114179=1,114142=1,114120=Test Field/Child [== Test Value] is an optional extra test condition. Use option \"-not_new\" to prevent usage in a new record and \"-convert=<convert func>\" to convert the Source Field value.\r\n\r\nValue can be prefixed with a comparision op followed by a space where op can be one of \"eq\"\\, \"neq\"\\, \"lt\"\\, \"gt\"\\, \"lteq\" or \"gteq\".,114158=class={class}\r\nfield={sfield}{scfield}\r\npfield={spfield}\r\nmodifier={modifier}\r\ntfield={tfield}{tcfield}\r\ntpfield={tpfield}\r\ntvalue={tvalue}\r\ntestop={value_leftpart}\r\nvalue={value_rightpart}\r\nevalue=\r\nnot_dflt={?-not_new}\r\nnot_eq=\r\ncvt_func={#-convert}\r\nfistexttype={fistexttype}\r\nsections=get_state get_always_required_field_names"
perform_create sys 20120102 Meta 114100 modifier_field_value_enum "114101=modifier_field_value_enum,114102=modifier_{class}{modifier}if_{field}is_{value}{enum_item}[and_]{tpfield}{tcfield}{tfield}[is_]{tvalue},114103=modifier_field_value,114104=1,114124=1,114105=1,114135=1,114197=1,114107=1,114198=1,114108=1,114199=1,114109=1,114126=1,114115=1,114162=1,114117=1,114142=1,114120=Test Field/Child [== Test Value] is an optional extra test condition. Use option \"-not_new\" to prevent usage in a new record.\r\n\r\nValue is an optional comparision op which can be one of \"eq\"\\, \"neq\"\\, \"lt\"\\, \"gt\"\\, \"lteq\" or \"gteq\",114158=class={class}\r\nfield={field}\r\npfield=\r\nmodifier={modifier}\r\ntfield={tfield}{tcfield}\r\ntpfield={tpfield}\r\ntvalue={tvalue}\r\ntestop={value}\r\nvalue={enum_value}\r\nevalue={enum_item}\r\nnot_dflt={?-not_new}\r\nnot_eq=\r\ncvt_func=\r\nfistexttype={fistexttype}\r\nsections=get_state get_always_required_field_names"
perform_create sys 20120102 Meta 114100 modifier_from_other_mods "114101=modifier_from_other_mods,114102=modifier_{class}{modifier}if_{omodifier}{value}{o2modifier},114103=modifier_from_other_mods,114104=1,114135=1,114110=1,114197=1,114107=1,114202=1,114203=1,114120=Value being set to either \"and\" or \"or\".,114158=modifier={modifier}\r\nlmodifier={omodifier}\r\nrmodifier={o2modifier}\r\nop={value}\r\nsections=get_state"
perform_create sys 20120102 Meta 114100 modifier_key_not_value "114101=modifier_key_not_value,114102=modifier_{class}{modifier}if_key_is_not_{value_label},114103=modifier_key_value,114104=1,114197=1,114107=1,114135=1,114110=1,114158=class={class}\r\nmodifier={modifier}\r\nvalue={value_literal}\r\nextra=\r\nnot_eq=true\r\nsections=get_state"
perform_create sys 20120102 Meta 114100 modifier_key_value "114101=modifier_key_value,114102=modifier_{class}{modifier}if_key_is_{value_label},114103=modifier_key_value,114104=1,114197=1,114107=1,114135=1,114110=1,114117=1,114120=Use option \"-extra={edit|delete}\" to additionally protect the record from editing or deleting.,114158=class={class}\r\nmodifier={modifier}\r\nvalue={value_literal}\r\nextra={#-extra}\r\nnot_eq=\r\nsections=get_state"
perform_create sys 20120102 Meta 114100 modifier_permission "114101=modifier_permission,114102=modifier_{class}{modifier}if_not_{permission}[or_uid_is_not_]{spfield},114103=modifier_permission,114104=1,114197=1,114107=1,114125=1,114136=1,114180=1,114117=1,114120=Source Parent is for an optional \"user\" check. Use option \"-admin_always\" for modifier to always be set for admin.,114158=class={class}\r\nmodifier={modifier}\r\nufield={spfield}\r\npermission={permission}\r\npermission_id={permission_id}\r\nadmin_always={?-admin_always}\r\nremove=\r\nsections=get_state get_always_required_field_names"
perform_create sys 20120102 Meta 114100 modifier_permission_remove "114101=modifier_permission_remove,114102=remove_modifier_{class}{modifier}if_{permission}[and_uid_is_]{spfield},114103=modifier_permission,114104=1,114197=1,114107=1,114125=1,114136=1,114180=1,114117=1,114120=Source Parent is for an optional \"user\" check. Use option \"-admin_always\" for modifier to allways be removed for admin.,114158=class={class}\r\nmodifier={modifier}\r\nufield={spfield}\r\npermission={permission}\r\npermission_id={permission_id}\r\nadmin_always={?-admin_always}\r\nremove=true\r\nsections=get_state get_always_required_field_names"
perform_create sys 20120102 Meta 114100 permit_ignore_uneditable "114101=permit_ignore_uneditable,114102=can_ignore_uneditable_{class}[if_]{tfield},114103=permit_ignore_uneditable,114104=1,114126=1,114120=Test Field is an optional precondition.,114158=class={class}\r\ntfield={tfield}\r\nsections=get_state get_always_required_field_names"
perform_create sys 20120102 Meta 114100 restrict_destroy "114101=restrict_destroy,114102=restrict_destroy_for_{class}if_{sfield}{spfield}{scfield}is_{value_label},114103=destroy_restrict,114104=1,114128=1,114125=1,114121=1,114123=1,114154=1,114135=1,114110=1,114117=1,114120=Use option \"-allow_internal\" to permit application internal destroy operations.,114158=class={class}\r\nfield={sfield}{scfield}\r\npfield={spfield}\r\nvalue={value}\r\nallow_internal={?-allow_internal}\r\nsections=can_destroy"
perform_create sys 20120102 Meta 114100 restrict_paging "114101=restrict_paging,114102=restrict_paging_for_{class}to_{value_label}if_{tfield},114103=restrict_paging,114104=1,114124=1,114105=1,114135=1,114110=1,114126=1,114114=1,114120=Field is for \"ordering\"\\, Value is the \"variable\" to page from and Test Field is the condition for using it.,114158=class={class}\r\npage_field={field}\r\nvariable={value}\r\ntfield={tfield}\r\nsections=add_extra_paging_info"
perform_create sys 20120102 Meta 114100 restrict_protect "114101=restrict_protect,114102=restrict_protect_{class}if_{spfield}{scfield}{sfield}[and_not_]{tfield}[and_not_]{permission},114103=restrict_protect,114104=1,114128=1,114125=1,114121=1,114123=1,114126=1,114136=1,114117=1,114120=Source Field/Child is a conditional which will be ignored if the optional Test_Field condition is true or the user has the optional Permission. Use Option \"-admin_always\" to ignore for admin and \"-no_ignore\" to prevent state ignoring. Use option \"-scope={edit|delete}\" to restrict protection to edit/delete only and \"-unactionable\" to also restrict actions. Use Option \"-changing\" if state is being changed by another session.,114158=field={scfield}{sfield}\r\npfield={spfield}\r\ntfield={tfield}\r\npermission={permission}\r\npermission_id={permission_id}\r\nscope={#-scope}\r\nadmin_always={?-admin_always}\r\nno_ignore={?-no_ignore}\r\nunactionable={?-unactionable}\r\nchanging={?-changing}\r\nsections=get_state get_always_required_field_names"
perform_create sys 20120102 Meta 114100 restrict_protect_equal "114101=restrict_protect_equal,114102=restrict_protect_{class}if_{spfield}{scfield}{sfield}is_{value_label},114103=protect_equal,114104=1,114128=1,114125=1,114121=1,114123=1,114154=1,114179=1,114135=1,114110=1,114117=1,114120=Use option \"-scope={edit|delete}\" to restrict protection to edit/delete only and \"-changing\" if state is being changed by another process.,114158=class={class}\r\nfield={sfield}{scfield}\r\npfield={spfield}\r\nvalue={value_literal}\r\nlabel=\r\nscope={#-scope}\r\nchanging={?-changing}\r\nsections=get_state get_always_required_field_names"
perform_create sys 20120102 Meta 114100 restrict_protect_equal_enum "114101=restrict_protect_equal_enum,114102=restrict_protect_{class}if_{spfield}{scfield}{sfield}is_{enum_item},114103=protect_equal,114104=1,114128=1,114125=1,114121=1,114123=1,114198=1,114108=1,114199=1,114109=1,114154=1,114179=1,114117=1,114120=Use option \"-scope={edit|delete}\" to restrict protection to edit/delete only and \"-changing\" if state is being changed by another process.,114158=class={class}\r\nfield={sfield}{scfield}\r\npfield={spfield}\r\nvalue={enum_value}\r\nlabel={enum_item}\r\nscope={#-scope}\r\nchanging={?-changing}\r\nsections=get_state get_always_required_field_names"
perform_create sys 20120102 Meta 114100 restrict_protect_not_equal "114101=restrict_protect_not_equal,114102=restrict_protect_{class}if_{spfield}{scfield}{sfield}is_not_{value_label},114103=protect_not_equal,114104=1,114128=1,114125=1,114121=1,114123=1,114154=1,114179=1,114135=1,114110=1,114117=1,114120=Use option \"-scope={edit|delete}\" to restrict protection to edit/delete only and \"-changing\" if state is being changed by another process.,114158=class={class}\r\nfield={sfield}{scfield}\r\npfield={spfield}\r\nvalue={value_literal}\r\nlabel=\r\nscope={#-scope}\r\nchanging={?-changing}\r\nsections=get_state get_always_required_field_names"
perform_create sys 20120102 Meta 114100 restrict_protect_not_equal_enum "114101=restrict_protect_not_equal_enum,114102=restrict_protect_{class}if_{spfield}{scfield}{sfield}is_not_{enum_item},114103=protect_not_equal,114104=1,114128=1,114125=1,114121=1,114123=1,114198=1,114108=1,114199=1,114109=1,114154=1,114179=1,114117=1,114120=Use option \"-scope={edit|delete}\" to restrict protection to edit/delete only and \"-changing\" if state is being changed by another process.,114158=class={class}\r\nfield={sfield}{scfield}\r\npfield={spfield}\r\nvalue={enum_value}\r\nlabel={enum_item}\r\nscope={#-scope}\r\nchanging={?-changing}\r\nsections=get_state get_always_required_field_names"
perform_create sys 20120102 Meta 114100 restrict_uid_not_equal "114101=restrict_uid_not_equal,114102=restrict_{class}if_uid_is_not_{field}[or_]{spfield}{scfield}{sfield}[and_not_]{tfield}[and_not_]{permission},114103=restrict_uid_not_equal,114104=1,114124=1,114105=1,114128=1,114121=1,114125=1,114123=1,114126=1,114136=1,114117=1,114120=Field is the \"user\" key and Source Field/Child is an optional conditional override. If the optional Test Field is true or the user has the optional Permission then this restriction will not apply.\r\n\r\nUse option \"-scope={edit|delete}\" to restrict protection to edit/delete only and \"-unactionable\" to also restrict actions. Use Option \"-admin_always\" to prevent the restriction applying to admin.,114158=ufield={field}\r\nsfield={spfield}{sfield}\r\nscfield={scfield}\r\ntfield={tfield}\r\nperm={permission}\r\nperm_id={permission_id}\r\nscope={#-scope}\r\nadmin_always={?-admin_always}\r\nunactionable={?-unactionable}\r\nsections=get_state get_always_required_field_names"
perform_create sys 20120102 Meta 114100 restrict_unactionable_equal "114101=restrict_unactionable_equal,114102=restrict_unactionable_{class}if_{spfield}{scfield}{sfield}[is_|is_null]{value_label},114103=unactionable_field_value,114104=1,114128=1,114125=1,114121=1,114123=1,114154=1,114135=1,114179=1,114120=Record will be \"unactionable\" if field is equal to value.,114158=class={class}\r\npfield={spfield}\r\nfield={sfield}{scfield}\r\nvalue={value}\r\nevalue=\r\nnot_eq=\r\nfistexttype={fistexttype}\r\nsections=get_state get_always_required_field_names"
perform_create sys 20120102 Meta 114100 restrict_unactionable_equal_enum "114101=restrict_unactionable_equal_enum,114102=restrict_unactionable_{class}if_{spfield}{scfield}{sfield}[is_]{enum_item},114103=unactionable_field_value,114104=1,114128=1,114125=1,114121=1,114123=1,114198=1,114108=1,114199=1,114109=1,114154=1,114179=1,114120=Record will be \"unactionable\" if field is equal to enum item.,114158=class={class}\r\npfield={spfield}\r\nfield={sfield}{scfield}\r\nvalue={enum_value}\r\nevalue={enum_item}\r\nnot_eq=\r\nfistexttype={fistexttype}\r\nsections=get_state get_always_required_field_names"
perform_create sys 20120102 Meta 114100 restrict_unactionable_not_equal "114101=restrict_unactionable_not_equal,114102=restrict_unactionable_{class}if_{spfield}{scfield}{sfield}[is_not_|is_not_null]{value},114103=unactionable_field_value,114104=1,114128=1,114125=1,114121=1,114123=1,114154=1,114135=1,114179=1,114120=Record will be \"unactionable\" if field is not equal to value.,114158=class={class}\r\npfield={spfield}\r\nfield={sfield}{scfield}\r\nvalue={value}\r\nevalue=\r\nnot_eq=true\r\nfistexttype={fistexttype}\r\nsections=get_state get_always_required_field_names"
perform_create sys 20120102 Meta 114100 restrict_unactionable_not_equal_enum "114101=restrict_unactionable_not_equal_enum,114102=restrict_unactionable_{class}if_{spfield}{scfield}{sfield}[is_not_]{enum_item},114103=unactionable_field_value,114104=1,114128=1,114125=1,114121=1,114123=1,114198=1,114108=1,114199=1,114109=1,114154=1,114179=1,114120=Record will be \"unactionable\" if field is equal to enum item.,114158=class={class}\r\npfield={spfield}\r\nfield={sfield}{scfield}\r\nvalue={enum_value}\r\nevalue={enum_item}\r\nnot_eq=true\r\nfistexttype={fistexttype}\r\nsections=get_state get_always_required_field_names"
perform_create sys 20120102 Meta 114100 restriction "114101=restriction,114102=restrict_{class}{value_label}[where_]{field_values},114103=n/a,114104=1,114135=1,114163=1,114120=Use the Value \"@parent\" here to restrict to self-related children or \"@xparent\" to exclude the parent record or \"@sort\" to force sorting by the display field in a view restrict selection."
perform_create sys 20120102 Meta 114100 restriction_field_list "114101=restriction_field_list,114102=field_list,114103=n/a,114104=1,114139=1,114140=115430$115100.301405,301700=restriction,301710=field_restrict,114147=1"
perform_create sys 20120102 Meta 114100 transient_add_action_child_create_for_uid "114101=transient_add_child_create_action_for_uid,114102=transient_{class}add_{procedure}to_{field}if_uid_in_{sfield},114103=transient_add_action_child_create_for_uid,114104=1,114124=1,114105=1,114128=1,114113=1,114191=1,114138=1,114171=1,114106=1,114120=Field is the transient \"actions\" field and Source Field is the comma separated list of \"user\" keys.,114158=procedure={procedure}\r\nchild={child}\r\nfield={field}\r\nsfield={sfield}\r\nsections=after_fetch get_required_field_names"
perform_create sys 20120102 Meta 114100 transient_event_overlap "114101=transient_event_overlap,114102=transient_{class}{field},114103=transient_event_overlap,114104=1,114124=1,114105=1,114111=6,114121=1,114122=1,114176=1,114177=1,114126=1,114114=1,114181=1,114120=Field is the \"overlapping\" transient boolean. Source Child is the \"when\" and Source Child 2 is the \"duration\" and Test Field is \"when finished\".,114158=class={class}\r\nfield={field}\r\nwhen={scfield}\r\nduration={sc2field}\r\nfinish={tfield}\r\nuser=\r\ngroup=\r\nsections=after_fetch get_required_field_names"
perform_create sys 20120102 Meta 114100 transient_event_overlap_opt_info "114101=transient_event_overlap_opt_info,114102=user_group_info,114103=n/a,114104=1,114124=1,114125=1,114146=1,114147=1,114139=1,114151=1,301700=transient_event_overlap,114120=The Field is an optional \"user\" FK and Source Parent field is an optional \"group\" FK.,114158=user={field}\r\ngroup={spfield}"
perform_create sys 20120102 Meta 114100 transient_field_action_create_from_fk "114101=transient_field_action_create_from_fk,114102=transient_{class}{field}add_{procedure}setting_{spfield}{scfield}{sfield}to_{ofield},114103=transient_field_action_create_from_fk,114104=1,114124=1,114105=1,114174=1,114175=1,114171=1,114106=1,114128=1,114125=1,114121=1,114123=1,114154=1,114117=1,114120=Field is for \"actions\"\\, Other Field is a FK value to be set in the new record and Procedure is the \"action\" to be appended. Source Field is the field that will be set for the new record or if the new record needs to be of a different class then use Source Parent and Source Child to identify the class and field.\r\n\r\nUse Option \"-key_sep=<separator>\" to change the separator used before the record's key.,114158=actions={field}\r\nfkfield={ofield}\r\naction={procedure}\r\nsfield={sfield}{scfield}\r\nspfield={spfield}\r\nspclass={spclass}\r\nkey_sep={#-key_sep}\r\nsections=after_fetch get_required_field_names"
perform_create sys 20120102 Meta 114100 transient_field_action_for_fld_or_perm "114101=transient_field_action_for_fld_or_perm,114102=transient_{class}{field}{procedure}for_{permission}or_{sfield}[_if_]{tfield},114103=transient_field_action,114104=1,114124=1,114105=1,114171=1,114106=1,114128=1,114126=1,114136=1,114180=1,114117=1,114120=Field will contain the action. Source Field must be true unless the user has the Permission and Test Field is an optional precondition.\r\n\r\nUse option \"-prompt\" to force UI confirmation for action and \"-back_for_view\" to force a UI \"back\" to occur after the action completes. Use Option \"-admin_always\" or \"-admin_never\" for action to always/never be available to admin and \"-not_iterating\" to only include the action if iteration is not occurring.,114158=class={class}\r\nactions={field}\r\nprocedure={procedure}\r\naltfield={sfield}\r\nufield=\r\npermission={permission}\r\npermission_id={permission_id}\r\ntfield={tfield}\r\nprompt={?-prompt}\r\nback_for_view={?-back_for_view}\r\nadmin_always={?-admin_always}\r\nadmin_never={?-admin_never}\r\nnot_iterating={?-not_iterating}\r\nstate=\r\ncheck_not_in_set=\r\nvname={#-var}\r\nsections=after_fetch get_required_field_names"
perform_create sys 20120102 Meta 114100 transient_field_action_for_mod "114101=transient_field_action_for_mod,114102=transient_{class}{field}{procedure}for_{modifier}[_if_]{tfield},114103=transient_field_action_for_mod,114104=1,114124=1,114105=1,114197=1,114107=1,114171=1,114106=1,114126=1,114117=1,114120=Field will contain the action and Test Field is an optional precondition.\r\n\r\nUse option \"-prompt\" to force UI confirmation for action and \"-back_for_view\" to force a UI \"back\" to occur after the action completes. Use Option \"-admin_always\" or \"-admin_never\" for action to always/never be available to admin and \"-not_iterating\" to only include the action if iteration is not occurring.,114158=class={class}\r\nactions={field}\r\nprocedure={procedure}\r\nmodifier={modifier}\r\ntfield={tfield}\r\nprompt={?-prompt}\r\nback_for_view={?-back_for_view}\r\nadmin_always={?-admin_always}\r\nadmin_never={?-admin_never}\r\nnot_iterating={?-not_iterating}\r\nstate=\r\ncheck_not_in_set=\r\nvname={#-var}\r\nsections=after_fetch get_required_field_names"
perform_create sys 20120102 Meta 114100 transient_field_action_for_uid "114101=transient_field_action_for_uid,114102=transient_{class}{field}{procedure}for_{spfield}is_uid[_if_]{tfield},114103=transient_field_action,114104=1,114124=1,114105=1,114171=1,114106=1,114128=1,114125=1,114112=1,114126=1,114117=1,114120=Field will contain the action. Source Field is an optional boolean alternative to Source Parent which is the \"user\" to match the uid and Test Field is an optional precondition.\r\n\r\nUse option \"-prompt\" to force UI confirmation for action and \"-back_for_view\" to force a UI \"back\" to occur after the action completes. Use Option \"-admin_always\" or \"-admin_never\" for action to always/never be available to admin and \"-not_iterating\" to only include the action if iteration is not occurring.,114158=class={class}\r\nactions={field}\r\nprocedure={procedure}\r\naltfield={sfield}\r\nufield={spfield}\r\npermission=\r\npermission_id=\r\ntfield={tfield}\r\nprompt={?-prompt}\r\nback_for_view={?-back_for_view}\r\nadmin_always={?-admin_always}\r\nadmin_never={?-admin_never}\r\nnot_iterating={?-not_iterating}\r\nstate=\r\ncheck_not_in_set=\r\nvname={#-var}\r\nsections=after_fetch get_required_field_names"
perform_create sys 20120102 Meta 114100 transient_field_action_for_uid_not_in_set "114101=transient_field_action_for_uid_not_in_set,114102=transient_{class}{field}{procedure}for_uid_not_in{spfield}[_if_]{tfield},114103=transient_field_action,114104=1,114124=1,114105=1,114171=1,114106=1,114128=1,114113=1,114126=1,114117=1,114120=Field will contain the action. Source Field is the \"uid set\" which uid must not belong to and Test Field is an optional precondition.\r\n\r\nUse option \"-prompt\" to force UI confirmation for action and \"-back_for_view\" to force a UI \"back\" to occur after the action completes. Use option \"-admin_always\" or \"-admin_never\" for action to always/never be available to admin and \"-not_iterating\" to only include the action if iteration is not occurring. Use option \"-var=<vname>\" if the set should instead come from a variable.,114158=class={class}\r\nactions={field}\r\nprocedure={procedure}\r\naltfield=\r\nufield={sfield}\r\npermission=\r\npermission_id=\r\ntfield={tfield}\r\nprompt={?-prompt}\r\nback_for_view={?-back_for_view}\r\nadmin_always={?-admin_always}\r\nadmin_never={?-admin_never}\r\nnot_iterating={?-not_iterating}\r\nstate=\r\ncheck_not_in_set=true\r\nvname={#-var}\r\nsections=after_fetch get_required_field_names"
perform_create sys 20120102 Meta 114100 transient_field_action_for_uid_or_perm "114101=transient_field_action_for_uid_or_perm,114102=transient_{class}{field}{procedure}for_{permission}or_{spfield}is_uid[_if_]{tfield},114103=transient_field_action,114104=1,114124=1,114105=1,114171=1,114106=1,114128=1,114125=1,114112=1,114126=1,114136=1,114180=1,114117=1,114120=Field will contain the action. Source Field is an optional boolean alternative to Source Parent which is the \"user\" to match the uid unless the user has the Permission and Test Field is an optional precondition.\r\n\r\nUse option \"-prompt\" to force UI confirmation for action and \"-back_for_view\" to force a UI \"back\" to occur after the action completes. Use option \"-state={editable|deletable}\" to check if record state and \"-admin_always\" or \"-admin_never\" for action to always/never be available to admin. Use Option \"-not_iterating\" to only include the action if iteration is not occurring.,114158=class={class}\r\nactions={field}\r\nprocedure={procedure}\r\naltfield={sfield}\r\nufield={spfield}\r\npermission={permission}\r\npermission_id={permission_id}\r\ntfield={tfield}\r\nprompt={?-prompt}\r\nback_for_view={?-back_for_view}\r\nstate={#-state}\r\nadmin_always={?-admin_always}\r\nadmin_never={?-admin_never}\r\nnot_iterating={?-not_iterating}\r\ncheck_not_in_set=\r\nvname={#-var}\r\nsections=after_fetch get_required_field_names"
perform_create sys 20120102 Meta 114100 transient_field_from_acyclic_path "114101=transient_field_from_acyclic_path,114102=transient_{class}{field}from_{spfield}{scfield}path,114103=field_from_acyclic_path,114104=1,114124=1,114105=1,114135=1,114110=1,114111=20,114112=1,114125=1,114121=1,114122=1,114117=1,114119=51,114130=20,114120=Field will become the path and Value is used as the path separator. Source Parent is the \"self relationship\" parent and Source Child is the field provides each part of the \"path\".\r\n\r\nUse option \"-embed_links\" to put link information into the path (the path field will need to have the \"manual_link\" extra setting for this to work).\r\n\r\nUse option \"-external\" when links are intended to be displayed in an external class.,114158=class={class}\r\nsrc_field={scfield}\r\nsrc_field_id={scfield_id}\r\ndest_field={field}\r\ndest_field_id={field_id}\r\npfield={spfield}\r\npfield_id={spfield_id}\r\nseparator={value_string}\r\nembed_links={?-embed_links}\r\nexternal={?-external}\r\nsections=after_fetch get_required_field_names"
perform_create sys 20120102 Meta 114100 transient_field_from_child_concat "114101=transient_field_from_child_concat,114102=transient_{class}{field}from_{child}children,114103=append_opts_for_iter,114104=1,114124=1,114105=1,114111=0,114117=1,114191=1,114138=1,114135=1,114145=1,114140=115432$115100.301405,301710=transient_field_from_child_concat_child,114120=Field is the text field that will be appended to during iteration of the Child Relationship records and Value is an optional separator.\r\n\r\nUse option \"-embed_links\" to put link information into the path (the path field will need to have the \"manual_link\" extra setting for this to work).,114158=class={class}\r\nfield={field}\r\ncclass={cclass}\r\nchild={child}\r\nseparator={value_string}\r\nofield=\r\ncfield=\r\nembed_links={?-embed_links}\r\nsections=after_fetch"
perform_create sys 20120102 Meta 114100 transient_field_from_concat "114101=transient_field_from_concat,114102=transient_{class}{field}from_{ofield}and_{sfield}{spfield}{scfield},114103=transient_field_concat,114104=1,114124=1,114105=1,114128=1,114125=1,114121=1,114118=1,114123=1,114154=1,114174=1,114175=1,114117=1,114111=20,114176=1,114135=1,114120=Field is the concatenation of Other Field and Source Field/Child with Value being used as an optional separator between the fields.\r\n\r\nUse \"-reverse\" to concatenate them in reverse and \"-both_not_empty\" to only concatenate if both fields are not empty strings.\r\n\r\nIf Source Child 2 is provided it is used as a test to determine if the order should be reversed.,114158=class={class}\r\ndfield={field}\r\nfield1={ofield}\r\nfield2={sfield}{spfield}\r\ncfield={scfield}\r\nrfield={sc2field}\r\nseparator={value_string}\r\nreverse={?-reverse}\r\nnon_empty={?-both_not_empty}\r\nsections=after_fetch get_required_field_names"
perform_create sys 20120102 Meta 114100 transient_field_from_file "114101=transient_field_from_file,114102=transient_{class}{field}from_{sfield}{value_label},114103=transient_field_from_file,114104=1,114124=1,114105=1,114128=1,114113=1,114135=1,114120=Use Value for an optional file name suffix.,114158=class={class}\r\nfield={field}\r\nsfield={sfield}\r\nsuffix={value}\r\nsections=after_fetch"
perform_create sys 20120102 Meta 114100 transient_field_from_key "114101=transient_field_from_key,114102=transient_{class}{field}from_key,114103=transient_field_from_key,114104=1,114124=1,114105=1,114120=Field will be set from the record key.,114158=field={field}\r\nsections=after_fetch"
perform_create sys 20120102 Meta 114100 transient_field_from_op_field "114101=transient_field_from_op_field,114102=transient_{class}{field}from_{sfield}{tvalue}{ofield}[if_]{tfield},114103=transient_field_from_op,114104=1,114124=1,114105=1,114174=1,114175=1,114128=1,114113=1,114117=1,114118=1,114126=1,114115=1,114131=30,114116=1,114120=Field is Source Field \"op\" Other Field. Test Field is an optional precondition and Test Value must be one of \"add | sub | mul | div | and | or | xor | mod | bitand | bitor | bitnot | bitsleft | bitsright\". Use option \"-type=<type>\" to cast Other Field and use option \"-check={default|notdefault}\" to only perform op if Source Field is (not) its default value.,114158=class={class}\r\nofield={ofield}\r\nfield={field}\r\nfmandatory={fmandatory}\r\nsfield={sfield}\r\ntfield={tfield}\r\nop={tvalue}\r\ntype={#-type}\r\ncheck={#-check}\r\nvalue=\r\nsections=after_fetch get_required_field_names"
perform_create sys 20120102 Meta 114100 transient_field_from_op_value "114101=transient_field_from_op_value,114102=transient_{class}{field}from_{sfield}{tvalue}{value_numstr}[if_]{tfield},114103=transient_field_from_op,114104=1,114124=1,114105=1,114135=1,114110=1,114111=30,114128=1,114113=1,114117=1,114118=1,114126=1,114115=1,114131=30,114116=1,114120=Field is Source Field \"op\" Value. Test Field is an optional precondition and Test Value must be one of \"add | sub | mul | div | and | or | xor | mod | bitand | bitor | bitnot | bitsleft | bitsright\". Use option \"-type=<type>\" to cast Value and use option \"-check={default|notdefault}\" to only perform op if Source Field is (not) its default value.,114158=class={class}\r\nvalue={value}\r\nfield={field}\r\nfmandatory={fmandatory}\r\nsfield={sfield}\r\ntfield={tfield}\r\nop={tvalue}\r\ntype={#-type}\r\ncheck={#-check}\r\nofield=\r\nsections=after_fetch get_required_field_names"
perform_create sys 20120102 Meta 114100 transient_field_from_other "114101=transient_field_from_other,114102=transient_{class}{field}from_{sfield}{spfield}{scfield}[if_]{modifier},114103=transient_field_alias,114104=1,114124=1,114105=1,114118=1,114128=1,114197=1,114125=1,114121=1,114123=1,114154=1,114117=1,114120=Use Modifier for an optional precondition.\r\n\r\nUse option \"-not_new\" to prevent usage in a new record\\, \"-check_default\" to only set if the current value is the default and \"-iterating_only\" to only set if records are being iterated..,114158=class={class}\r\nfield={field}\r\nsfield={sfield}{spfield}\r\nscfield={scfield}\r\ncheck_mod={modifier}\r\nnot_dflt={?-not_new}\r\ndef_value={?-check_default}\r\niter_only={?-iterating_only}\r\nsections=after_fetch get_required_field_names"
perform_create sys 20120102 Meta 114100 transient_field_from_procedure_call "114101=transient_field_from_procedure_call,114102=transient_field_{class}{field}from_{procedure},114103=field_from_procedure_call,114104=1,114124=1,114105=1,114171=1,114106=1,114135=1,114120=Field will get its value from a call to Procedure. Value is an optional argument to pass to the procedure,114158=class={class}\r\nfield={field}\r\nvalue={value}\r\nprocedure={procedure}\r\ntransient=true\r\nsections=finalise_fetch to_store"
perform_create sys 20120102 Meta 114100 transient_field_from_search_replace "114101=transient_field_from_search_replace,114102=field_{class}{field}from_{sfield}{spfield}{scfield}search_replace,114103=field_from_search_replace,114104=1,114124=1,114105=1,114128=1,114121=1,114125=1,114123=1,114154=1,114120=Use option \"-opt_prefix\" for optional prefix support."
perform_create sys 20120102 Meta 114100 transient_field_from_search_replace_field_list "114101=transient_field_from_search_replace_field_list,114102=field_list,114103=n/a,114139=1,114140=115430$115100.301405,301700=transient_field_from_search_replace,301710=field_source_and_value,114147=1"
perform_create sys 20120102 Meta 114100 transient_field_from_variable "114101=transient_field_from_variable,114102=transient_{class}{field}from_{value_label},114103=transient_field_from_variable,114104=1,114124=1,114105=1,114135=1,114110=1,114120=Field will be set from the Value named object variable.,114158=field={field}\r\nvariable={value}\r\nsections=after_fetch"
perform_create sys 20120102 Meta 114100 transient_field_value_if_has_child "114101=transient_field_value_if_has_child,114102=transient_{class}{field}to_{value_label}if_has_child_{child},114103=transient_has_child,114104=1,114124=1,114105=1,114135=1,114110=1,114191=1,114138=1,114158=field={field}\r\nvalue={value_literal}\r\nchild={child}\r\nsections=after_fetch"
perform_create sys 20120102 Meta 114100 transient_field_value_if_uid_in_set "114101=transient_field_value_if_uid_in_set,114102=transient_{class}set_{field}to_{value}if_uid_in_{sfield},114103=transient_field_value_if_uid_in_set,114104=1,114124=1,114105=1,114135=1,114110=1,114128=1,114113=1,114117=1,114120=Field will be set to Value if the uid key is found in the Source Field comma separated list.\r\n\r\nUse Option \"-admin_always\" to always set for admin.,114158=class={class}\r\nfield={field}\r\nsfield={sfield}\r\nvalue={value}\r\nadmin_always={?-admin_always}\r\nsections=after_fetch get_required_field_names"
perform_create sys 20120102 Meta 114100 transient_permission_concat "114101=transient_permission_concat,114102=transient_{class}{field}add_{permission}if_{tfield}[is_]{tvalue},114103=transient_permission_concat,114104=1,114124=1,114105=1,114126=1,114114=1,114115=1,114136=1,114180=1,114120=Field is the \"permissions\" transient with Test Field [== Test Value] being the conditional to append the Permission.,114158=class={class}\r\nfield={field}\r\ntfield={tfield}\r\ntvalue={tvalue}\r\npermission={permission}\r\npermission_id={permission_id}\r\nsections=after_fetch get_required_field_names"
perform_create sys 20120102 Meta 114100 transient_permission_from_other_perms "114101=transient_permission_from_other_perms,114102=transient_{class}{field}add_{permission}if_{opermission}{value}{o2permission},114103=transient_permission_from_other_perms,114104=1,114124=1,114105=1,114135=1,114110=1,114136=1,114180=1,114200=1,114201=1,114120=Field is the \"permissions\" transient with Value being set to either \"and\" or \"or\". Permission is the new \"permission\" and Other_Permission and Other_Permission_2 are the ones to be tested.,114158=class={class}\r\nfield={field}\r\nop={value}\r\npermission={permission}\r\npermission_id={permission_id}\r\nlpermission={opermission}\r\nlpermission_id={opermission_id}\r\nrpermission={o2permission}\r\nrpermission_id={o2permission_id}\r\nsections=after_fetch"
perform_create sys 20120102 Meta 114100 transient_search_rep_from_child_vars "114101=transient_search_rep_from_child_vars,114102=transient_search_rep_for_{class}{field}with_{child}children,114103=transient_search_rep_from_child_vars,114104=1,114124=1,114105=1,114191=1,114138=1,114117=1,114145=1,114140=115432$115100.301405,301710=transient_search_rep_from_child_vars_child,114120=Field will have search replaces performed for all Child Relationship records.\r\n\r\nUse option \"-left=<lb>\" and \"-right=<rb>\" for bracketing literals.,114158=class={class}\r\nfield={field}\r\nvarchild={child}\r\nlb={#-left}\r\nrb={#-right}\r\nsections=after_fetch"
perform_create sys 20120102 Meta 114100 trigger_child_cascade "114101=trigger_child_cascade,114102=trigger_{class}child_{child}cascade,114103=update_children,114104=1,114191=1,114138=1,114126=1,114120=Test Field is optional and if provided is checked to have changed.,114158=class={class}\r\nchild={child}\r\ntfield={tfield}"
perform_create sys 20120102 Meta 114100 trigger_child_cascade_fields "114101=trigger_child_cascade_fields,114102=trigger_{class}child_{child}cascade[_if_]{tvalue}{tfield},114103=child_field_cascade,114104=1,114191=1,114138=1,114126=1,114115=1,114117=1,114145=1,114120=Test Field is an optional child test comparison with Test Value being one of \"eq\"\\, \"neq\"\\, \"lt\"\\, \"gt\"\\, \"lteq\"\\ or \"gteq\".\r\n\r\nUse option \"-or_matches_original\" to include child records that match the parent's original value and use option \"-or_other_fields_changed\" to also include the record if other fields were changed.,114158=class={class}\r\nchild={child}\r\nfield_list={field_pairs}\r\ntfield={tfield}\r\ntestop={tvalue}\r\ncheck_orig={?-or_matches_original}\r\nany_change={?-or_other_fields_changed}\r\nsections=for_store"
perform_create sys 20120102 Meta 114100 trigger_child_cascade_fields_list "114101=trigger_child_cascade_fields_list,114102=field_pair_list,114103=n/a,114124=1,114168=1,114148=1,114140=115431$115100.301405,301700=trigger_child_cascade_fields,301710=field_pair,114147=1,114120=Field is an optional test condition field.,114158=ctfield={field}"
perform_create sys 20120102 Meta 114100 trigger_child_cascade_search_replace "114101=trigger_child_cascade_search_replace,114102=trigger_{class}child_{child}cascade_search_replace,114103=child_field_change_cascade,114104=1,114191=1,114138=1,114117=1,114145=1,114140=115431$115100.301405,301710=trigger_child_cascade_search_replace_cinfo,114120=Use option \"-exact_match\" to restrict the change to exact matches only.,114158=class={class}\r\nchild={child}\r\nexact_match={?-exact_match}"
perform_create sys 20120102 Meta 114100 trigger_child_cascade_status "114101=trigger_child_cascade_status,114102=trigger_{class}child_{child}cascade_status,114103=child_status_cascade,114104=1,114191=1,114138=1,114125=1,114126=1,114115=1,114140=115432$115100.301405,301710=trigger_child_cascade_status_info,114120=If Test Field is provided then cascade only applies to records where it does not equal the provided Test Value. If Source Parent is provided then it will be used to identify a specific child for special treatment.,114158=class={class}\r\nchild={child}\r\nchild_class={cclass}\r\nspecial_field={spfield}\r\nneq_status_field={tfield}\r\nneq_status_value={tvalue}\r\nsections=for_store"
perform_create sys 20120102 Meta 114100 trigger_child_destroy "114101=trigger_child_destroy,114102=trigger_{class}child_{child}destroy[_if_changed_]{tfield},114103=destroy_children,114104=1,114191=1,114138=1,114126=1,114117=1,114120=Test Field is optional and if provided is checked to have changed.,114158=class={class}\r\nchild={child}\r\ntfield={tfield}\r\nsections=for_store"
perform_create sys 20120102 Meta 114100 trigger_clone_children "114101=trigger_clone_children,114102=trigger_{class}clone_child_{child}records,114103=clone_children,114104=1,114126=1,114115=1,114117=1,114191=1,114138=1,114120=Test Field/Value is an optional precondition. Use \"-not_equal\" to change to an inequality test.,114158=class={class}\r\ncclass={child}\r\npfield={cname}\r\nffield={cffield}\r\ntfield={tfield}\r\ntvalue={tvalue}\r\nnot_eq={?-not_equal}\r\nsections=after_store"
perform_create sys 20120102 Meta 114100 trigger_clone_children_from_fk "114101=trigger_clone_children_from_fk,114102=trigger_{class}clone_child_{child}records_from_{field},114103=clone_children,114104=1,114124=1,114105=1,114111=50,114125=1,114119=51,114191=1,114138=1,114120=Field is the foreign key whose child records will be cloned and Source Parent is an optional self relationship back-link."
perform_create sys 20120102 Meta 114100 trigger_clone_default_children "114101=trigger_clone_default_children,114102=trigger_{class}clone_default_{child}records,114103=clone_default_group_children,114104=1,114191=1,114138=1,114120=Will clone all child records that do not belong to a parent for each new Class record created."
perform_create sys 20120102 Meta 114100 trigger_clone_default_record "114101=trigger_clone_default_record,114102=trigger_{class}clone_default_{child}record,114103=clone_default_for_group,114104=1,114191=1,114138=1,114120=A Child Relationship record with the key \"default\" must exist for cloning when each new Class instance is created.,114158=class={class}\r\ncclass={cclass}\r\ngfield={cname}\r\nsections=after_store"
perform_create sys 20120102 Meta 114100 trigger_clone_default_user_children "114101=trigger_clone_default_user_children,114102=trigger_create_{class}{child}default_records[if_]{tfield}[is_]{tvalue},114103=trigger_clone_default_user_children,114104=1,114126=1,114115=1,114191=1,114138=1,114117=1,114140=115441$115100.301405,301710=trigger_clone_default_user_children_info,114120=Test Field [== Test Value] is an optional extra precondition. Child Relationship is to the class whose default instances will be cloned when a new \"user\" is created. Use option \"-skip_clones\" to not perform this if the record being created is itself a clone.\r\n\r\nAfter saving click \"Add Info\" to complete.,114158=class={class}\r\nchild={child}\r\ntfield={tfield}\r\ntvalue={tvalue}\r\nskip_clones={?-skip_clones}\r\nsections=after_store"
perform_create sys 20120102 Meta 114100 trigger_clone_for_fk_children "114101=trigger_clone_for_fk_children,114102=trigger_clone_{class}for_{spfield}children,114103=trigger_clone_for_fk_children,114104=1,114125=1,114112=1,114126=1,114114=1,114140=115437$115100.301405,301710=trigger_clone_for_fk_children_sinfo,114120=Source Parent is the FK whose children will have clones the created for. Test Field is an optional precondition\r\n\r\nAfter saving click \"Add Source Info\" to continue.,114158=class={class}\r\ntfield={tfield}\r\nsparent={spfield}\r\nsections=after_store"
perform_create sys 20120102 Meta 114100 trigger_copy_children_from_fk "114101=trigger_copy_children_from_fk,114102=trigger_copy_child_{child}records_from_{spfield}child_{schild}records,114103=copy_child_links_from_fk,114104=1,114191=1,114138=1,114125=1,114112=1,114170=603410,114120=If one of the fields is a \"file\" then use Child File Field and Source Child File Field.,114158=class={class}\r\ncclass={cclass}\r\nfkclass={spclass}\r\nfkcclass={screlclass}\r\nfkcfield={schild}\r\nfield_list={field_pairs}\r\ncfield={child}\r\ncpfield={nyi}\r\ncffield={cffield}\r\nfkcffield={scffield}\r\nfk_from_child={nyi}\r\ncombine_keys={nyi}\r\nsections=includes after_store"
perform_create sys 20120102 Meta 114100 trigger_copy_self_children_for_create "114101=trigger_copy_self_children_for_create,114102=trigger_{class}copy_created_record_below_each_{spfield}child,114103=clone_children_for_create,114104=1,114125=1,114112=1,114140=115432$115100.301405,301710=trigger_copy_self_children_for_create_children,114120=Source Parent is the \"owning parent\" that will be used to find the parent of each new copy record."
perform_create sys 20120102 Meta 114100 trigger_copy_self_children_for_update "114101=trigger_copy_self_children_for_update,114102=trigger_{class}copy_updated_record_for_{child}children,114103=clone_children_for_update,114104=1,114124=1,114125=1,114112=1,114191=1,114138=1,114155=1,114120=Child Relationship must be a self-relationship. Source Parent is the \"owning parent\" that will need to be restored after copying all fields and Field is another optional field that will have its value restored."
perform_create sys 20120102 Meta 114100 trigger_create_child "114101=trigger_create_child,114102=trigger_{class}create_child_{child},114103=create_child,114104=1,114124=1,114126=1,114131=20,114191=1,114138=1,114145=1,114125=1,114117=1,114120=Field is an optional integer field to use as the child record's key suffix. Source Parent is an optional FK for cloning and Test Field is an optional non-null precondition. Use option \"-new_only\" to apply to new records only.,114158=class={class}\r\nnfield={tfield}\r\npfield={cname}\r\ncclass={child}\r\nkey_suffix={field}\r\nclone_field={spfield}\r\nfield_list={field_pairs}\r\ncreate_only={?-new_only}\r\nsections=after_store"
perform_create sys 20120102 Meta 114100 trigger_create_child_field_list "114101=trigger_create_child_field_list,114102=field_pair_list,114103=n/a,114124=1,114135=1,114168=1,114148=1,114140=115431$115100.301405,301700=trigger_create_child,301710=field_pair,114147=1,114120=Use Field and Value to force a specific field to a specific value.,114158=field={field}\r\nvalue={value_literal}"
perform_create sys 20120102 Meta 114100 trigger_create_children_for_fk_children "114101=trigger_create_children_for_fk_children,114102=trigger_create_child_{class}records_using_{spfield}child_{screlclass}records,114103=create_children_for_fk_children,114104=1,114191=1,114138=1,114125=1,114112=1,114170=603410,114158=class={class}\r\ncclass={cclass}\r\ncname={cname}\r\nfkclass={spclass}\r\nfkfield={spfield}\r\nfkcclass={screlclass}\r\nfkcfield={schild}\r\nfield_list={fields}\r\ncfield={child}\r\ncpfield={nyi}\r\nsections=after_store"
perform_create sys 20120102 Meta 114100 trigger_parent_field_total "114101=trigger_parent_field_total,114102=trigger_{class}total_{field}to_{spfield}{scfield}[and_]{ofield}[to_{spfield}]{sc2field}[if_null_]{tfield},114103=total_child_field_in_parent,114104=1,114124=1,114105=1,114174=1,114111=31,114125=1,114112=1,114121=1,114122=1,114176=1,114117=1,114118=1,114126=1,114120=Source Child is used to hold the accumlated Field record values for each Source Parent record. Other Field and Source Child 2 are an optional secondary total.\r\n\r\nTest Field is an optional null value test.\r\n\r\nUse option \"-after_self\" to perform update/destroy after the record itself has been processed.,114158=class={class}\r\nnfield={field}\r\nn2field={ofield}\r\ntfield={tfield}\r\npfield={spfield}\r\npnfield={scfield}\r\npn2field={sc2field}\r\nafter_self={?-after_self}\r\nsections=for_store after_store for_destroy after_destroy get_always_required_field_names"
perform_create sys 20120102 Meta 114100 trigger_parent_update "114101=trigger_parent_update,114102=trigger_{class}to_update_{field}[if_changed_]{spfield}[is_]{value_label},114103=update_parent,114104=1,114124=1,114105=1,114111=50,114125=1,114117=1,114135=1,114120=Field must be a FK and Source Parent is an optional FK which is tested to have changed. If Value is provided then the Source Parent's key must match this value. To delay update until record is stored use option \"-after_store\".,114158=class={class}\r\nfkfield={field}\r\nspfield={spfield}\r\nvalue={value}\r\nafter_store={?-after_store}\r\nsections=for_store after_store"
perform_create sys 20120102 Meta 114100 trigger_parent_update_cascade "114101=trigger_parent_update_cascade,114102=trigger_{class}to_update_{spfield}[if_]{tfield}[is_]{tvalue},114103=update_parent_cascade,114104=1,114125=1,114112=1,114126=1,114115=1,114120=Source Parent will be updated. Use Test Field/Test Value for an optional foreign key test."
perform_create sys 20120102 Meta 114100 trigger_prior_version "114101=trigger_prior_version,114102=trigger_{class}child_{child}for_{child},114103=prior_version,114104=1,114124=1,114105=1,114174=1,114126=1,114115=1,114191=1,114138=1,114145=1,114117=1,114120=Field is the \"version\" field and Other is an optional \"file\" field.\r\n\r\nUse option \"-major_only\" to only create a prior version for a major version change.,114158=class={class}\r\nver_field={field}\r\ntest_field={tfield}\r\ntest_value={tvalue}\r\nmajor_only={?-major_only}\r\npvclass={child}\r\nfield_list={field_pairs}\r\ntest2_field=\r\ntest2_value=\r\nparent_pv_field=\r\nfile_field={ofield}\r\ndtm_field=\r\nuid_field=\r\ntask_class=\r\ntask_pv_field=\r\ndtm2_field=\r\nuid2_field=\r\nsections=for_store"
perform_create sys 20120102 Meta 114100 trigger_prior_version_fields_list "114101=trigger_prior_version_fields_list,114102=field_pair_g_list,114103=n/a,114168=1,114148=1,114140=115431$115100.301405,301700=trigger_prior_version,301710=field_pair_g,114147=1"
perform_create sys 20120102 Meta 114100 user_info "114101=user_info,114102=user_info,114103=user_info,114104=1,114124=1,114105=1,114125=1,114126=1,114114=1,114120=Field is the \"User Id\" and Test Field is the \"Password\" for logging in. Use Source Parent to specify the user \"group\" field.,114163=1,114158=cid={class_id}\r\nclass={class}\r\nuid={field_id}\r\npwd={tfield_id}\r\ngroup={spfield_id}\r\nparent="
perform_create sys 20120102 Meta 114100 user_info_extra "114101=user_info_extra,114102=extra,114103=n/a,114104=1,114139=1,114124=1,114125=1,114126=1,114174=1,301700=user_info,114140=115437$115100.301405,301710=user_info_extra_select,114147=1,114151=1,114120=Field is for \"active\" and Test Field is for \"permissions\". Other Field is for \"access level\" (if applicable). If Source Parent is provided then after saving click on \"Add Source Info\" to add a general user list restriction.,114158=active={field_id}\r\nperm={tfield_id}\r\nother={spfield_id}\r\nsfield={spfield_id}\r\nslevel={ofield_id}\r\npfield=\r\npcfield=\r\nofield=\r\nslperm=\r\nsclsnm=\r\nostrict=\r\nkoverride=\r\nsoverride="
perform_create sys 20120102 Meta 114100 qlink_info "114101=qlink_info,114102=qlink_info,114103=qlink_info,114104=1,114124=1,114105=1,114125=1,114112=1,114126=1,114115=1,114163=1,114140=115441$115100.301405,301710=qlink_info_details,114120=Field is the \"order\" field\\, Source Parent is the \"user\" class and Test Field/Value is an optional filter. After saving click Add Info to complete.,114158=cid={class_id}\r\norder={field_id}\r\nparent={spfield_id}\r\ntfield={tfield_id}\r\ntvalue={tvalue}"
session_variable @allow_async false
session_variable @package_type_path .
@ifdef %CIYAM_TEST_STORAGE%
session_variable @attached_file_path .
@endif
~cp Standard.package.bun.gz new.package.bun.gz
perform_create admin 20120102 100 135100 standard "135101=New_Package_Type"
perform_update admin 20120102 100 135100 standard "135103=new.package.bun.gz"
perform_execute admin 20120102 100 135100 standard 135410
~cp Auto_Code.package.bun.gz new.package.bun.gz
perform_create admin 20120102 100 135100 auto_code "135101=New_Package_Type"
perform_update admin 20120102 100 135100 auto_code "135103=new.package.bun.gz"
perform_execute admin 20120102 100 135100 auto_code 135410
~cp User.package.bun.gz new.package.bun.gz
perform_create admin 20120102 100 135100 user "135101=New_Package_Type"
perform_update admin 20120102 100 135100 user "135103=new.package.bun.gz"
perform_execute admin 20120102 100 135100 user 135410
~cp Group.package.bun.gz new.package.bun.gz
perform_create admin 20120102 100 135100 group "135101=New_Package_Type"
perform_update admin 20120102 100 135100 group "135103=new.package.bun.gz"
perform_execute admin 20120102 100 135100 group 135410
storage_term
quit
