#!/bin/bash
# Copyright (c) 2025 CIYAM Developers
#
# Distributed under the MIT/X11 software license, please refer to the file license.txt
# in the root project directory or http://www.opensource.org/licenses/mit-license.php.

CONFIG_PATH=/etc/ciyam
INSTALL_PATH=/opt/ciyam
SYSTEM_LOG_PATH=/var/log/ciyam

copy_config_default( )
{
 if [ "$1" = "" ]; then
  echo "Error: Unexpected missing file name for 'copy_config_default'."
  exit
 fi

 if [ ! -f $CONFIG_PATH/$1.default ]; then
  cp ciyam/$1.default $CONFIG_PATH
  cp $CONFIG_PATH/$1.default $CONFIG_PATH/$1
 else
  cmp -s ciyam/$1.default $CONFIG_PATH/$1.default
  if [ $? -eq 1 ]; then
   echo "Warning: The following changes for '$1.default' might need to be made to '$1'."
   diff ciyam/$1.default $CONFIG_PATH/$1.default
  fi
  cp ciyam/$1.default $CONFIG_PATH
 fi

 if [ ! -L $INSTALL_PATH/$1 ]; then
  ln -s $CONFIG_PATH/$1 $INSTALL_PATH/$1
 fi
}

CIYAM_USER=$USER
CIYAM_GROUP=$(id -gn)

name=$1

if [ "$name" = "" ]; then
 name="*"
fi

if [ -f src/.app_name ]; then
 name=$(<src/.app_name)
 name=${name,,}
fi

if [ "$WEBDIR" = "" ]; then
 if [ -d /var/www/html ]; then
  WEBDIR=/var/www/html
 elif [ -d /srv/www/htdocs ]; then
  WEBDIR=/srv/www/htdocs
 fi
fi

if [ "$WEBDIR" = "" ]; then
 echo "Error: Unable to determine WEBDIR (apache2 not installed?)."
 exit
fi

HTTPD_GROUP=$(stat -c "%G" $WEBDIR 2> /dev/null)

if [ "$HTTPD_GROUP" = "" ]; then
 echo "Error: Unable to determine HTTPD_GROUP (incorrect WEBDIR?)."
 exit
fi

had_error=
release_dir=
release_file=

ls -1 ciyam_$name.*.tar.gz > ~install 2>/dev/null

if [ -s ~install ]; then
 num_files=$(wc -l < ~install)

 if [ "$num_files" != "1" ]; then
  had_error=1

  if [ ! "$name" = "*" ]; then
   echo "Error: Multiple 'ciyam_$name.<ver>.<rev>.tar.gz' files found (move old versions)."
  else
   echo "Error: Multiple 'ciyam_$name.<ver>.<rev>.tar.gz' files found (try ./install 'name')."
  fi
 else
  release_file=$(<~install)
  release_dir=${release_file%.tar.gz}

  if [ ! -d $release_dir ]; then
   tar -xvzf $release_file --exclude='install'
  fi
 fi
else
 had_error=1

 echo "Error: No 'ciyam_$name.<ver>.<rev>.tar.gz' file was found (archive file removed?)."
fi

rm -f ~install

if [ "$had_error" = "1" ]; then
 exit
fi

if [ "$release_dir" = "" ]; then
 echo "Error: Unexpected missing 'release_dir' variable."

 exit
fi

is_dev_env=

# NOTE: If is a development environment then will save and erase the current
# identity (and also stop the application server if it's currently running).
if [ -d src ]; then
 pushd src > /dev/null

 is_dev_env=1

 if [ -f ciyam_server.sid ]; then
  ./save_identity > /dev/null
  ./erase_identity > /dev/null

  # NOTE: Check if the application server is running.
  touch ciyam_server.cmd
  sleep 1

  if [ -f ciyam_server.cmd ]; then
   rm ciyam_server.cmd
  else
   touch ciyam_server.stop
   sleep 1
  fi
 fi

 popd > /dev/null
fi

cd $release_dir

if [ ! -d $CONFIG_PATH ]; then
 sudo mkdir $CONFIG_PATH
 sudo chown $CIYAM_USER:$CIYAM_GROUP $CONFIG_PATH
fi

if [ ! -d $CONFIG_PATH ]; then
 echo "Error: Unable to access/create $CONFIG_PATH directory (incorrect user?)."

 exit
fi

if [ ! -d $INSTALL_PATH ]; then
 sudo mkdir $INSTALL_PATH
 sudo chown $CIYAM_USER:$CIYAM_GROUP $INSTALL_PATH
fi

if [ ! -d $INSTALL_PATH ]; then
 echo "Error: Unable to access/create $INSTALL_PATH directory (incorrect user?)."

 exit
fi

if [ ! -d $SYSTEM_LOG_PATH ]; then
 sudo mkdir $SYSTEM_LOG_PATH
 sudo chown $CIYAM_USER:$CIYAM_GROUP $SYSTEM_LOG_PATH

 touch $SYSTEM_LOG_PATH/ciyam_script.log
 touch $SYSTEM_LOG_PATH/ciyam_server.log
fi

if [ ! -L $INSTALL_PATH/ciyam_script.log ]; then
 ln -s $SYSTEM_LOG_PATH/ciyam_script.log $INSTALL_PATH/ciyam_script.log
fi

if [ ! -L $INSTALL_PATH/ciyam_server.log ]; then
 ln -s $SYSTEM_LOG_PATH/ciyam_server.log $INSTALL_PATH/ciyam_server.log
fi

has_service=

if [ -f /usr/lib/systemd/system/ciyam.service ]; then
 has_service=1
 sudo systemctl stop ciyam
fi

is_new=

if [ ! -f $CONFIG_PATH/autoscript.sio ]; then
 is_new=1
fi

copy_config_default autoscript.sio

# NOTE: If is new and is not a development environment
# then uncomment out all default "autoscript" entries.
if [ "$is_new" = "1" ]; then
 if [ "$is_dev_env" = "" ]; then
  sed -i '/<sio\/>/,/<\/sio>/{s/^# / /g}' $CONFIG_PATH/autoscript.sio
 fi
fi

copy_config_default manuscript.sio

copy_config_default ciyam_server.sio

source ./env_vars.sh

rm env_vars.sh

has_system=

# NOTE: Remove the module DB export directory when not new
# and protect the OS user's password from being changed if
# new when is a development environment.
if [ -f $INSTALL_PATH/$CIYAM_APP_MOD.modules.lst ]; then
 has_system=1
 rm -rf ciyam/$CIYAM_APP_MOD
 rm -f ciyam/$CIYAM_APP_MOD.log.app
 rm -f ciyam/$CIYAM_APP_MOD.backup.sql
else
 if [ "$is_dev_env" = "1" ]; then
  touch $INSTALL_PATH/.${CIYAM_USER}_password_protected
 fi
fi

sudo cp -R ciyam/* $INSTALL_PATH

if [ "$has_system" = "" ]; then
 sudo chown -R $CIYAM_USER:$CIYAM_GROUP $INSTALL_PATH

 if [ ! -f $INSTALL_PATH/Meta.log ]; then
  if [ ! "$CIYAM_APP_MOD" = "Meta" ]; then
   dbus-uuidgen | xargs -I{} echo -n @{} > $INSTALL_PATH/Meta/id

   cat $INSTALL_PATH/Meta/id | sed 's/@/[0]/g' | xargs echo -e > $INSTALL_PATH/Meta.log

   cat $INSTALL_PATH/Meta.log.app >> $INSTALL_PATH/Meta.log

   rm -f $INSTALL_PATH/Meta.log.app
  fi
 fi

 # NOTE: Replace the exported "id" with a newly generated "@<identity>".
 dbus-uuidgen | xargs -I{} echo -n @{} > $INSTALL_PATH/$CIYAM_APP_MOD/id

 cat $INSTALL_PATH/$CIYAM_APP_MOD/id | sed 's/@/[0]/g' | xargs echo -e > $INSTALL_PATH/$CIYAM_APP_MOD.log

 cat $INSTALL_PATH/$CIYAM_APP_MOD.log.app >> $INSTALL_PATH/$CIYAM_APP_MOD.log

 rm -f $INSTALL_PATH/$CIYAM_APP_MOD.log.app

 if [ "$is_dev_env" = "1" ]; then
  sed -i "s/# <protocol_handler>file:/ <protocol_handler>apt:/g" $CONFIG_PATH/ciyam_server.sio
 fi

 if [ ! "$CIYAM_APP_MOD" = "Meta" ]; then
  sed -i "s/# <default_storage>Meta/ <default_storage>$CIYAM_APP_MOD/g" $CONFIG_PATH/ciyam_server.sio
 fi
fi

if [ -f $INSTALL_PATH/manuscript.sio.generated ]; then
 sed -n '/^# Copyright/,/^### .<start generated/p' $CONFIG_PATH/manuscript.sio > $CONFIG_PATH/manuscript.sio.new
 cat $INSTALL_PATH/manuscript.sio.generated >> $CONFIG_PATH/manuscript.sio.new
 cp $CONFIG_PATH/manuscript.sio $CONFIG_PATH/manuscript.sio.old
 $INSTALL_PATH/update $CONFIG_PATH/manuscript.sio $CONFIG_PATH/manuscript.sio.new > /dev/null
fi

needs_restore=

# NOTE: If there is a <main>.map and now <main>.map.new
# then the DB will need to be restored (due to required
# transformations) unless the files are identical.
if [ -f $INSTALL_PATH/$CIYAM_APP_MOD.map ]; then
 if [ -f $INSTALL_PATH/$CIYAM_APP_MOD.map.new ]; then
  cmp -s $INSTALL_PATH/$CIYAM_APP_MOD.map $INSTALL_PATH/$CIYAM_APP_MOD.map.new
  if [ $? -eq 0 ]; then
   rm -f $INSTALL_PATH/$CIYAM_APP_MOD.map.new
  else
   needs_restore=1
  fi
 fi
else
 if [ -f $INSTALL_PATH/$CIYAM_APP_MOD.map.new ]; then
  mv $INSTALL_PATH/$CIYAM_APP_MOD.map.new $INSTALL_PATH/$CIYAM_APP_MOD.map
 fi
fi

# NOTE: Prevent actual Linux users
# from being added for development
# environments.
if [ "$has_system" = "" ]; then
 if [ "$is_dev_env" = "1" ]; then
  touch $INSTALL_PATH/.no_add_user
 fi
fi

sudo chown -R $CIYAM_USER:$CIYAM_GROUP $INSTALL_PATH

rm -r ciyam

if [ ! -d $WEBDIR/meta ]; then
 sudo mkdir $WEBDIR/meta
 sudo chmod g+w $WEBDIR/meta
 sudo chown $CIYAM_USER:$HTTPD_GROUP $WEBDIR/meta
fi

if [ ! -d $WEBDIR/meta ]; then
 echo "Error: Unable to access/create $WEBDIR/meta directory (incorrect perms?)."

 exit
fi

if [ ! -d $WEBDIR/$CIYAM_APP_DIR ]; then
 sudo mkdir $WEBDIR/$CIYAM_APP_DIR
 sudo chmod g+w $WEBDIR/$CIYAM_APP_DIR
 sudo chown $CIYAM_USER:$HTTPD_GROUP $WEBDIR/$CIYAM_APP_DIR
fi

if [ ! -d $WEBDIR/$CIYAM_APP_DIR ]; then
 echo "Error: Unable to access/create $WEBDIR/$CIYAM_APP_DIR directory (incorrect perms?)."

 exit
fi

sudo cp -R $CIYAM_APP_DIR/* $WEBDIR/$CIYAM_APP_DIR

sudo chmod -R g+w $WEBDIR/$CIYAM_APP_DIR
sudo chown -R $CIYAM_USER:$HTTPD_GROUP $WEBDIR/$CIYAM_APP_DIR

rm -r $CIYAM_APP_DIR

rm -f $WEBDIR/$CIYAM_APP_DIR/ciyam.pem
ln -s /opt/ciyam/ciyam.pem $WEBDIR/$CIYAM_APP_DIR/ciyam.pem

sudo systemctl restart apache2

if [ -f $INSTALL_PATH/Meta.backup.sql ]; then
 pushd $INSTALL_PATH > /dev/null
 if [ "$has_service" = "1" ]; then
  ./drop_db Meta .
 fi
 ./create_db Meta .
 rm -f Meta.backup.sql
 popd > /dev/null
fi

if [ -f $INSTALL_PATH/$CIYAM_APP_MOD.backup.sql ]; then
 pushd $INSTALL_PATH > /dev/null
 ./create_db $CIYAM_APP_MOD .
 rm -f $CIYAM_APP_MOD.backup.sql
 popd > /dev/null
fi

sudo mv ciyam.service /usr/lib/systemd/system

sudo systemctl daemon-reload

if [ "$has_service" = "" ]; then
 sudo systemctl enable ciyam
fi

sudo systemctl start ciyam
sudo systemctl status ciyam

cd ..

rmdir $release_dir
