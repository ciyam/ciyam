Getting Started
---------------

After cloning the repository run "config" in order to configure the system for 3rd party dependencies (and to
set the default server port) then "make all" to build all of the targets and then run "do_tests" batch/script
to test that all core functionality is working:

./config
make all
./dotests

(Windows users need to omit the ./ prefixes)

The next step is to make sure that MySQL is installed and operating. The following steps will create a DB for
testing the system, populate this DB with tables and data and check that all is functioning as expected:

./create_db ciyam
./init Meta ciyam
./test Meta_tests.sio
./drop_db ciyam

The "ciyam" DB should only be used for regression test purposes (by repeating the above steps) so now another
DB needs to be created for the IDE itself:

(NOTE: in order for this second init to work the user must have rwx permissions for each directory in WEBROOT)

./create_db Meta
./init Meta Meta

The next step is to make sure that the web server's FCGI is installed and operating. Run the following batch/
script to install the FCGI testbed:

./install_test_fcgi

Assuming no errors occurred you should now be able to access the webpage: http://localhost/test_fcgi.html

It will present a HTML form with a Perform Post Request button. To verify that FCGI is working correctly next
click on the button. Output should look something like the following:

Posted Data: name=Joe+Bloggs&age=&sex=male&submit=Perform+Post+Request...
(if the browser prompts to download the .fcgi file then configure Apache according to fcgi_configuration.txt)

If you go "back" to the page and then click the button again you should now see some like this:

Found HTTP_COOKIE: TEST=TEST_COOKIE

Posted Data: name=Joe+Bloggs&age=&sex=male&submit=Perform+Post+Request...

If all has gone well then it is time to install the IDE application which is done as follows:

./setup Meta meta
./install_fcgi ciyam_interface meta
./install_fcgi upload meta
./install Meta meta index

To use the application you'll need to make sure that the application server (ciyam_server) is running. To run
it with Windows use "start /min ciyam_server" and under Linux "./ciyam_server &". Once the application server
has started and is "listening" you are now nearly ready to create your first web application.

***************************** Extra steps if MySQL 'root' password is not blank *****************************

If you have a non-blank 'root' password for your MySQL server then this password will need to be known by the
application server in order for the 'Meta' application to be able to create (and drop) a DB. This password is
stored in the application server's main configuration file (ciyam_server.sio) in an encrypted base64 format.

Looking at the default ciyam_server.sio file you'll notice the following line:
# <sql_password>l2k34u1QZzr9oWKTqlQuaZ3nx0a=

The comment character ('#') will need to be removed and then the base64 changed to the encrypted form of your
MySQL root password. To determine the encrypted base64 password a protocol command "encrypt" exists. For ease
of use a batch/script called ./password can be used to determine the correctly encrypted password value. This
script can be used in one of two ways. The first is as follows:

./password my_password
Kd5XMcOhRxvwdg3NJ4ojNXzS6lg=

The second method is to run the script without passing the password as an argument (use this way if you don't
want the password it to be visible on the screen or kept in command history). If you use this method then you
will be prompted to type in the password (which will not be echoed).

./password
Password:
Kd5XMcOhRxvwdg3N+aggkL3j1og=

Once you have modified the <sql_password> value in "ciyam_server.sio" (and removed the # comment marker) then
you will need to stop and restart the application server (if using Windows then focus on the "cmd" window for
"ciyam_server" and type "ctrl-c" to shut it down).

*************************************************************************************************************

If all went well the you should now be able to access the IDE: http://localhost/Meta

From the login form which should have appeared use the password and user id "guest" (no quotes).

Creating an Application
-----------------------

Once you have logged in click on "Models" (in the navigation sidebar) and then click "New Record" in order to
begin the application creation process. The "New Model" form will require a Name to be entered (for this test
the name "Sample" should be used).

The "Add Packages" drop list will default to the value "Standard User" which is fine (along with the defaults
for the other fields) so now simply click "Save Details" to create the new Model. After saving the "Standard"
package will automatically be installed while the "User" package will just appear greyed out (for those using
Windows an extra "cmd" window will temporarily appear while the "Standard" package is being installed).

To install the "User" package click on the greyed out "User" list item then from the "Package" view form next
click on the "Install" button. You might notice from the "Package" view form that there are a number of child
"Package Options" present. These "options" allow customisation of a package prior to installation. Because of
the fact that the "User" package has such options it is not automatically installed as the "Standard" package
was (the "Standard" package has no installation options).

For the purposes of creating a test "demonstration" Application the "User" package should simply be installed
with the "Package Options" as they are by default. After the "User" package has been installed (assuming that
no error occurred during installation) then click on "Applications" from the navigation sidebar and as before
click "New Record" to create the Application. In order to simplify creating a new Application enter the exact
same text for Name as you used for the Model (in this case "Sample"). After typing in the Name next click the
"Save Details" button and you should see in the child "Modules" list that the Model "Sample" has been created
for you (if not then most likely the Name was not an exact match or "Add Modules Automatically" was not set).

Assuming the Application has successfully been created (if not then it is possible the MySQL root password is
not correct or present in the server configuration file), then all that remains to be done now is to click on
the "Generate" button (leaving the Generate Type as "Full Generate"). After clicking the button Windows users
(once again) will see a new "cmd" window appear. To see the application generation details click on the arrow
icon that appears below the Version field.

Assuming no problems have occurred then you should see lines of text that describe each of the artifacts that
have been created (such as the "sample" web directory, all of the source files and the "make" output which is
then finally followed by the DB construction and population with initial data).

If no errors have occurred during application generation then you should now be ready to test your first ever
CIYAM application. This should be as simple as typing "localhost/sample" into your browser (in another window
than that used for "Meta"). If you use the name and password "guest" you should be presented with a "Welcome"
message (as only the "Standard" and "User" packages were installed there is not much that the "guest" user is
able to do other than change their password).

Installing Package Types
------------------------

By default the package types which are included in the "Meta" system are functional ones (such as providing a
System singleton that can be used for holding system-wide default values and also for the User record type so
that users can be given login credentials and security permissions). Although vitally important these package
types are not so interesting (as seen in the sample application created initially).

In order to be able to create a more interesting application it is recommended to install one or more package
types that are not automatically included in "Meta". To do this you need to login to "Meta" with the username
"admin" and password "nimda" (logout first if still logged in as "guest" from before).

The navigation sidebar will look very different when you are logged in as "admin" as this special user is not
intended to perform standard activities but instead to perform "system configuration" and "user maintenance".
After clicking on "Package Types" you should see a small list of the automatically included packages. Too add
a new package type click "New Record". The Type Name will default to "New_Package_Type" and as this name will
be automatically changed during the Package Type "Install" it does not need to be changed so you just need to
click "Save Details" to continue.

The next step is to locate a "package bundle" which is a file ending with the extension "*.package.bun.gz" in
the project's source directory. After you "Attach" this file (which will "upload" it) you should see that the
"gz" file has been attached. Now all that needs to be done is click on "Install" (again under Windows a "cmd"
window will appear during the installation). If no error has occurred then the Type Name will have changed to
the name of the package type automatically and the various other fields will have been set.

It should be noted that some package types will have one or more dependencies upon other package types so the
order that new package types are installed is important.

For more specific information about the various Package Types that are available refer to "packages.txt".

