`{`@eq`(`'for_store`'`,`$section`)`|`@eq`(`'procedure`'`,`$section`)\
   // [(start destroy_children)]
`{`@eq`(`$arg_tfield`,`'`'`)`|`@eq`(`$arg_use_test_field_as_suffix`,`'`'`)\
   if( !is_create`{`!`@eq`(`$arg_tfield`,`'`'`)
    && get_obj( ).has_field_changed( c_field_id_`{`$arg_tfield`} )`}
    && get_obj( ).child_`{`$arg_child`}( ).iterate_forwards( ) )
   {
      do
      {
         get_obj( ).child_`{`$arg_child`}( ).op_destroy( );
         get_obj( ).child_`{`$arg_child`}( ).op_apply( );
      } while( get_obj( ).child_`{`$arg_child`}( ).iterate_next( ) );
   }
`,\
   if( !is_null( get_obj( ).`{`$arg_tfield`}( ) ) )
   {
      get_obj( ).child_`{`$arg_child`}( ).op_destroy( get_obj( ).get_key( ) + "`{`$arg_separator`}" + get_obj( ).`{`$arg_tfield`}( ).get_key( ) );
      get_obj( ).child_`{`$arg_child`}( ).op_apply( );
   }
`}\
`{`!`@eq`(`$arg_output_arg`,`'`'`)`&`@eq`(`'procedure`'`,`$section`)
`{`!`@eq`(`$arg_output_field`,`'`'`)\
   `{`$arg_output_arg`} = to_string( get_obj( ).`{`$arg_output_field`}( ) );
`,\
   // FUTURE: The return message itself should be a module string.
   `{`$arg_output_arg`} = get_obj( ).get_display_name( ) + " "
    + get_module_string( "procedure_" + string( c_procedure_id_`{`$arg_procedure`} ) ) + " completed.";
`}`}\
   // [(finish destroy_children)]
`}
