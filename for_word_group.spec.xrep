`{`@eq`(`'includes`'`,`$section`)\
// [(start for_word_group)]
#include "`{`$module_name`}_`{`$arg_wclass`}.h"
// [(finish for_word_group)]
`}
`{`@eq`(`'anonymous`'`,`$section`)\
// [(start for_word_group)]
const char* const c_reversed_map_name = "reversed";
// [(finish for_word_group)]
`}
`{`@eq`(`'generate_procedure`'`,`$section`)\
   // [(start for_word_group)]
   string key_info( FIELD_ID( `{`$module_name`}, `{`$arg_wgiclass`}, `{`$arg_order`} ) );
   key_info += ' ';

   if( get_obj( ).child_`{`$arg_group_items`}( ).iterate_forwards( key_info ) )
   {
      string clipboard;

      bool is_in_group = false;
      bool was_in_group = false;
      bool last_was_skipped = false;
      bool group_was_skipped = false;
      bool prev_last_was_skipped = false;
      do
      {
         bool skip = false;
         bool group_start = false;
         if( get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_can_skip`}( ) )
            skip = rand( ) % 2;

         bool use_measure = get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_use_measure`}( );
         bool expand_all_levels = get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_expand_all`}( );

         if( was_in_group )
         {
            was_in_group = false;
            last_was_skipped = prev_last_was_skipped;
         }

         if( !is_in_group && get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_group_next`}( ) )
         {
            group_start = true;
            is_in_group = true;
            group_was_skipped = false;
            prev_last_was_skipped = last_was_skipped;
         }
         else if( is_in_group && !get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_group_next`}( ) )
         {
            is_in_group = false;
            was_in_group = true;
         }

         if( ( is_in_group || was_in_group ) && group_was_skipped )
         {
            group_was_skipped = is_in_group;
            continue;
         }

         if( !last_was_skipped && get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_was_skipped`}( ) )
         {
            if( group_start )
               group_was_skipped = true;

            if( get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_group_next`}( ) )
               last_was_skipped = true;

            continue;
         }

         if( last_was_skipped && get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_was_not_skipped`}( ) )
         {
            if( group_start )
               group_was_skipped = true;

            if( get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_group_next`}( ) )
               last_was_skipped = false;

            continue;
         }

         if( skip )
         {
            last_was_skipped = true;
            if( group_start )
            {
               group_was_skipped = true;
               prev_last_was_skipped = true;
            }
         }
         else
         {
            if( group_start )
               prev_last_was_skipped = false;

            if( !`{`$arg_generate_pinyin`}.empty( ) && !get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_ppinyin`}( ).empty( ) )
               `{`$arg_generate_pinyin`} += " ";

            `{`$arg_generate_pinyin`} += get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_ppinyin`}( );
            `{`$arg_generate_chinese`} += get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_pchinese`}( );

            bool is_cut = false;
            bool is_copy = false;
            bool is_more = false;
            string prefix_translation( get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_ptranslation`}( ) );
            if( prefix_translation.find( "{cut}" ) == 0 )
            {
               is_cut = true;
               prefix_translation.erase( 0, 5 );
            }
            else if( prefix_translation.find( "{copy}" ) == 0 )
            {
               is_copy = true;
               prefix_translation.erase( 0, 6 );
            }
            else if( prefix_translation.find( "{cut_more}" ) == 0 )
            {
               is_cut = true;
               is_more = true;
               prefix_translation.erase( 0, 10 );
            }
            else if( prefix_translation.find( "{copy_more}" ) == 0 )
            {
               is_copy = true;
               is_more = true;
               prefix_translation.erase( 0, 11 );
            }

            if( !`{`$arg_generate_translation`}.empty( ) && !prefix_translation.empty( ) )
               `{`$arg_generate_translation`} += " ";

            size_t tpos = `{`$arg_generate_translation`}.size( );

            `{`$arg_generate_translation`} += search_replace( prefix_translation, "{paste}", clipboard );

            int num_options = 0;
            if( !is_null( get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_option1`}( ) ) )
               ++num_options;
            if( !is_null( get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_option2`}( ) ) )
               ++num_options;
            if( !is_null( get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_option3`}( ) ) )
               ++num_options;
            if( !is_null( get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_option4`}( ) ) )
               ++num_options;

            string option_1_pinyin = get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_option1`}( ).`{`$arg_opinyin`}( );
            string option_1_chinese = get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_option1`}( ).`{`$arg_ochinese`}( );
            string option_1_translation;
            get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_pick_proc`}(
             get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_option1`}( ).`{`$arg_otranslation`}( ), option_1_translation );

            string option_2_pinyin = get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_option2`}( ).`{`$arg_opinyin`}( );
            string option_2_chinese = get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_option2`}( ).`{`$arg_ochinese`}( );
            string option_2_translation;
            get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_pick_proc`}(
             get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_option2`}( ).`{`$arg_otranslation`}( ), option_2_translation );

            string option_3_pinyin = get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_option3`}( ).`{`$arg_opinyin`}( );
            string option_3_chinese = get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_option3`}( ).`{`$arg_ochinese`}( );
            string option_3_translation;
            get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_pick_proc`}(
             get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_option3`}( ).`{`$arg_otranslation`}( ), option_3_translation );

            string option_4_pinyin = get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_option4`}( ).`{`$arg_opinyin`}( );
            string option_4_chinese = get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_option4`}( ).`{`$arg_ochinese`}( );
            string option_4_translation;
            get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_pick_proc`}(
             get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_option4`}( ).`{`$arg_otranslation`}( ), option_4_translation );

            if( get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_as_words`}( ) )
            {
               if( use_measure )
               {
                  if( !is_null( get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_option1`}( ).`{`$arg_omeasure`}( ) ) )
                  {
                     if( !option_1_pinyin.empty( ) )
                        option_1_pinyin = get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_option1`}( ).`{`$arg_omeasure`}( ).`{`$arg_opinyin`}( ) + " " + option_1_pinyin;

                     option_1_chinese = get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_option1`}( ).`{`$arg_omeasure`}( ).`{`$arg_ochinese`}( ) + option_1_chinese;
                  }

                  if( !is_null( get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_option2`}( ).`{`$arg_omeasure`}( ) ) )
                  {
                     if( !option_2_pinyin.empty( ) )
                        option_2_pinyin = get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_option2`}( ).`{`$arg_omeasure`}( ).`{`$arg_opinyin`}( ) + " " + option_2_pinyin;

                     option_2_chinese = get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_option2`}( ).`{`$arg_omeasure`}( ).`{`$arg_ochinese`}( ) + option_2_chinese;
                  }

                  if( !is_null( get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_option3`}( ).`{`$arg_omeasure`}( ) ) )
                  {
                     if( !option_3_pinyin.empty( ) )
                        option_3_pinyin = get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_option3`}( ).`{`$arg_omeasure`}( ).`{`$arg_opinyin`}( ) + " " + option_3_pinyin;

                     option_3_chinese = get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_option3`}( ).`{`$arg_omeasure`}( ).`{`$arg_ochinese`}( ) + option_3_chinese;
                  }

                  if( !is_null( get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_option4`}( ).`{`$arg_omeasure`}( ) ) )
                  {
                     if( !option_4_pinyin.empty( ) )
                        option_4_pinyin = get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_option4`}( ).`{`$arg_omeasure`}( ).`{`$arg_opinyin`}( ) + " " + option_4_pinyin;

                     option_4_chinese = get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_option4`}( ).`{`$arg_omeasure`}( ).`{`$arg_ochinese`}( ) + option_4_chinese;
                  }
               }
            }
            else
            {
               if( !is_null( get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_option1`}( ) )
                && get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_option1`}( ).`{`$arg_otag`}( ) )
               {
                  string pinyin_list, chinese_list, translation_list;

                  get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_option1`}( ).`{`$arg_ogenlist_proc`}( pinyin_list,
                   chinese_list, translation_list, true, expand_all_levels, use_measure, get_obj( ).`{`$arg_level`}( ) );

                  if( !pinyin_list.empty( ) && !chinese_list.empty( ) && !translation_list.empty( ) )
                  {
                     vector< string > pinyin_options;
                     vector< string > chinese_options;
                     vector< string > translation_options;

                     split_string( pinyin_list, pinyin_options, '+' );
                     split_string( chinese_list, chinese_options, '+' );
                     split_string( translation_list, translation_options, '+' );

                     int index = rand( ) % pinyin_options.size( );

                     option_1_pinyin = pinyin_options[ index ];
                     option_1_chinese = chinese_options[ index ];
                     get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_pick_proc`}( translation_options[ index ], option_1_translation );
                  }
               }

               if( !is_null( get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_option2`}( ) )
                && get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_option2`}( ).`{`$arg_otag`}( ) )
               {
                  string pinyin_list, chinese_list, translation_list;

                  get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_option2`}( ).`{`$arg_ogenlist_proc`}( pinyin_list,
                   chinese_list, translation_list, true, expand_all_levels, use_measure, get_obj( ).`{`$arg_level`}( ) );

                  if( !pinyin_list.empty( ) && !chinese_list.empty( ) && !translation_list.empty( ) )
                  {
                     vector< string > pinyin_options;
                     vector< string > chinese_options;
                     vector< string > translation_options;

                     split_string( pinyin_list, pinyin_options, '+' );
                     split_string( chinese_list, chinese_options, '+' );
                     split_string( translation_list, translation_options, '+' );

                     int index = rand( ) % pinyin_options.size( );

                     option_2_pinyin = pinyin_options[ index ];
                     option_2_chinese = chinese_options[ index ];
                     get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_pick_proc`}( translation_options[ index ], option_2_translation );
                  }
               }

               if( !is_null( get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_option3`}( ) )
                && get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_option3`}( ).`{`$arg_otag`}( ) )
               {
                  string pinyin_list, chinese_list, translation_list;

                  get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_option3`}( ).`{`$arg_ogenlist_proc`}( pinyin_list,
                   chinese_list, translation_list, true, expand_all_levels, use_measure, get_obj( ).`{`$arg_level`}( ) );

                  if( !pinyin_list.empty( ) && !chinese_list.empty( ) && !translation_list.empty( ) )
                  {
                     vector< string > pinyin_options;
                     vector< string > chinese_options;
                     vector< string > translation_options;

                     split_string( pinyin_list, pinyin_options, '+' );
                     split_string( chinese_list, chinese_options, '+' );
                     split_string( translation_list, translation_options, '+' );

                     int index = rand( ) % pinyin_options.size( );

                     option_3_pinyin = pinyin_options[ index ];
                     option_3_chinese = chinese_options[ index ];
                     get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_pick_proc`}( translation_options[ index ], option_3_translation );
                  }
               }

               if( !is_null( get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_option4`}( ) )
                && get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_option4`}( ).`{`$arg_otag`}( ) )
               {
                  string pinyin_list, chinese_list, translation_list;

                  get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_option4`}( ).`{`$arg_ogenlist_proc`}( pinyin_list,
                   chinese_list, translation_list, true, expand_all_levels, use_measure, get_obj( ).`{`$arg_level`}( ) );

                  if( !pinyin_list.empty( ) && !chinese_list.empty( ) && !translation_list.empty( ) )
                  {
                     vector< string > pinyin_options;
                     vector< string > chinese_options;
                     vector< string > translation_options;

                     split_string( pinyin_list, pinyin_options, '+' );
                     split_string( chinese_list, chinese_options, '+' );
                     split_string( translation_list, translation_options, '+' );

                     int index = rand( ) % pinyin_options.size( );

                     option_4_pinyin = pinyin_options[ index ];
                     option_4_chinese = chinese_options[ index ];
                     get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_pick_proc`}( translation_options[ index ], option_4_translation );
                  }
               }
            }

            string::size_type pos = option_1_translation.find( " (" );
            if( pos != string::npos )
               option_1_translation.erase( pos );
            else if( !option_1_translation.empty( ) && option_1_translation[ 0 ] == '(' )
               option_1_translation.erase( );

            pos = option_2_translation.find( " (" );
            if( pos != string::npos )
               option_2_translation.erase( pos );
            else if( !option_2_translation.empty( ) && option_2_translation[ 0 ] == '(' )
               option_2_translation.erase( );

            pos = option_3_translation.find( " (" );
            if( pos != string::npos )
               option_3_translation.erase( pos );
            else if( !option_3_translation.empty( ) && option_3_translation[ 0 ] == '(' )
               option_3_translation.erase( );

            pos = option_4_translation.find( " (" );
            if( pos != string::npos )
               option_4_translation.erase( pos );
            else if( !option_4_translation.empty( ) && option_4_translation[ 0 ] == '(' )
               option_4_translation.erase( );

            if( get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_as_phrase`}( ) )
            {
               if( !`{`$arg_generate_pinyin`}.empty( ) )
                  `{`$arg_generate_pinyin`} += " ";

               `{`$arg_generate_pinyin`} += option_1_pinyin;

               if( !option_2_pinyin.empty( ) )
                  `{`$arg_generate_pinyin`} += " " + option_2_pinyin;

               if( !option_3_pinyin.empty( ) )
                  `{`$arg_generate_pinyin`} += " " + option_3_pinyin;

               if( !option_4_pinyin.empty( ) )
                  `{`$arg_generate_pinyin`} += " " + option_4_pinyin;

               `{`$arg_generate_chinese`} += option_1_chinese;
               `{`$arg_generate_chinese`} += option_2_chinese;
               `{`$arg_generate_chinese`} += option_3_chinese;
               `{`$arg_generate_chinese`} += option_4_chinese;

               if( !`{`$arg_generate_translation`}.empty( ) )
                  `{`$arg_generate_translation`} += " ";
               `{`$arg_generate_translation`} += option_1_translation;

               bool is_replace = ( get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_pick_from_trans`}( ).find( "@replace" ) == 0 );

               if( !is_replace )
               {
                  if( !option_2_translation.empty( ) )
                     `{`$arg_generate_translation`} += " " + option_2_translation;

                  if( !option_3_translation.empty( ) )
                     `{`$arg_generate_translation`} += " " + option_3_translation;

                  if( !option_4_translation.empty( ) )
                     `{`$arg_generate_translation`} += " " + option_4_translation;
               }
            }
            else if( num_options )
            {
               if( !`{`$arg_generate_pinyin`}.empty( ) )
                  `{`$arg_generate_pinyin`} += " ";

               if( !`{`$arg_generate_translation`}.empty( ) )
                  `{`$arg_generate_translation`} += " ";

               int option = rand( ) % num_options;
               switch( option )
               {
                  case 0:
                  `{`$arg_generate_pinyin`} += option_1_pinyin;
                  `{`$arg_generate_chinese`} += option_1_chinese;
                  `{`$arg_generate_translation`} += option_1_translation;
                  break;

                  case 1:
                  `{`$arg_generate_pinyin`} += option_2_pinyin;
                  `{`$arg_generate_chinese`} += option_2_chinese;
                  `{`$arg_generate_translation`} += option_2_translation;
                  break;

                  case 2:
                  `{`$arg_generate_pinyin`} += option_3_pinyin;
                  `{`$arg_generate_chinese`} += option_3_chinese;
                  `{`$arg_generate_translation`} += option_3_translation;
                  break;

                  case 3:
                  `{`$arg_generate_pinyin`} += option_4_pinyin;
                  `{`$arg_generate_chinese`} += option_4_chinese;
                  `{`$arg_generate_translation`} += option_4_translation;
                  break;

                  default:
                  throw runtime_error( "unexpected option #" + to_string( option ) );
               }
            }

            if( !get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_spinyin`}( ).empty( ) )
               `{`$arg_generate_pinyin`} += " " + get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_spinyin`}( );

            `{`$arg_generate_chinese`} += get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_schinese`}( );

            if( !get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_stranslation`}( ).empty( ) )
            {
               string test_translation( get_obj( ).child_`{`$arg_group_items`}( ).`{`$arg_stranslation`}( ) );
               test_translation = search_replace( test_translation, "{paste}", clipboard );

               if( !test_translation.empty( ) && !`{`$arg_generate_translation`}.empty( )
                && test_translation[ 0 ] != ',' && test_translation[ 0 ] != '.'
                && test_translation[ 0 ] != '?' && test_translation[ 0 ] != '!' )
                  `{`$arg_generate_translation`} += " ";

               if( test_translation.size( ) > 1
                && test_translation[ 0 ] == '!' && test_translation[ 1 ] != ' ' )
               {
                  if( !`{`$arg_generate_translation`}.empty( ) )
                     test_translation.erase( );
                  else
                     test_translation.erase( 0, 1 );
               }

               `{`$arg_generate_translation`} += test_translation;
            }

            if( is_cut || is_copy )
            {
               if( !is_more )
                  clipboard = `{`$arg_generate_translation`}.substr( tpos );
               else
               {
                  if( !clipboard.empty( ) )
                     clipboard += " ";
                  clipboard += `{`$arg_generate_translation`}.substr( tpos );
               }

               if( is_cut )
               {
                  `{`$arg_generate_translation`}.erase( tpos );
                  if( !`{`$arg_generate_translation`}.empty( ) && `{`$arg_generate_translation`}[ `{`$arg_generate_translation`}.size( ) - 1 ] == ' ' )
                     `{`$arg_generate_translation`}.erase( `{`$arg_generate_translation`}.size( ) - 1 );
               }
            }

            last_was_skipped = false;
         }
      } while( get_obj( ).child_`{`$arg_group_items`}( ).iterate_next( ) );
   }
   // [(finish for_word_group)]
`}
`{`@eq`(`'value_will_be_provided`'`,`$section`)\
   // [(start for_word_group)]
   if( field_name == c_field_name_`{`$arg_search_name`} )
      return true;
   // [(finish for_word_group)]
`}
`{`@eq`(`'for_store`'`,`$section`)\
   // [(start for_word_group)]
   if( !get_obj( ).`{`$arg_pinyin`}( ).empty( ) )
   {
      vector< string > words;
      split_string( get_obj( ).`{`$arg_pinyin`}( ), words, ' ' );

      string next, search_name;
      for( size_t i = 0; i < words.size( ); i++ )
      {
         if( !search_name.empty( ) )
            search_name += ' ';

         next = get_class_map_value(
          `{`$module_name`}_`{`$arg_wclass`}::static_class_id( ), c_reversed_map_name, words[ i ] );

         if( next.empty( ) )
            search_name += words[ i ];
         else
            search_name += next;
      }

      get_obj( ).`{`$arg_search_name`}( search_name );
   }
   // [(finish for_word_group)]
`}
