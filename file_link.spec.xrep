`{`@eq`(`'for_store`'`,`$section`)\
   // [(start file_link)]
   // NOTE: Empty code block for scope purposes.
   {
      string sep( "-" );
      string ext( "`{`$arg_ext`}" );
`{`@eq`(`$arg_field2`,`'`'`)\
      string source( get_obj( ).`{`$arg_field1`}( ) + ext );\
`,\
      string source( get_obj( ).`{`!`@eq`(`$arg_pfield2`,`'`'`)`$arg_pfield2`*`'( ).`'`}`{`$arg_field2`}( ) + "_" + get_obj( ).`{`$arg_field1`}( ) + ext );\
`}

      bool has_source_file( exists_file( source ) );
      string name( get_obj( ).get_key( ) + sep + c_field_id_`{`$arg_field`} + ext );

      string dest( get_obj( ).get_attached_file_path( name ) );

      if( exists_file( dest, false ) )
         remove_file( dest );
      else if( has_source_file )
         create_directories_for_file_name( dest, true );

      if( !has_source_file )
         get_obj( ).`{`$arg_field`}( "" );
      else
      {
         link_file( source, dest );
         get_obj( ).`{`$arg_field`}( name );
      }
   }
   // [(finish file_link)]
`}
`{`@eq`(`'for_destroy`'`,`$section`)\
   // [(start file_link)]
   if( !get_obj( ).`{`$arg_field`}( ).empty( ) )
      remove_file( get_obj( ).get_attached_file_path( get_obj( ).`{`$arg_field`}( ) ) );
   // [(finish file_link)]
`}
