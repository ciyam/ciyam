<sio/>
 <groups/>
  <group/>
   <name>test_bundle
   <tests/>
    <test/>
     <name>1
     <description>Create and update a base64 encoded bundle.
     <kill>test.bun
     <test_step/>
      <name>a
      <exec>bundle -q -b64 -ngz test test.png
      <input>false
      <output>generate
     </test_step>
     <test_step/>
      <name>b
      <exec>print test.bun
      <input>false
      <output>generate
     </test_step>
     <test_step/>
      <name>c
      <exec>bundle -q -b64 -ngz test test.jpg
      <input>false
      <output>generate
     </test_step>
     <test_step/>
      <name>d
      <exec>print test.bun
      <input>false
      <output>generate
     </test_step>
     <test_step/>
      <name>e
      <exec>bundle -q -b64 -ngz test test.jpg
      <input>false
      <output>generate
     </test_step>
     <test_step/>
      <name>f
      <exec>print test.bun
      <input>false
      <output>generate
     </test_step>
    </test>
   </tests>
  </group>
  <group/>
   <name>test_cache
   <tests/>
    <test/>
     <name>1
     <description>Populate cache data and perform basic single region tests.
     <kill>test_cache.dat
     <test_step/>
      <name>a
      <exec>test_cache -quiet 5 10
      <input>true
      <output>generate
     </test_step>
     <test_step/>
      <name>b
      <exec>
      <input>false
      <output>automatic
     </test_step>
     <test_step/>
      <name>c
      <exec>
      <input>false
      <output>automatic
     </test_step>
     <test_step/>
      <name>d
      <exec>
      <input>false
      <output>automatic
     </test_step>
     <test_step/>
      <name>e
      <exec>
      <input>false
      <output>automatic
     </test_step>
    </test>
    <test/>
     <name>2
     <description>Perform various tests using multiple regions.
     <test_step/>
      <name>a
      <exec>test_cache -quiet 20 10 4
      <input>true
      <output>generate
     </test_step>
     <test_step/>
      <name>b
      <exec>
      <input>false
      <output>automatic
     </test_step>
     <test_step/>
      <name>c
      <exec>
      <input>false
      <output>automatic
     </test_step>
     <test_step/>
      <name>d
      <exec>
      <input>false
      <output>automatic
     </test_step>
     <test_step/>
      <name>e
      <exec>
      <input>false
      <output>automatic
     </test_step>
     <test_step/>
      <name>f
      <exec>
      <input>false
      <output>automatic
     </test_step>
    </test>
    <test/>
     <name>3
     <description>Perform various maximum limit tests.
     <test_step/>
      <name>a
      <exec>test_cache -quiet 65536 65536
      <input>true
      <output>generate
     </test_step>
     <test_step/>
      <name>b
      <exec>
      <input>false
      <output>automatic
     </test_step>
     <test_step/>
      <name>c
      <exec>
      <input>false
      <output>automatic
     </test_step>
     <test_step/>
      <name>d
      <exec>
      <input>false
      <output>automatic
     </test_step>
     <test_step/>
      <name>e
      <exec>
      <input>false
      <output>automatic
     </test_step>
     <test_step/>
      <name>f
      <exec>
      <input>false
      <output>automatic
     </test_step>
    </test>
   </tests>
  </group>
  <group/>
   <name>test_diff
   <tests/>
    <test/>
     <name>1
     <description>Perform "rcs" diff operations between variations of "diff0.txt".
     <test_step/>
      <name>a
      <exec>diff -q -rcs diff0.txt diff0.0.txt
      <input>false
      <output>generate
     </test_step>
     <test_step/>
      <name>b
      <exec>diff -q -rcs diff0.txt diff0.1.txt
      <input>false
      <output>generate
     </test_step>
     <test_step/>
      <name>c
      <exec>diff -q -rcs diff0.txt diff0.2.txt
      <input>false
      <output>generate
     </test_step>
     <test_step/>
      <name>d
      <exec>diff -q -rcs diff0.txt diff0.3.txt
      <input>false
      <output>generate
     </test_step>
     <test_step/>
      <name>e
      <exec>diff -q -rcs diff0.txt diff0.4.txt
      <input>false
      <output>generate
     </test_step>
     <test_step/>
      <name>f
      <exec>diff -q -rcs diff0.txt diff0.5.txt
      <input>false
      <output>generate
     </test_step>
     <test_step/>
      <name>g
      <exec>diff -q -rcs diff0.txt diff0.6.txt
      <input>false
      <output>generate
     </test_step>
     <test_step/>
      <name>h
      <exec>diff -q -rcs diff0.txt diff0.7.txt
      <input>false
      <output>generate
     </test_step>
     <test_step/>
      <name>i
      <exec>diff -q -rcs diff0.txt diff0.8.txt
      <input>false
      <output>generate
     </test_step>
     <test_step/>
      <name>j
      <exec>diff -q -rcs diff0.txt diff0.9.txt
      <input>false
      <output>generate
     </test_step>
    </test>
    <test/>
     <name>2
     <description>Perform "rcs" diff operations between variations of "diff1.txt".
     <test_step/>
      <name>a
      <exec>diff -q -rcs diff1.txt diff1.0.txt
      <input>false
      <output>generate
     </test_step>
     <test_step/>
      <name>b
      <exec>diff -q -rcs diff1.txt diff1.1.txt
      <input>false
      <output>generate
     </test_step>
     <test_step/>
      <name>c
      <exec>diff -q -rcs diff1.txt diff1.2.txt
      <input>false
      <output>generate
     </test_step>
     <test_step/>
      <name>d
      <exec>diff -q -rcs diff1.txt diff1.3.txt
      <input>false
      <output>generate
     </test_step>
    </test>
    <test/>
     <name>3
     <description>Perform three-way merges between "rcs" diffs and "diff0.txt" base.
     <test_step/>
      <name>a
      <exec>!diffp -q diff0.txt test_diff_1_a.tst test_diff_1_b.tst
      <input>false
      <output>generate
     </test_step>
     <test_step/>
      <name>b
      <exec>!diffp -q diff0.txt test_diff_1_b.tst test_diff_1_c.tst
      <input>false
      <output>generate
     </test_step>
     <test_step/>
      <name>c
      <exec>!diffp -q diff0.txt test_diff_1_c.tst test_diff_1_d.tst
      <input>false
      <output>generate
     </test_step>
     <test_step/>
      <name>d
      <exec>!diffp -q diff0.txt test_diff_1_d.tst test_diff_1_e.tst
      <input>false
      <output>generate
     </test_step>
     <test_step/>
      <name>e
      <exec>!diffp -q diff0.txt test_diff_1_e.tst test_diff_1_f.tst
      <input>false
      <output>generate
     </test_step>
     <test_step/>
      <name>f
      <exec>!diffp -q diff0.txt test_diff_1_f.tst test_diff_1_g.tst
      <input>false
      <output>generate
     </test_step>
     <test_step/>
      <name>g
      <exec>!diffp -q diff0.txt test_diff_1_g.tst test_diff_1_h.tst
      <input>false
      <output>generate
     </test_step>
     <test_step/>
      <name>h
      <exec>!diffp -q diff0.txt test_diff_1_h.tst test_diff_1_i.tst
      <input>false
      <output>generate
     </test_step>
     <test_step/>
      <name>i
      <exec>!diffp -q diff0.txt test_diff_1_i.tst test_diff_1_j.tst
      <input>false
      <output>generate
     </test_step>
    </test>
    <test/>
     <name>4
     <description>Perform three-way merges between "rcs" diffs and "diff1.txt" base.
     <test_step/>
      <name>a
      <exec>!diffp -q diff1.txt test_diff_2_a.tst test_diff_2_b.tst
      <input>false
      <output>generate
     </test_step>
     <test_step/>
      <name>b
      <exec>!diffp -q diff1.txt test_diff_2_b.tst test_diff_2_c.tst
      <input>false
      <output>generate
     </test_step>
    </test>
   </tests>
  </group>
  <group/>
   <name>test_ods
   <tests/>
    <test/>
     <name>1
     <description>Populate DB using nested transactions.
     <kill>test_ods.dat
     <kill>test_ods.idx
     <kill>test_ods.hdr
     <kill>test_ods.dat.lck
     <kill>test_ods.idx.lck
     <test_step/>
      <name>a
      <exec>test_ods -quiet -x
      <input>true
      <output>generate
     </test_step>
     <test_step/>
      <name>b
      <exec>dump test_ods
      <input>false
      <output>generate
     </test_step>
     <test_step/>
      <name>c
      <exec>dump all test_ods
      <input>false
      <output>generate
     </test_step>
     <test_step/>
      <name>d
      <exec>dump -d all test_ods
      <input>false
      <output>generate
     </test_step>
    </test>
    <test/>
     <name>2
     <description>Test a couple of larger capacity transactions.
     <kill>test_ods.dat
     <kill>test_ods.idx
     <kill>test_ods.hdr
     <kill>test_ods.dat.lck
     <kill>test_ods.idx.lck
     <test_step/>
      <name>a
      <exec>test_ods -quiet -x
      <input>true
      <output>generate
     </test_step>
     <test_step/>
      <name>b
      <exec>dump test_ods
      <input>false
      <output>generate
     </test_step>
     <test_step/>
      <name>c
      <exec>dump -d 0 test_ods
      <input>false
      <output>generate
     </test_step>
    </test>
    <test/>
     <name>3
     <description>Test DB compress operation.
     <test_step/>
      <name>a
      <exec>test_ods -quiet -x
      <input>true
      <output>generate
     </test_step>
     <test_step/>
      <name>b
      <exec>dump test_ods
      <input>false
      <output>generate
     </test_step>
     <test_step/>
      <name>c
      <exec>dump -d 0 test_ods
      <input>false
      <output>generate
     </test_step>
    </test>
   </tests>
  </group>
  <group/>
   <name>test_parser
   <tests/>
    <test/>
     <name>1
     <description>Perform command syntax and usage tests.
     <test_step/>
      <name>a
      <exec>test_parser /test
      <input>false
      <output>generate
     </test_step>
    </test>
   </tests>
  </group>
 </groups>
</sio>
