; Copyright (c) 2022-2024 CIYAM Developers
;
; Distributed under the MIT/X11 software license, please refer to the file license.txt
; in the root project directory or http://www.opensource.org/licenses/mit-license.php.
;
<std.fissile
;
NUM_ARGS=0
@ifdef $1
NUM_ARGS=@$NUM_ARGS+1
@endif
@ifdef $2
NUM_ARGS=@$NUM_ARGS+1
@endif
;
@ifneq "$NUM_ARGS" "2"
#NOTE: This script requires an identity and a description.
@else
ERROR=
;
IDENTITY=$1
DESCRIPTION=$2
SHARED_SECRET_HASH=$3
;
REVERSED=*!reverse?$IDENTITY
;
PEER_HUB=
PEER_TYPE=1
;
.system_variable @blockchain_peer_hub_identity
@ifeq "$IDENTITY" "$OUTPUT"
PEER_HUB=1
PEER_TYPE=-2
@endif
;
DEMO=
@ifeq "$IDENTITY" "735d12ca9"
DEMO=1
@endif
@ifeq "$IDENTITY" "27a7bd560"
DEMO=1
@endif
;
.system_variable @peer_port
PEER_PORT=$OUTPUT
@ifeq "$PEER_PORT" ""
#Error: Found empty '@peer_port' system variable value.
@else
@ifdef $PEER_HUB
.peer_listen $PEER_PORT $IDENTITY
@else
.peer_listen $PEER_PORT $IDENTITY,$REVERSED
@endif
;
.storage_init Meta
.pc sys @now Meta Global_Peerchain_Entry $IDENTITY "Auto_Start=1,Description=$DESCRIPTION,Peer_Type=$PEER_TYPE,Local_Port=$PEER_PORT"
;
@ifndef $ERROR
@ifdef $SHARED_SECRET_HASH
.identity -raw
.crypto_hash $IDENTITY$REVERSED$OUTPUT
OBFUSCATED_IDENTITY=@substr:0,9:$OUTPUT
;
.system_variable >@secret_hash_$OBFUSCATED_IDENTITY $SHARED_SECRET_HASH
@endif
;
@ifdef $PEER_HUB
#Created listener and global peerchain entry for identity '$IDENTITY'.
@else
;
@ifdef $DEMO
BACKUP_SIZE=10GB
SHARED_SIZE=1GB
@else
BACKUP_SIZE=100GB
SHARED_SIZE=10GB
@endif
;
.system_variable @files_area_dir
FILES_AREA_DIR=$OUTPUT
;
~mkdir $FILES_AREA_DIR/$IDENTITY
~mkdir $FILES_AREA_DIR/$REVERSED
;
.file_archive -add $FILES_AREA_DIR/$IDENTITY $BACKUP_SIZE $IDENTITY
.file_archive -add $FILES_AREA_DIR/$REVERSED $SHARED_SIZE $REVERSED
;
#Created listeners and global peerchain entry for identity '$IDENTITY' (and '$REVERSED').
@endif
@endif
.storage_term
@endif
@endif
