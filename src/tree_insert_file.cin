; Copyright (c) 2019 CIYAM Developers
;
; Distributed under the MIT/X11 software license, please refer to the file license.txt
; in the root project directory or http://www.opensource.org/licenses/mit-license.php.
;
.session_variable num_def_args 0
@ifdef $1
.session_variable num_def_args @increment
@endif
@ifdef $2
.session_variable num_def_args @increment
@endif
@ifdef $3
.session_variable num_def_args @increment
@endif
@ifdef $4
.session_variable num_def_args @increment
@endif
@ifdef $5
.session_variable num_def_args @increment
@endif
;
.session_variable num_def_args
@ifneq "$OUTPUT" "5"
#NOTE: This script needs tree tag, branch type, branch below type, file and base path.
@else
;
TTAG=$1
TYPE=$2
TREE=$3
FILE=$4
PATH=$5
;
DIRS=@repstr:./\/:$TREE
LINES=@repstr:./\n:$TYPE.$TREE
.session_variable @deque ""
.session_variable @deque "~$LINES"
;
.file_put 1M*$PATH/$DIRS/$FILE $PATH/?$TREE.$FILE
@ifndef $ERROR
;
OUTPUT=
.file_tags -i=$TTAG
;
@ifndef $OUTPUT
;
; NOTE: Insert a new file into a new tree.
;
.file_list -a=?$TREE.$FILE -d=$DIRS/$FILE $TYPE.$TREE !
.file_tag -remove $TREE.$FILE
LAST=$TYPE.$TREE
;
@:LOOP
@label NEXT
.session_variable @deque pop_back
OUTPUT=
.session_variable @deque
@ifndef $OUTPUT
@label END_LOOP
@endif
@skip
;
@:NEXT
NEXT=@repstr:\n/.:$OUTPUT
@ifeq "$NEXT" "$TYPE"
NEXT=$TYPE.
@endif
.file_list -a=$LAST $NEXT !
.file_tag -remove $LAST
;
LAST=$NEXT
!!@:LOOP
@:END_LOOP
;
@else
;
; NOTE: Insert a new file (or replace file content) into an existing tree.
;
OUTPUT=
.session_variable @deque size
.session_variable depth $OUTPUT
.session_variable depth @increment
OUTPUT=
.session_variable depth
DEPTH=$OUTPUT
.file_info -recurse -d=-$DEPTH -p=$TYPE.$TREE $TTAG
@ifndef $OUTPUT
.file_hash $TREE.$FILE
.file_raw list "$OUTPUT $DIRS/$FILE" $TYPE.$TREE
@else
LIST_HEADER=%OUTPUT:1%
HEADER_PARTS=@repstr: /\n:$LIST_HEADER
LIST_HASH=%HEADER_PARTS:2%
.file_list -a=?$TREE.$FILE -d=$DIRS/$FILE -sort $LIST_HASH $TYPE.$TREE
@endif
.file_tag -remove $TREE.$FILE
LAST=$TYPE.$TREE
;
@:LOOP
@label NEXT
.session_variable @deque pop_back
OUTPUT=
.session_variable @deque
@ifndef $OUTPUT
@label END_LOOP
@endif
@skip
;
@:NEXT
NEXT=@repstr:\n/.:$OUTPUT
@ifeq "$NEXT" "$TYPE"
NEXT=$TYPE.
@endif
.session_variable depth @decrement
OUTPUT=
.session_variable depth
DEPTH=$OUTPUT
;
OUTPUT=
.file_info -recurse -d=-$DEPTH -p=$NEXT $TTAG
@ifndef $OUTPUT
.file_hash $LAST
.file_raw list "$OUTPUT $LAST" $NEXT
@else
LIST_HEADER=%OUTPUT:1%
HEADER_PARTS=@repstr: /\n:$LIST_HEADER
LIST_HASH=%HEADER_PARTS:2%
.file_list -a=$LAST -d=$LAST -sort $LIST_HASH $NEXT
@endif
.file_tag -remove $LAST
;
LAST=$NEXT
!!@:LOOP
@:END_LOOP
;
@endif
;
.file_list -a=$LAST $TTAG !
.file_tag -remove $LAST
;
@endif
@endif
