#!/bin/sh
# Copyright (c) 2022-2024 CIYAM Developers
#
# Distributed under the MIT/X11 software license, please refer to the file license.txt
# in the root project directory or http://www.opensource.org/licenses/mit-license.php.

if [ "$USER" = "" ]; then
 USER=$CIYAM_USER
fi

USER_PATH=/home/$USER
IMAGE_NAME=backup.img

BACKUP_HEIGHT=.backup.height
IMPORTED_TIME=.imported.time

BACKUP_PATH=$USER_PATH/backup
BACKUP_IMAGE=$USER_PATH/$IMAGE_NAME

BACKUP_HEIGHT_FILE=$BACKUP_PATH/$BACKUP_HEIGHT
IMPORTED_TIME_FILE=$BACKUP_PATH/$IMPORTED_TIME

# NOTE: Use this to prevent accidentally executing the backup twice.
if [ ! -f ~backup ]; then
 touch ~backup

 prepared=0

 TARGET_FILE=`./system_variable get @backup_target_file`

 # NOTE: If unable to umount will exit (so can call repeatedly until okay).
 if [ -d $BACKUP_PATH ]; then
  if mountpoint -q $BACKUP_PATH; then
   num_chunks=0
   if [ ! -f $BACKUP_HEIGHT_FILE ]; then
    num_bytes=`du -b -c -s $BACKUP_PATH | head -n 1 | cut -d $'\t' -f 1`
    num_chunks=$[num_bytes / 1000000]
   fi

   retval=0
   if [ "$TARGET_FILE" = "" ]; then
    sudo umount $BACKUP_PATH
    retval=$?
   fi

   if [ $retval -ne 0 ]; then
    date >Backup.txt
    echo "NOTE: Backup files area is not currently available (please try again later)." >>Backup.txt
    date >>Backup.txt
    rm ~backup
   else
    if [ $num_chunks -gt 1000 ]; then
     date >Backup.txt
     echo -n "Preparing..." >>Backup.txt
     for (( i = 1; i <= $num_chunks; i++ ))
     do
      head -c 1000000 /dev/urandom >$USER_PATH/~prepare_$i.tmp
      n=$[ i % 1000 ]
      if [ $n -eq 0 ]; then
       echo -n "." >>Backup.txt
      fi
     done
     echo "." >>Backup.txt
     prepared=1
     for (( i = 1; i <= $num_chunks; i++ ))
     do
      rm $USER_PATH/~prepare_$i.tmp
     done
    fi
   fi
  fi
 fi

 ./system_variable set @backup_needed ""
 ./system_variable set @restore_needed ""

 if [ $prepared -eq 0 ]; then
  date >Backup.txt
 fi
 echo "Starting backup..." >>Backup.txt

 if [ -f $BACKUP_IMAGE ]; then
  export CIYAM_MSLEEP=100
  export CIYAM_SECONDS=4
  export USE_BACKUP_ARCHIVE=1

  export CIYAM_STREAM_CIPHER=cc
  export REPO_CRYPT_PASSWORD=@sid

  if [ "$TARGET_FILE" = "" ]; then
   ./import_files $USER_PATH Backup : $IMAGE_NAME >>Backup.txt
  else
   ./import_files $BACKUP_PATH Backup : $TARGET_FILE >>Backup.txt
  fi

  ./tree_insert_trunks backup Backup,.Backup >>Backup.txt 2>&1
  ./generate_next_block -backup @sid backup >>Backup.txt 2>&1
  ./block_tree_relegate -backup backup >>Backup.txt 2>&1
 fi

 echo "Finished backup..." >>Backup.txt
 date >>Backup.txt

 BLOCKCHAIN_HEIGHT=`./system_variable get @blockchain_backup_height`

 if [ -f $BACKUP_IMAGE ]; then
  if [ "$TARGET_FILE" = "" ]; then
   sudo mount $BACKUP_IMAGE $BACKUP_PATH
  fi
  echo `date +%s` > $IMPORTED_TIME_FILE
  echo $BLOCKCHAIN_HEIGHT > $BACKUP_HEIGHT_FILE
 fi

 ./system_variable set @backup_in_progress ""

 rm ~backup
fi
