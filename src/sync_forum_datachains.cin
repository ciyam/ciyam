; Copyright (c) 2024-2025 CIYAM Developers
;
; Distributed under the MIT/X11 software license, please refer to the file license.txt
; in the root project directory or http://www.opensource.org/licenses/mit-license.php.
;
NUM_ARGS=0
@ifdef $1
NUM_ARGS=@$NUM_ARGS+1
@endif
;
@ifneq "$NUM_ARGS" "1"
#Usage: sync_forum_datachains.cin <storage> [<identity>]
@else
ERROR=
;
STORAGE=$1
IDENTITY=$2
;
.storage_init $STORAGE
;
@ifndef $ERROR
.session_variable @deque commence
;
.module_list
MODULES=$OUTPUT
MODULES=@repstr: /\n:$MODULES
MODULE=%MODULES:2%
;
@retain *
<$MODULE.channel_information.vars.lst
;
.storage_web_root -expand
STORAGE_WEB_DIR=$OUTPUT
;
@ifdef $IDENTITY
DATA_CHAINS=$IDENTITY
@else
.storage_datachain_details -list -type=1
DATA_CHAINS=$OUTPUT
@endif
;
@ifdef $DATA_CHAINS
.session_variable @deque "~$DATA_CHAINS"
;
@:LOOP
;
@label NEXT
.session_variable @deque front
NEXT_CHAIN=$OUTPUT
;
@ifndef $NEXT_CHAIN
@label END_LOOP
@endif
;
@skip
;
@:NEXT
.storage_datachain_details $NEXT_CHAIN
PEER_DATA_INFO=@repstr: /\n:$OUTPUT
;
CHANNELS=%PEER_DATA_INFO:3%
;
@ifdef $CHANNELS
ANY_PEER_CONNECTS=
;
@:CHANNEL_LOOP
;
@label NEXT_CHANNEL
;
LINES=@repstr:,/\n:$CHANNELS
NEXT_IDENTITY=%LINES:1%
;
REMAINING=@repstr:$NEXT_IDENTITY/:$CHANNELS
;
@ifeq "$REMAINING" ""
@label END_CHANNEL_LOOP
@endif
;
.pf $MODULE $CLASS_NAME "$FLD_ACTIVE,$FLD_IDENTITY#2 1,$NEXT_IDENTITY" $FLD_SUBMIT_CHAIN_ID,$FLD_HOST_NAME,$FLD_PORT_NUMBER -min
LINES=@repstr:,/\n:$OUTPUT
;
@ifdef $LINES
HASH_ID=%LINES:1%
HOST_NAME=%LINES:2%
HOST_PORT=%LINES:3%
;
; NOTE: Use the channel's secret hash for a secure peer connection.
.system_variable @secret_hash_$HASH_ID
@ifdef $OUTPUT
.session_variable @secret_hash @secret_hash_$HASH_ID
@endif
;
.peer_connect $NEXT_CHAIN $HOST_NAME-$HOST_PORT -data
;
@ifdef $ERROR
ERROR=
@else
ANY_PEER_CONNECTS=1
@endif
;
.wait 100
;
@endif
;
@skip
;
@:NEXT_CHANNEL
;
CHANNELS=@repstr:$NEXT_IDENTITY,/:$CHANNELS
;
!!@:CHANNEL_LOOP
@:END_CHANNEL_LOOP
;
@ifdef ANY_PEER_CONNECTS
.wait 500
.session_variable @errors_only 1
.system_variable @datachain_fetching @increment
.run_script !fetch_from_datachain "@storage=$STORAGE,@identity=$NEXT_CHAIN"
@endif
;
@endif
;
.session_variable @deque pop_front
!!@:LOOP
@:END_LOOP
;
@endif
;
.storage_term
;
@:WAIT_LOOP
;
.wait 250
;
@label NEXT_WAIT
.system_variable @datachain_fetching
@ifndef $OUTPUT
@label END_WAIT_LOOP
@endif
;
@skip
:
@:NEXT_WAIT
;
!!@:WAIT_LOOP
@:END_WAIT_LOOP
;
UI_FORUM_GROUP_CHANGING=ui_@forum_changing
FORUM_GROUP_CHANGING_FILE=@files:$STORAGE_WEB_DIR:$UI_FORUM_GROUP_CHANGING
;
@ifdef $FORUM_GROUP_CHANGING_FILE
~rm $STORAGE_WEB_DIR/$UI_FORUM_GROUP_CHANGING
@endif
;
.session_variable @deque complete
;
.system_variable @forum_sync_datachains ""
;
@endif
;
@endif
