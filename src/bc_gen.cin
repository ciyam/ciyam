; Copyright (c) 2021-2023 CIYAM Developers
;
; Distributed under the MIT/X11 software license, please refer to the file license.txt
; in the root project directory or http://www.opensource.org/licenses/mit-license.php.
;
<std.fissile
;
@ifneq "$1" "-shared"
SEED=$1
SHARED=
@else
SEED=$2
SHARED=1
@endif
;
@ifeq "$SEED" ""
#Usage: bc_gen.cin [-shared] <seed>
@else
;
@ifeq "$SEED" "de604cee0755a3d81944ea96aed12681"
MULTIPLE=5
UUID=d4e29a4041d28de363315110b335905
@else
MULTIPLE=50
@endif
;
SQUARED=@$MULTIPLE*$MULTIPLE
;
MULTIPLE=@$MULTIPLE-1
SQUARED=@$SQUARED-1
;
.session_variable @uuid
UUID=$OUTPUT
;
@ifndef $SHARED
.crypto_hash $SEED -s=-0
ENTROPY_HASH_PRIMARY=$OUTPUT
;
.crypto_hash $SEED -s=-$MULTIPLE
ENTROPY_HASH_SECONDARY=$OUTPUT
;
.crypto_hash $SEED -s=-$SQUARED
ENTROPY_HASH_TERTIARY=$OUTPUT
@else
.crypto_hash $SEED -s=+0
ENTROPY_HASH_PRIMARY=$OUTPUT
;
.crypto_hash $SEED -s=+$MULTIPLE
ENTROPY_HASH_SECONDARY=$OUTPUT
;
.crypto_hash $SEED -s=+$SQUARED
ENTROPY_HASH_TERTIARY=$OUTPUT
@endif
;
.crypto_lamport primary $ENTROPY_HASH_PRIMARY
.crypto_lamport secondary $ENTROPY_HASH_SECONDARY
.crypto_lamport tertiary $ENTROPY_HASH_TERTIARY
;
.file_put primary.key bc.$UUID.0.key
.file_put primary.pub bc.$UUID.0.pub
.file_put secondary.key bc.$UUID.$MULTIPLE.key
.file_put secondary.pub bc.$UUID.$MULTIPLE.pub
.file_put tertiary.key bc.$UUID.$SQUARED.key
.file_put tertiary.pub bc.$UUID.$SQUARED.pub
;
.file_crypt bc.$UUID.0.key @sid
.file_crypt bc.$UUID.$MULTIPLE.key @sid
.file_crypt bc.$UUID.$SQUARED.key @sid
;
.system_variable @os
@ifeq "$OUTPUT" "Linux"
~shred primary.key
~shred secondary.key
~shred tertiary.key
@endif
~rm primary.key secondary.key tertiary.key primary.pub secondary.pub tertiary.pub
;
.file_hash bc.$UUID.0.pub
PRIMARY_PUBKEY_HASH=$OUTPUT
;
.encode $PRIMARY_PUBKEY_HASH
PRIMARY_PUBKEY_HASH_ENC=$OUTPUT
;
.file_hash bc.$UUID.0.key
PRIMARY_PRIVKEY_HASH=$OUTPUT
;
.file_hash bc.$UUID.$MULTIPLE.pub
SECONDARY_PUBKEY_HASH=$OUTPUT
;
.file_hash bc.$UUID.$MULTIPLE.key
SECONDARY_PRIVKEY_HASH=$OUTPUT
;
.file_hash bc.$UUID.$SQUARED.pub
TERTIARY_PUBKEY_HASH=$OUTPUT
;
.file_hash bc.$UUID.$SQUARED.key
TERTIARY_PRIVKEY_HASH=$OUTPUT
;
@ifndef $SHARED
.crypto_hash $PRIMARY_PUBKEY_HASH$SECONDARY_PUBKEY_HASH$TERTIARY_PUBKEY_HASH
IDENTITY_HASH=$OUTPUT
;
IDENT=@substr:0,9:$IDENTITY_HASH
;
;NOTE: If a 9 character identity is palindromic then extend the size to 10 characters
;to ensure than when it's reversed a different value is used for the shared identity.
;
REVERSE=*!reverse?$IDENT
@ifeq "$IDENT" "$REVERSE"
IDENT=@substr:0,10:$IDENTITY_HASH
@endif
@else
.system_variable @blockchain_backup_identity
@ifndef $OUTPUT
ERROR=No backup blockchain identity was found.
#Error: $ERROR
@else
IDENT=*!reverse?$OUTPUT
@endif
@endif
;
@ifndef $ERROR
.file_tag -remove bc.$UUID.0.pub
.file_tag $PRIMARY_PUBKEY_HASH bc.$IDENT.0.pub
;
.file_tag -remove bc.$UUID.0.key
.file_tag $PRIMARY_PRIVKEY_HASH bc.$IDENT.0.key
;
.file_tag -remove bc.$UUID.$MULTIPLE.pub
.file_tag $SECONDARY_PUBKEY_HASH bc.$IDENT.$MULTIPLE.pub
;
.file_tag -remove bc.$UUID.$MULTIPLE.key
.file_tag $SECONDARY_PRIVKEY_HASH bc.$IDENT.$MULTIPLE.key
;
.file_hash bc.$IDENT.$MULTIPLE.pub
.encode $OUTPUT
SECONDARY_PUBKEY_HASH_ENC=$OUTPUT
;
.file_tag -remove bc.$UUID.$SQUARED.pub
.file_tag $TERTIARY_PUBKEY_HASH bc.$IDENT.$SQUARED.pub
;
.file_tag -remove bc.$UUID.$SQUARED.key
.file_tag $TERTIARY_PRIVKEY_HASH bc.$IDENT.$SQUARED.key
;
.file_hash bc.$IDENT.$SQUARED.pub
.encode $OUTPUT
TERTIARY_PUBKEY_HASH_ENC=$OUTPUT
;
@ifndef $SHARED
.file_raw -core blob blk:h=0,i=$IDENT\n\
p:$PRIMARY_PUBKEY_HASH_ENC,$SECONDARY_PUBKEY_HASH_ENC,$TERTIARY_PUBKEY_HASH_ENC bc.$IDENT.0.blk
@else
.file_raw -core blob blk:h=0,i=$IDENT,t=$IDENT\n\
p:$PRIMARY_PUBKEY_HASH_ENC,$SECONDARY_PUBKEY_HASH_ENC,$TERTIARY_PUBKEY_HASH_ENC bc.$IDENT.0.blk
@endif
;
BLOCK_HASH=$OUTPUT
;
.file_hash -q bc.$IDENT.zenith
@ifndef "$OUTPUT"
.file_tag $BLOCK_HASH bc.$IDENT.zenith
@ifndef $SHARED
.system_variable >@blockchain_backup_height 0
.system_variable >@blockchain_backup_initial $BLOCK_HASH
.system_variable >@blockchain_backup_identity $IDENT
@else
.system_variable >@blockchain_shared_height 0
.system_variable >@blockchain_shared_initial $BLOCK_HASH
.system_variable >@blockchain_shared_identity $IDENT
@endif
;
.system_variable @files_area_dir
FILES_AREA_DIR=$OUTPUT
;
~mkdir $FILES_AREA_DIR/$IDENT
@ifdef $SHARED
.file_archive -add $FILES_AREA_DIR/$IDENT 5GB $IDENT
.system_variable >@blockchain_shared_archive $FILES_AREA_DIR/$IDENT
@else
.file_archive -add $FILES_AREA_DIR/$IDENT 100GB $IDENT
@ifndef $ERROR
.system_variable >@blockchain_backup_archive $FILES_AREA_DIR/$IDENT
@endif
@endif
@endif
;
@ifndef $ERROR
#Created keys, genesis block and file archive for identity '$IDENT'.
@endif
;
@endif
@endif
