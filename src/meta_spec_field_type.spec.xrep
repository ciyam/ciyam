`{`@eq`(`'validate`'`,`$section`)\
   // [(start meta_spec_field_type)] `{`$arg_id`}
   // NOTE: Scope for local variables.
   {
      string error;

      int fld_primitive = -1;
      if( !get_obj( ).`{`$arg_field`}( ).get_key( ).empty( ) )
         fld_primitive = get_obj( ).`{`$arg_field`}( ).`{`$arg_prfield`}( );

      int test_primitive = -1;
      if( get_obj( ).`{`$arg_tcfield`}( ).get_key( ).empty( ) )
      {
         if( !get_obj( ).`{`$arg_tfield`}( ).get_key( ).empty( ) )
            test_primitive = get_obj( ).`{`$arg_tfield`}( ).`{`$arg_prfield`}( );
      }
      else
         test_primitive = get_obj( ).`{`$arg_tcfield`}( ).`{`$arg_prfield`}( );

      int source_primitive = -1;
      if( get_obj( ).`{`$arg_scfield`}( ).get_key( ).empty( ) )
      {
         if( !get_obj( ).`{`$arg_sfield`}( ).get_key( ).empty( ) )
            source_primitive = get_obj( ).`{`$arg_sfield`}( ).`{`$arg_prfield`}( );
      }
      else
         source_primitive = get_obj( ).`{`$arg_scfield`}( ).`{`$arg_prfield`}( );

      get_obj( ).`{`$arg_mfield`}( ).`{`$arg_procedure`}(
       get_obj( ).`{`$arg_cfield`}( ).get_key( ), error,
       get_obj( ).`{`$arg_field`}( ).`{`$arg_pfield`}( ).get_key( ), fld_primitive,
       get_obj( ).`{`$arg_pafield`}( ).`{`$arg_pacfield`}( ), get_obj( ).`{`$arg_pafield`}( ).`{`$arg_patfield`}( ),
       get_obj( ).`{`$arg_spfield`}( ).`{`$arg_pfield`}( ).get_key( ), source_primitive, test_primitive, get_obj( ).`{`$arg_tvfield`}( ) );

      if( !error.empty( ) )
      {
         p_validation_errors->insert( validation_error_value_type( "",
          get_string_message( GS( c_str_error ), make_pair( c_str_parm_error_error, error ) ) ) );
      }

      if( get_obj( ).`{`$arg_mfield`}( ).`{`$arg_mttfield`}( ) && get_obj( ).`{`$arg_field`}( ).`{`$arg_prfield`}( ) != test_primitive )
         p_validation_errors->insert( validation_error_value_type( "",
          get_string_message( GS( c_str_field_types_must_match ), make_pair(
          c_str_parm_field_types_must_match_field1, get_module_string( c_field_display_name_`{`$arg_field`} ) ),
          make_pair( c_str_parm_field_types_must_match_field2, get_module_string( c_field_display_name_`{`$arg_tfield`} ) ) ) ) );

      if( get_obj( ).`{`$arg_mfield`}( ).`{`$arg_mtsfield`}( ) && get_obj( ).`{`$arg_field`}( ).`{`$arg_prfield`}( ) != source_primitive )
         p_validation_errors->insert( validation_error_value_type( "",
          get_string_message( GS( c_str_field_types_must_match ), make_pair(
          c_str_parm_field_types_must_match_field1, get_module_string( c_field_display_name_`{`$arg_field`} ) ),
          make_pair( c_str_parm_field_types_must_match_field2, get_module_string( c_field_display_name_`{`$arg_sfield`} ) ) ) ) );

      if( get_obj( ).`{`$arg_mfield`}( ).`{`$arg_sftfield`}( )
       && get_obj( ).`{`$arg_tfield`}( ).get_key( ).empty( ) && !get_obj( ).`{`$arg_sfield`}( ).get_key( ).empty( ) )
         p_validation_errors->insert( validation_error_value_type( "",
          get_string_message( GS( c_str_field_must_be_empty_match ), make_pair(
          c_str_parm_field_must_be_empty_match_field2, get_module_string( c_field_display_name_`{`$arg_sfield`} ) ),
          make_pair( c_str_parm_field_must_be_empty_match_field1, get_module_string( c_field_display_name_`{`$arg_tfield`} ) ) ) ) );

      if( get_obj( ).`{`$arg_mfield`}( ).`{`$arg_crmfield`}( )
       && get_obj( ).`{`$arg_cfield`}( ).get_key( ) != get_obj( ).`{`$arg_mcrfield`}( ).`{`$arg_mcrcfield`}( ).get_key( ) )
         p_validation_errors->insert( validation_error_value_type( c_field_name_`{`$arg_mcrfield`},
          get_module_string( c_field_display_name_`{`$arg_mcrfield`} ) + " must be a self-relationship." ) ); // FUTURE: Should be in module_strings...

      if( get_obj( ).`{`$arg_mfield`}( ).`{`$arg_crpmfield`}( )
       && get_obj( ).`{`$arg_mpfield`}( ).`{`$arg_cfield`}( ).get_key( ) != get_obj( ).`{`$arg_mcrfield`}( ).`{`$arg_mcrcfield`}( ).get_key( ) )
         p_validation_errors->insert( validation_error_value_type( c_field_name_`{`$arg_mcrfield`},
          get_module_string( c_field_display_name_`{`$arg_mcrfield`} ) + " must match the parent specification." ) ); // FUTURE: Should be in module_strings...

      if( get_obj( ).`{`$arg_mfield`}( ).`{`$arg_crgpmfield`}( )
       && get_obj( ).`{`$arg_mpfield`}( ).`{`$arg_mpfield`}( ).`{`$arg_cfield`}( ).get_key( ) != get_obj( ).`{`$arg_mcrfield`}( ).`{`$arg_mcrcfield`}( ).get_key( ) )
         p_validation_errors->insert( validation_error_value_type( c_field_name_`{`$arg_mcrfield`},
          get_module_string( c_field_display_name_`{`$arg_mcrfield`} ) + " must match the grandparent specification." ) ); // FUTURE: Should be in module_strings...

`{`@eq`(`$arg_pwvalue2`,`'`'`)
      if( get_obj( ).`{`$arg_mfield`}( ).get_key( ) == "`{`$arg_uikey`}" && get_obj( ).`{`$arg_tfield`}( ).`{`$arg_efield`}( ) != `{`$arg_pwvalue`} ) // i.e. `{`$arg_pwname`}
         p_validation_errors->insert( validation_error_value_type( "", "Test Field is not a '`{`$arg_pwname`}' field." ) ); // FUTURE: Should be in module_strings...
`,\
      if( get_obj( ).`{`$arg_mfield`}( ).get_key( ) == "`{`$arg_uikey`}"
       && ( get_obj( ).`{`$arg_tfield`}( ).`{`$arg_efield`}( ) != `{`$arg_pwvalue`} // i.e. `{`$arg_pwname`}
       && get_obj( ).`{`$arg_tfield`}( ).`{`$arg_efield`}( ) != `{`$arg_pwvalue2`} ) ) // i.e. `{`$arg_pwname2`}
         p_validation_errors->insert( validation_error_value_type( "", "Test Field is not a valid 'password' field." ) ); // FUTURE: Should be in module_strings...
`}\
   }
   // [(finish meta_spec_field_type)] `{`$arg_id`}
`}
`{`@eq`(`'to_store`'`,`$section`)\
   // [(start meta_spec_field_type)] `{`$arg_id`}
   if( is_create && get_obj( ).`{`$arg_mfield`}( ).get_key( ) == "`{`$arg_uikey`}"
    && !get_obj( ).`{`$arg_cfield`}( ).get_key( ).empty( ) && is_null( get_obj( ).`{`$arg_spfield`}( ) ) )
   {
      if( !get_obj( ).`{`$arg_cfield`}( ).child_`{`$arg_field`}( ).get_is_iterating( )
       && get_obj( ).`{`$arg_cfield`}( ).child_`{`$arg_field`}( ).iterate_forwards( ) )
      {
         do
         {
            if( get_obj( ).`{`$arg_cfield`}( ).child_`{`$arg_field`}( ).`{`$arg_efield`}( ) == `{`$arg_ugvalue`} ) // i.e. `{`$arg_ugname`}
            {
               get_obj( ).`{`$arg_spfield`}( get_obj( ).`{`$arg_cfield`}( ).child_`{`$arg_field`}( ) );
               get_obj( ).`{`$arg_cfield`}( ).child_`{`$arg_field`}( ).iterate_stop( );
               break;
            }
         } while( get_obj( ).`{`$arg_cfield`}( ).child_`{`$arg_field`}( ).iterate_next( ) );
      }
   }
   // [(finish meta_spec_field_type)] `{`$arg_id`}
`}
