`{`@eq`(`'procedure`'`,`$section`)\
   // [(start for_clone_peer)] `{`$arg_id`}
   get_obj( ).op_update( );

   if( !storage_locked_for_admin( ) )
   {
`{`!`@eq`(`$arg_tfield`,`'`'`)
      auto_ptr< temporary_session_variable > ap_temp_skip_submit_file;

      if( !is_null( get_obj( ).`{`$arg_tfield`}( ) ) )
      {
         lock_peer_channel( get_obj( ), get_obj( ).`{`$arg_tfield`}( ) );

         ap_temp_skip_submit_file.reset( new temporary_session_variable(
          get_special_var_name( e_special_var_skip_submit_file ), c_true_value ) );
      }
`}
      string new_key( gen_key( ) );
      string key_info( new_key + string( " " ) + get_obj( ).get_key( ) );

      temporary_session_variable tmp_peer_clone_key(
       get_special_var_name( e_special_var_peer_clone_key ), new_key );

      class_pointer< `{`$module_name`}_`{`$class_name`} > cp_source( e_create_instance );

      cp_source->op_create( key_info );

      cp_source->`{`$arg_field`}( `{`$arg_value`} );

      cp_source->`{`$arg_spfield`}( `{`$arg_procedure_arg`} );
      cp_source->set_is_for_peer( cp_source->`{`$arg_spfield`}( ).`{`$arg_scfield`}( ) );

      cp_source->set_variable( get_special_var_name(
       e_special_var_skip_total_child_field_in_parent ), c_true_value );

      cp_source->op_apply( );
   }

   get_obj( ).`{`$arg_ofield`}( get_obj( ).`{`$arg_o2field`}( ) );

   get_obj( ).op_apply( );
   // [(finish for_peer_clone)] `{`$arg_id`}
`}
