; Copyright (c) 2008-2012 CIYAM Pty. Ltd. ACN 093 704 539
; Copyright (c) 2012-2015 CIYAM Developers
;
; Distributed under the MIT/X11 software license, please refer to the file license.txt
; in the root project directory or http://www.opensource.org/licenses/mit-license.php.
;
@ifdef %CIYAM_TEST_STORAGE%
~rm ciyam.sql
@endif
storage_init -admin %CIYAM_STORAGE%
module_load Meta
storage_term
storage_init %CIYAM_STORAGE%
pc sys 20120102 Meta 102100 string "102101=string,102102=0,102109=1,102111=T000"
pc sys 20120102 Meta 102100 datetime "102101=datetime,102102=1,102109=1,102111=T001"
pc sys 20120102 Meta 102100 date "102101=date,102102=2,102109=1,102111=T002"
pc sys 20120102 Meta 102100 time "102101=time,102102=3,102109=1,102111=T003"
pc sys 20120102 Meta 102100 numeric "102101=numeric,102102=4,102109=1,102111=T004"
pc sys 20120102 Meta 102100 int "102101=int,102102=5,102109=1,102111=T005"
pc sys 20120102 Meta 102100 bool "102101=bool,102102=6,102109=1,102111=T006"
pc sys 20120102 Meta 102100 foreign_key "102101=foreign_key,102102=0,102109=1,102111=T007"
pc sys 20120102 Meta 103100 primitive "103101=primitive,103102=5,103103=1,103104=E000"
pc sys 20120102 Meta 104100 primitive0000000001 "104102=0,104101=string,300400=primitive"
pc sys 20120102 Meta 104100 primitive0000000002 "104102=1,104101=datetime,300400=primitive"
pc sys 20120102 Meta 104100 primitive0000000003 "104102=2,104101=date,300400=primitive"
pc sys 20120102 Meta 104100 primitive0000000004 "104102=3,104101=time,300400=primitive"
pc sys 20120102 Meta 104100 primitive0000000005 "104102=4,104101=numeric,300400=primitive"
pc sys 20120102 Meta 104100 primitive0000000006 "104102=5,104101=int,300400=primitive"
pc sys 20120102 Meta 104100 primitive0000000007 "104102=6,104101=bool,300400=primitive"
pc sys 20120102 Meta 125100 101100X101102 "125101=V001###,125102=V001000"
pc sys 20120102 Meta 101100 guests "101101=Guests"
pc sys 20120102 Meta 100100 admin "100101=admin,100103=admin,100104=Administrator,100107=d82494f05d6917ba02f7aaa29689ccb444bb73f20380876cb05d1f37537b7892"
pc sys 20120102 Meta 100100 guest "100101=guest,100103=guest,100104=Guest User,300100=guests,100107=c42b78633724b8bb7da3bda18b87f3ff4802ca85af7c6418001d509cf220bc61"
pc sys 20120102 Meta 117100 print "117101=print,117102={class}(print)"
pc sys 20120102 Meta 117100 normal "117101=normal,117102={class}"
pc sys 20120102 Meta 117100 user_info "117101=user_info,117102={class}(user)"
pc sys 20120102 Meta 119100 key "119101=key,119102=field_key"
pc sys 20120102 Meta 119100 tab "119101=tab,119102=tab_{tab}"
pc sys 20120102 Meta 119100 field "119101=field,119102=field_{sfield}[fk_]{sparent}{schild}[&_]{sechild}"
pc sys 20120102 Meta 121100 home "121101=home,121102={class}(home),121104=1"
pc sys 20120102 Meta 121100 admin "121101=admin,121102={class}(admin),121105=1,121107=1"
pc sys 20120102 Meta 121100 group "121101=group,121102={class}(group){vname},121105=1"
pc sys 20120102 Meta 121100 non_group "121101=non_group,121102={class}{vname}(non-group)"
pc sys 20120102 Meta 121100 normal "121101=normal,121102={class}{vname}"
pc sys 20120102 Meta 121100 additional "121101=additional,121102={class}(additional)"
pc sys 20120102 Meta 121100 user "121101=user,121102={class}(user){vname},121105=1"
pc sys 20120102 Meta 121100 non_user "121101=non_user,121102={class}(non-user){vname}"
pc sys 20120102 Meta 121100 view_child "121101=view_child,121102={class}for_{pfield}(child),121103=1"
pc sys 20120102 Meta 123100 field "123101=field,123102=field_{sfield}[fk_]{sparent}{schild}{sgchild},123107=1,123112=1,123114=1,123119=1"
pc sys 20120102 Meta 123100 row_number "123101=row_number,123102=field_row,123110=1,123112=1"
pc sys 20120102 Meta 123100 new_select "123101=new_select,123102=new_select_{sfield}{sparent}{schild},123103=1,123109=1,123106=1,123114=1"
pc sys 20120102 Meta 123100 link_select "123101=link_select,123102=link_select_{sfield}{sparent}{schild},123103=1,123109=1,123114=1,123119=1,123121=1,123122=1"
pc sys 20120102 Meta 123100 restrict_field "123101=restrict_field,123102=restrict_field_{rfield},123104=1,123109=1,123116=1,123117=1"
pc sys 20120102 Meta 123100 restrict_search "123101=restrict_search,123102=restrict_search_{sfield}{sparent}{schild},123109=1,123114=1,123118=1"
pc sys 20120102 Meta 123100 restrict_select "123101=restrict_select,123102=restrict_select_{sfield}{sparent}{schild},123103=1,123104=1,123109=1,123111=1,123114=1,123115=1"
pc sys 20120102 Meta 123100 restrict_select_child_rel "123101=restrict_select_child_rel,123102=restrict_select_child_{child}{crsfield}{crsparent}{crschild},123103=1,123104=1,123109=1,123113=1,123115=1"
pc sys 20120102 Meta 123100 restrict_switch "123101=restrict_switch,123102=restrict_switch_{sfield}{sparent}{schild},123103=1,123104=1,123105=1,123109=1,123114=1,123120=1"
pc sys 20120102 Meta 123100 user_action_event "123101=user_action_event,123102=user_action_event_{procedure},123108=1,123109=1"
pc sys 20120102 Meta 114100 check_children_not_active_cinfo "114101=check_children_not_active_cinfo,114102={class}info,114103=n/a,114104=1,114124=1,114105=1,114111=6,114146=1,114147=1,114148=1,114149=1,114151=1,114120=Field must be a boolean that if true indicates that the child record is \"active\" resulting in a validation error.,114158=cclass={class}\ncfield={field}"
pc sys 20120102 Meta 114100 check_fk_child_not_found_sinfo_cinfo "114101=check_fk_child_not_found_sinfo_cinfo,114102={class}info,114103=n/a,114104=1,114128=1,114113=1,114125=1,114146=1,114147=1,114148=1,114149=1,114151=1,114120=Source Field must be a FK and will be checked against the Source Field in the original class with Source Parent being an optional extra FK constraint.,114158=fk_sfield={sfield}\nfk_spfield={spfield}"
pc sys 20120102 Meta 114100 check_fk_child_not_found_sinfo "114101=check_fk_child_not_found_sinfo,114102={class}info,114103=n/a,114104=1,114191=1,114138=1,114152=1,114140=115432$115100.301405,301710=check_fk_child_not_found_sinfo_cinfo,114146=1,114147=1,114149=1,114151=1,114120=After saving click \"Add Child Info\" to continue.,114158=fk_child={child}\nfk_cclass={cclass}"
pc sys 20120102 Meta 114100 field "114101=field,114102={field},114103=n/a,114104=1,114124=1,114105=1,114139=1,114146=1,114151=1"
pc sys 20120102 Meta 114100 field_list "114101=field_list,114102=field_list,114103=n/a,114140=115430$115100.301405,301710=field,114147=1,114151=1"
pc sys 20120102 Meta 114100 field_restrict "114101=field_restrict,114102={field}is_{value_label},114103=n/a,114104=1,114124=1,114105=1,114135=1,114110=1,114139=1,114146=1,114151=1"
pc sys 20120102 Meta 114100 field_first_child_opt_order "114101=field_first_child_opt_order,114102=first_child[_]{field}[by_]{sfield},114103=n/a,114104=1,114146=1,114124=1,114128=1,114147=1,114148=1,114149=1,114151=1,114120=If Field is provided then it's value will be used rather than the key. Source Field is an optional single field ordering.,114158=child_field={field}\norder_field={sfield}"
pc sys 20120102 Meta 114100 field_first_source_info "114101=field_first_source_info,114102=field_from_first_{child},114103=n/a,114104=1,114152=1,114191=1,114138=1,114146=1,114145=1,114147=1,114149=1,114151=1,114140=115432$115100.301405,301710=field_first_child_opt_order,114158=child={child}\nchild_class={cclass}"
pc sys 20120102 Meta 114100 field_pair "114101=field_pair,114102={class}{field}and_{spfield}{scfield},114103=n/a,114104=1,114146=1,114124=1,114105=1,114121=1,114122=1,114139=1,114125=1,114137=1,114144=1,114151=1"
pc sys 20120102 Meta 114100 field_pair_list "114101=field_pair_list,114102=field_pair_list,114103=n/a,114124=1,114140=115431$115100.301405,301710=field_pair,114147=1,114151=1,114120=Field is an optional test field for the parent specification.,114158=ptfield={field}"
pc sys 20120102 Meta 114100 field_pair_g "114101=field_pair_g,114102={class}{field}and_{spfield}{scfield}{sgcfield},114103=n/a,114104=1,114146=1,114124=1,114105=1,114121=1,114122=1,114139=1,114125=1,114137=1,114178=1,114144=1,114151=1"
pc sys 20120102 Meta 114100 field_pair_g_list "114101=field_pair_g_list,114102=field_pair_g_list,114103=n/a,114140=115431$115100.301405,301710=field_pair_g,114147=1,114151=1"
pc sys 20120102 Meta 114100 field_pair2 "114101=field_pair2,114102={class}{field}and_{sclass}{sfield},114103=n/a,114104=1,114146=1,114124=1,114105=1,114128=1,114113=1,114139=1,114172=1,114173=1,114151=1"
pc sys 20120102 Meta 114100 field_pair2_list "114101=field_pair2_list,114102=field_pair2_list,114103=n/a,114140=115431$115100.301405,301710=field_pair2,114147=1,114151=1"
pc sys 20120102 Meta 114100 field_child_source_pair "114101=field_child_source_pair,114102={field}with_{scfield},114103=n/a,114168=1,114148=1,114104=1,114146=1,114137=1,114124=1,114105=1,114125=1,114121=1,114122=1,114149=1,114147=1,114151=1"
pc sys 20120102 Meta 114100 field_from_child_auto_int_inc_sinfo "114101=field_from_child_auto_int_inc_sinfo,114102=field_from_last_{child},114103=n/a,114104=1,114152=1,114191=1,114138=1,114146=1,114145=1,114147=1,114149=1,114151=1,114158=child={child}"
pc sys 20120102 Meta 114100 field_from_child_concat_cinfo "114101=field_from_child_concat_cinfo,114102=field_{spclass}{class}children_info[_where_]{tfield}[is_]{tvalue},114103=field_from_child_concat,114104=1,114146=1,114148=1,114124=1,114174=1,114128=1,114113=1,114125=1,114121=1,114126=1,114115=1,114147=1,114149=1,114151=0,114120=Field is an optional child field for the parent to use. Other Field is an optional \"order\" field. Source Field is the FK relationship to the parent. Source Parent and Source Child are an optional FK class and field to use. Test_Field [== Test Value] is an optional precondition for child record inclusion.,114158=cclass={class}\ncfield={field}\nctransient={ftransient}\nofield={ofield}\npfield={sfield}\nxpfield={spfield}\nxdfield={scfield}\ntfield={tfield}\ntvalue={tvalue}\ntfistexttype={tfistexttype}\nfor_store=\nsections=to_store for_store after_store after_destroy"
pc sys 20120102 Meta 114100 field_ocpair "114101=field_ocpair,114102={class}{field}and_{oclass}{ocfield},114103=n/a,114104=1,114146=1,114124=1,114105=1,114192=1,114193=1,114214=1,114212=1,114213=1,114139=1,114211=1,114151=1"
pc sys 20120102 Meta 114100 field_ocpair_list "114101=field_ocpair_list,114102=field_ocpair_list,114103=n/a,114192=1,114214=1,114140=115431$115100.301405,301710=field_ocpair,114147=1,114151=1"
pc sys 20120102 Meta 114100 field_source "114101=field_source,114102={sfield}{spfield}{scfield},114103=n/a,114104=1,114128=1,114121=1,114125=1,114123=1,114154=1,114139=1,114146=1,114151=1"
pc sys 20120102 Meta 114100 field_source_and_value "114101=field_source_and_value,114102={sfield}{spfield}{scfield}and_{value_label},114103=n/a,114104=1,114128=1,114121=1,114125=1,114123=1,114154=1,114135=1,114110=1,114139=1,114146=1,114151=1"
pc sys 20120102 Meta 114100 for_move_children_cinfo "114101=for_move_children_cinfo,114102={class}info,114103=n/a,114104=1,114148=1,114125=1,114112=1,114146=1,114147=1,114149=1,114151=1,114120=Source Parent is fk to the original class.,114158=cpfield={spfield}"
pc sys 20120102 Meta 114100 for_ordered_move_rvalues "114101=for_ordered_move_rvalues,114102=for_ordered_move_rvalues,114103=n/a,114104=1,114171=1,114106=1,114132=1,114146=1,114160=1,114139=1,114159=1,114133=0,114134=0,114149=1,114161=1,114147=1,114151=1,114158=values={procedure_arg}"
pc sys 20120102 Meta 114100 for_ordered_move_rfields "114101=for_ordered_move_rfields,114102=for_ordered_move_rfields,114103=n/a,114104=1,114171=1,114106=1,114132=1,114146=1,114160=1,114139=1,114159=1,114133=0,114134=0,114149=1,114161=1,114150=115440$115100.301405,301720=for_ordered_move_rvalues,114147=1,114151=1,114158=fields={procedure_arg}"
pc sys 20120102 Meta 114100 for_ordered_move_down "114101=for_ordered_move_down,114102=for_ordered_move_down,114103=n/a,114104=1,114171=1,114106=1,114139=1,114140=115439$115100.301405,301710=for_ordered_move_rfields,114146=1,114149=1,114150=,301720=,114161=1,114147=1,114151=1,114158=dn_proc={procedure},114164=dn"
pc sys 20120102 Meta 114100 for_ordered_move_up "114101=for_ordered_move_up,114102=for_ordered_move_up,114103=n/a,114104=1,114171=1,114106=1,114139=1,114140=115439$115100.301405,301710=for_ordered_move_rfields,114146=1,114149=1,114150=115440$115100.301405,301720=for_ordered_move_down,114161=1,114147=1,114151=1,114158=up_proc={procedure},114164=up"
pc sys 20120102 Meta 114100 for_send_email_notification_sinfo "114101=for_send_email_notification_sinfo,114102={class}info,114103=n/a,114104=1,114124=1,114105=1,114135=1,114110=1,114174=1,114175=1,114183=1,114126=1,114152=1,114146=1,114147=1,114149=1,114151=1,114120=Field is for \"email address\"\\, Other Field is for \"email failure\" and Other Field 2 is an optional \"user id\". Value is the email message body (use \"@subject\"\\, \"@no_reply\" and \"@content\" as replacements) and Test Field is an optional precondition to \"send notifications\".,114158=message={value}\nemail_address={field}\nemail_failure={ofield}\nuser_id={o2field}\nemail_wanted={tfield},114166=message={value}"
pc sys 20120102 Meta 114100 for_tag_cinfo "114101=for_tag_cinfo,114102=for_{class}tag_cinfo,114103=n/a,114104=1,114124=1,114174=1,114148=1,114128=1,114113=1,114125=1,114112=1,114146=1,114149=1,114151=1,114120=Field is optional for \"user\" and Other Field is optional for \"group\". Source Field is for \"tag\" and Source Parent is for the \"item\".,114158=tags_user={field}\ntags_group={ofield}\ntags_tag={sfield}\ntags_item={spfield}"
pc sys 20120102 Meta 114100 gen_pdf_child_list_cinfo "114101=gen_pdf_child_list_cinfo,114102={class}info,114103=n/a,114104=1,114148=1,114124=1,114105=1,114128=1,114126=1,114115=1,114146=1,114149=1,114151=1,114117=1,114120=Field is for \"order\" while Test Field and Test Value are for an optional hard-coded restriction. Source Field is an optional summary field.\n\nUse option \"-order_with_test\" to include the restriction in the ordering.,114158=ofield={field}\nsfield={sfield}\nrfield={tfield}\nrvalue={tvalue}\nrorder={?-order_with_test}"
pc sys 20120102 Meta 114100 home_message_stats_info "114101=home_message_stats_info,114102=stats_{field}is_{value_label}[and_]{tfield}[is_]{tvalue},114103=n/a,114104=1,114124=1,114105=1,114148=1,114146=1,114135=1,114110=1,114126=1,114115=1,114149=1,114147=1,114151=1,114120=For each record where Field is equal to Value the total is incremented. Test Field [== Test Value] is an optional extra precondition.,114158=cclass={class}\nclass1={fclass}\nfield1={field}\nvalue1={value_leftpart}\nclass2={tfclass}\nfield2={tfield}\nvalue2={tvalue},114166=title={value_rightpart}"
pc sys 20120102 Meta 114100 home_message_stats_2 "114101=home_message_stats_2,114102=stats_{child},114103=n/a,114104=1,114139=1,114191=1,114136=1,114138=1,114146=1,114145=1,114140=115436$115100.301405,301710=home_message_stats_info,114147=1,114149=1,114153=1,114151=1,114120=All Child Relationship records will be iterated in order to determine the statisical value. Permission is an optional required permission to be able to see this value.,114164=stats2,114158=stats2_cfield={child}\nstats2_perm={permission_id}"
pc sys 20120102 Meta 114100 home_message_stats_1 "114101=home_message_stats_1,114102=stats_{child},114103=n/a,114104=1,114139=1,114191=1,114138=1,114146=1,114145=1,114140=115436$115100.301405,301710=home_message_stats_info,114150=115435$115100.301405,301720=home_message_stats_2,114147=1,114149=1,114153=1,114151=1,114120=All Child Relationship records will be iterated in order to determine the statisical value.,114164=stats1,114158=stats1_cfield={child}"
pc sys 20120102 Meta 114100 home_message_secondary "114101=home_message_secondary,114102=secondary,114103=n/a,114104=1,114136=1,114152=1,114146=1,114140=115434$115100.301405,301710=home_message_stats_1,114147=1,114149=1,114153=1,114151=1,114120=Secondary statistics are obtained from Source Parent of the main specification. Permission is an optional permission to be able to retreive the secondary stats.,114164=secondary,114158=secondary_perm={permission_id}"
pc sys 20120102 Meta 114100 transient_field_action_for_fk_child_match_cinfo "114101=transient_field_action_for_fk_child_match_cinfo,114102={class}info,114103=n/a,114104=1,114148=1,114125=1,114112=1,114146=1,114147=1,114149=1,114151=1,114120=Source Parent is the FK to be compared against the Source Parent of the parent class.,114158=spcfield={spfield}"
pc sys 20120102 Meta 114100 transient_field_bool_has_child_for_uid_cinfo "114101=transient_field_bool_has_child_for_uid_cinfo,114102={class}info,114103=n/a,114104=1,114148=1,114128=1,114125=1,114112=1,114126=1,114146=1,114147=1,114149=1,114151=1,114120=Source Field is FK for \"user\" and Source Parent is the FK link back to the parent class. Test Field is an optional precondition which must be true for the child record to \"count\".,114158=cufield={sfield}\ncpfield={spfield}\nctfield={tfield}"
pc sys 20120102 Meta 114100 transient_field_from_child_concat_child "114101=transient_field_from_child_concat_child,114102=iterate_child_for_{field}info[_by_]{sfield},114103=n/a,114104=1,114124=1,114174=1,114135=1,114125=1,114121=1,114148=1,114146=1,114128=1,114126=1,114115=1,114149=1,114147=1,114151=1,114120=If Field is provided then it's value will be used (otherwise the record's key) and if Source Field is provided it will be used for ordering. Other Field is an optional restriction field with the restriction being equal to Value. Source Parent and Source Child are an optional alternative to using Field. Test Field [== Test Value] is an optional precondition for child record inclusion.,114158=cfield={field}{scfield}\nofield={sfield}\npfield={spfield}\nrfield={ofield}\nrvalue={value}\nctfield={tfield}\nctvalue={tvalue}"
pc sys 20120102 Meta 114100 transient_search_rep_from_child_vars_child "114101=transient_search_rep_from_child_vars_child,114102=search_rep_vars_from_{field}and_{sfield},114103=n/a,114104=1,114148=1,114146=1,114124=1,114105=1,114128=1,114113=1,114147=1,114149=1,114151=1,114120=Field is the search \"name\" and Source Field is the replacement \"value\".,114158=varname={field}\nvarvalue={sfield}"
pc sys 20120102 Meta 114100 trigger_child_cascade_search_replace_cinfo "114101=trigger_child_cascade_search_replace_cinfo,114102={field}with_{scfield},114103=n/a,114168=1,114148=1,114104=1,114146=1,114137=1,114124=1,114105=1,114125=1,114121=1,114122=1,114149=1,114147=1,114151=1,114158=field={scfield}\ncfield={field}"
pc sys 20120102 Meta 114100 trigger_child_cascade_status_source_info "114101=trigger_child_cascade_status_source_info,114102={class}{spfield}source_info,114103=n/a,114104=1,114124=1,114111=50,114135=1,114146=1,114110=1,114147=1,114148=1,114149=1,114151=1,114120=The Field must be a matching FK for the parent Source Parent field and the Value is status key for the matching child record.,114158=special_value={value}\nspecial_cfield={field}\n"
pc sys 20120102 Meta 114100 trigger_child_cascade_status_info "114101=trigger_child_cascade_status_info,114102={field}info,114103=n/a,114104=1,114124=1,114105=1,114135=1,114128=1,114110=1,114146=1,114147=1,114148=1,114149=1,114150=115437$115100.301405,301720=trigger_child_cascade_status_source_info,114151=1,114120=Field is the \"status\" and Value is the value to be cascaded. Source Field as an optional \"order\" field.,114158=child_field={field}\norder_field={sfield}\nstatus_value={value}"
pc sys 20120102 Meta 114100 trigger_clone_children_cinfo "114101=trigger_clone_children_cinfo,114102={class}info,114103=n/a,114104=1,114148=1,114128=1,114125=1,114112=1,114126=1,114115=1,114146=1,114147=1,114149=1,114151=1,114120=Source Field is an optional self-relationship for linking to the clone record and Source Parent is the fk to the original class. Test Field [== Test Value] is an optional precondition.,114158=pfield={spfield}\ncpfield={sfield}\ntfield={tfield}\ntfistexttype={tfistexttype}\ntvalue={tvalue}"
pc sys 20120102 Meta 114100 trigger_clone_children_from_fk_cinfo "114101=trigger_clone_children_from_fk_cinfo,114102={class}info,114103=n/a,114104=1,114148=1,114125=1,114112=1,114146=1,114147=1,114149=1,114151=1,114120=Source Parent is the FK back to the parent class.,114158=pfield={spfield}"
pc sys 20120102 Meta 114100 trigger_clone_children_from_fk_sinfo "114101=trigger_clone_children_from_fk_sinfo,114102={class}info,114103=n/a,114104=1,114152=1,114191=1,114138=1,114146=1,114150=115432$115100.301405,301720=trigger_clone_children_from_fk_cinfo,114147=1,114149=1,114151=1,114120=Child Relationship is where records will be cloned from.,114158=fkchild={child}"
pc sys 20120102 Meta 114100 trigger_clone_default_children_info "114101=trigger_clone_default_children_info,114102={class}{spfield}info,114103=n/a,114148=1,114146=1,114147=1,114149=1,114125=1,114112=1,114126=1,114151=1,114120=Source Parent is the relationship back to the original class record. Test Field is an optional \"self parent\" for acyclic graphs.,114158=pfield={spfield}\nppfield={tfield}"
pc sys 20120102 Meta 114100 trigger_clone_for_fk_children_sinfo_cinfo "114101=trigger_clone_for_fk_children_sinfo_cinfo,114102={child}info,114103=n/a,114104=1,114148=1,114191=1,114138=1,114146=1,114147=1,114149=1,114151=1,114150=,114120=Child Relationship is where records will be cloned.,114158=schildren={child}"
pc sys 20120102 Meta 114100 trigger_clone_for_fk_children_sinfo "114101=trigger_clone_for_fk_children_sinfo,114102={child}info,114103=n/a,114104=1,114152=1,114191=1,114138=1,114146=1,114140=115432$115100.301405,301710=trigger_clone_for_fk_children_sinfo_cinfo,114147=1,114149=1,114151=1,114150=,114120=After saving click \"Add Child Info\" to continue.,114158=children={child}"
pc sys 20120102 Meta 114100 trigger_clone_fk_children_cinfo "114101=trigger_clone_fk_children_cinfo,114102={class}{spfield}info,114103=n/a,114148=1,114146=1,114147=1,114149=1,114125=1,114112=1,114151=1,114120=Source Parent is the FK back to the original class.,114158=gfield={spfield}"
pc sys 20120102 Meta 114100 trigger_copy_children_from_fk_cinfo "114101=trigger_copy_children_from_fk_cinfo,114102={class}info,114103=n/a,114104=1,114148=1,114125=1,114112=1,114146=1,114147=1,114149=1,114151=1,114120=Source Parent is fk to the original class.,114158=cpfield={spfield}"
pc sys 20120102 Meta 114100 trigger_copy_children_from_fk_sinfo "114101=trigger_copy_children_from_fk_sinfo,114102={class}info,114103=n/a,114104=1,114152=1,114191=1,114138=1,114146=1,114147=1,114149=1,114151=1,114210=1,114150=115432$115100.301405,301720=trigger_copy_children_from_fk_cinfo,114120=Child Relationship to parent's Source Parent for copying.,114158=fkcclass={cclass}\nfkcfield={child}\nfields={field_pairs}"
pc sys 20120102 Meta 114100 trigger_copy_children_from_fk_sinfo_field_list "114101=trigger_copy_children_from_fk_sinfo_field_list,114102=field_ocpair_list,114103=n/a,114192=1,114214=1,114148=1,114211=1,114140=115431$115100.301405,301700=trigger_copy_children_from_fk_sinfo,301710=field_ocpair,114147=1,114120=,114158="
pc sys 20120102 Meta 114100 trigger_copy_fk_children_below_other_fk_dinfo_cinfo "114101=trigger_copy_fk_children_below_other_fk_dinfo_cinfo,114102={class}info,114103=n/a,114104=1,114124=1,114105=1,114125=1,114112=1,114146=1,114147=1,114148=1,114149=1,114151=1,114120=Field is the FK back to the originating class and Source Parent is the FK to its source field child record branch.,114158=fk_back_to_self={field}\nfk_src_child_branch={spfield}"
pc sys 20120102 Meta 114100 trigger_copy_fk_children_below_other_fk_dinfo "114101=trigger_copy_fk_children_below_other_fk_dinfo,114102={class}info,114103=n/a,114104=1,114152=1,114191=1,114138=1,114145=1,114146=1,114147=1,114140=115432$115100.301405,301710=trigger_copy_fk_children_below_other_fk_dinfo_cinfo,114149=1,114151=1,114153=1,114120=Child Relationship is the destination for the child records being copied.\n\nAfter saving click \"Add Child Info\" to continue.,114158=dchild={child}\ndcclass={cclass}"
pc sys 20120102 Meta 114100 trigger_copy_fk_children_below_other_fk_sinfo_cinfo "114101=trigger_copy_fk_children_below_other_fk_sinfo_cinfo,114102={class}info,114103=n/a,114104=1,114148=1,114125=1,114126=1,114146=1,114147=1,114149=1,114151=1,114120=Source Parent is an optional FK that will be used as the second part of each destination child record key and Test Field is an optional precondition for specific record inclusion.,114158=src_fk_key_suffix={spfield}\nsrc_fk_key_class={spclass}\nsrc_tfield={tfield}"
pc sys 20120102 Meta 114100 trigger_copy_fk_children_below_other_fk_sinfo "114101=trigger_copy_fk_children_below_other_fk_sinfo,114102={class}info,114103=n/a,114104=1,114190=1,114191=1,114138=1,114145=1,114146=1,114147=1,114140=115432$115100.301405,301710=trigger_copy_fk_children_below_other_fk_sinfo_cinfo,114149=1,114150=115447$115100.301405,301720=trigger_copy_fk_children_below_other_fk_dinfo,114151=1,114120=Child Relationship is the source for the child records being copied.\n\nAfter saving click \"Add Child Info\" to continue.,114158=schild={child}\nscclass={cclass}"
pc sys 20120102 Meta 114100 trigger_copy_self_children_for_create_grandchild "114101=trigger_copy_self_children_for_create_grandchild,114102={child}grandchild,114103=n/a,114104=1,114146=1,114191=1,114138=1,114147=1,114148=1,114149=1,114151=1,114157=1"
pc sys 20120102 Meta 114100 trigger_copy_self_children_for_create_children "114101=trigger_copy_self_children_for_create_children,114102={child}children,114103=n/a,114104=1,114146=1,114191=1,114138=1,114147=1,114140=115438$115100.301405,301710=trigger_copy_self_children_for_create_grandchild,114145=1,114149=1,114151=1,114152=1,114153=1,114155=1"
pc sys 20120102 Meta 114100 trigger_remove_matching_children_from_fk_sinfo "114101=trigger_remove_matching_children_from_fk_sinfo,114102={class}info,114103=n/a,114104=1,114152=1,114171=1,114191=1,114138=1,114146=1,114147=1,114149=1,114151=1,114210=1,114120=Child Relationship to parent's Source Parent for copying. Procedure is an optional procedure to be called after the child records have been removed.,114158=fkcclass={cclass}\nfkcfield={child}\nfkproc={procedure}\nfields={field_pairs}"
pc sys 20120102 Meta 114100 trigger_remove_matching_children_from_fk_sinfo_field_list "114101=trigger_remove_matching_children_from_fk_sinfo_field_list,114102=field_ocpair_list,114103=n/a,114192=1,114214=1,114148=1,114211=1,114140=115431$115100.301405,301700=trigger_remove_matching_children_from_fk_sinfo,301710=field_ocpair,114147=1,114120=,114158="
pc sys 20120102 Meta 114100 user_info_extra_select "114101=user_info_extra_select,114102=select,114103=n/a,114104=1,114152=1,114146=1,114124=1,114125=1,114174=1,114183=1,114126=1,114136=1,114117=1,114149=1,114147=1,114151=1,114120=Use Field to specify a user restriction selection field and optionally Source Parent to the \"user\" class if options are user constrained\\, Other_Field for \"user other\" key override\\, Other_Field_2 for \"access level\" override\\, Test Field for ordering and a required Permission.\n\nUse Option \"-strict\" to prevent unrestricted selection.,114158=pfield={field_id}\nkoverride={ofield_id}\nsoverride={o2field_id}\npcfield={spfield_id}\nofield={tfield_id}\nslperm={permission_id}\nsclsnm={class}\nostrict={?-strict}"
pc sys 20120102 Meta 114100 qlink_info_details "114101=qlink_info_details,114102=qlink_info_details,114103=n/a,114104=1,114124=1,114105=1,114113=1,114128=1,114126=1,114114=1,114136=1,114139=1,114146=1,114147=1,114149=1,114151=1,114120=Field is the \"name\" field and Source Field is the \"URL\" suffix. The Test Field is to hold values for FCGI checksum calcuation that is used to prevent URL tampering and the optional Permission will determine whether a user can add quick links.,114158=name={field_id}\nurl={sfield_id}\nchecksum={tfield_id}\nperm={permission_id}"
pc sys 20120102 Meta 114100 check_children_not_active "114101=check_children_not_active,114102=check_{class}has_no_active_child_{child}if_{tfield},114103=check_children_not_active,114104=1,114126=1,114114=1,114191=1,114138=1,114140=115432$115100.301405,301710=check_children_not_active_cinfo,114120=Test Field is a mandatory precondition.\n\nAfter saving click \"Add Child Info\" to continue.,114158=tfield={tfield}\nchild={child}\nsections=validate"
pc sys 20120102 Meta 114100 check_compare_op_field "114101=check_compare_op_field,114102=check_{class}{field}{tvalue}{spfield}{scfield}{sfield}[if_]{tfield}[when_]{modifier},114103=check_compare_op_field,114104=1,114124=1,114105=1,114197=1,114128=1,114125=1,114121=1,114123=1,114154=1,114126=1,114115=1,114116=1,114117=1,114120=Field will be checked against Source Field/Child according to Test_Value being one of \"eq\"\\, \"neq\"\\, \"lt\"\\, \"gt\"\\, \"lteq\"\\ or \"gteq\". Test Field and Modifier are both optional preconditions.\n\nUse Option \"-ignore_null\" to ignore test if either field is null and \"-not_parent_edit\" to ignore this check if the parent is being edited. Use option \"-create=also|only\" to apply also/only to records being created or \"-update_only\" to only apply to records being updated. Use option \"-primary_only\" to only apply to primary validation and use option \"-allow_internal\" to not perform this check for internal operations.,114158=class={class}\nfield={field}\nmodifier={modifier}\nsfield={sfield}{scfield}\nspfield={spfield}\nspclass={spclass}\ntfield={tfield}\nop={tvalue}\nnot_null={?-ignore_null}\nnot_pedit={?-not_parent_edit}\ncreate_only={?-create=only}\ncreate_also={?-create=also}\nupdate_only={?-update_only}\nprimary_only={?-primary_only}\nallow_internal={?-allow_internal}\nsections=validate"
pc sys 20120102 Meta 114100 check_compare_op_value "114101=check_compare_op_value,114102=check_{class}{spfield}{scfield}{sfield}{tvalue}{value_label}[if_]{tfield}[when_]{modifier},114103=check_compare_op_value,114104=1,114128=1,114125=1,114121=1,114123=1,114154=1,114135=1,114110=1,114197=1,114126=1,114115=1,114116=1,114117=1,114120=Source Field/Child will be checked against Value according to Test_Value being one of \"eq\"\\, \"neq\"\\, \"lt\"\\, \"gt\"\\, \"lteq\"\\ or \"gteq\". Test Field and Modifier are both optional preconditions.\n\nUse Option \"-create_only\" to apply only to records being created and \"-update_only\" to only apply to records being updated. Use option \"-primary_only\" to only apply to primary validation and option \"-allow_internal\" to not perform this check for internal operations.,114158=class={class}\nsfield={sfield}{scfield}\nspfield={spfield}\nspclass={spclass}\nvalue={value}\nenum_item=\nmodifier={modifier}\ntfield={tfield}\nop={tvalue}\nsfistexttype={sfistexttype}\nscfistexttype={scfistexttype}\ncreate_only={?-create_only}\nupdate_only={?-update_only}\nprimary_only={?-primary_only}\nallow_internal={?-allow_internal}\nsections=validate"
pc sys 20120102 Meta 114100 check_compare_op_value_enum "114101=check_compare_op_value_enum,114102=check_{class}{spfield}{scfield}{sfield}{tvalue}{enum_item}[if_]{tfield}[when_]{modifier},114103=check_compare_op_value,114104=1,114128=1,114125=1,114121=1,114123=1,114154=1,114198=1,114199=1,114109=1,114215=1,114197=1,114126=1,114115=1,114116=1,114117=1,114120=Source Field/Child will be checked against Value according to Test_Value being one of \"eq\"\\, \"neq\"\\, \"lt\"\\, \"gt\"\\, \"lteq\"\\ or \"gteq\". Test Field and Modifier are both optional preconditions.\n\nUse Option \"-create_only\" to apply only to records being created and \"-update_only\" to only apply to records being updated. Use option \"-primary_only\" to only apply to primary validation and option \"-allow_internal\" to not perform this check for internal operations.,114158=class={class}\nsfield={sfield}{scfield}\nspfield={spfield}\nspclass={spclass}\nvalue={enum_value}\nenum_item={enum_item}\nmodifier={modifier}\ntfield={tfield}\nop={tvalue}\nsfistexttype={sfistexttype}\nscfistexttype={scfistexttype}\ncreate_only={?-create_only}\nupdate_only={?-update_only}\nprimary_only={?-primary_only}\nallow_internal={?-allow_internal}\nsections=validate"
pc sys 20120102 Meta 114100 check_cond_non_null "114101=check_cond_non_null,114102=check_{class}{field}non_null_if_{sfield}{spfield}{scfield}[and_]{tpfield}{tcfield}{tfield}[is_]{tvalue},114103=check_cond_non_null,114104=1,114128=1,114124=1,114125=1,114121=1,114123=1,114154=1,114126=1,114115=1,114130=35,114131=38,114142=1,114120=Field must be conditionally non-null with Source Field/Child being the condition (and optionally Test Field/Child [== Test Value] for an additional precondition).,114158=class={class}\nfield={field}\npfield={spfield}\ncfield={scfield}{sfield}\ntpfield={tpfield}\ntfield={tcfield}{tfield}\ntvalue={tvalue}\nis_neg=\ntest_neq=\nsections=validate"
pc sys 20120102 Meta 114100 check_dep_field_changed "114101=check_dep_field_changed,114102=check_{class}{field}has_changed_if_{tfield}has_changed[_and_]{modifier},114103=check_dep_field_changed,114104=1,114124=1,114105=1,114126=1,114114=1,114127=1,114197=1,114120=If Test Field has changed then require that Field must have been changed unless the optional Modifier is not present.,114158=class={class}\nfield={field}\ntfield={tfield}\nmodifier={modifier}\nsections=validate"
pc sys 20120102 Meta 114100 check_field_is_between "114101=check_field_is_between,114102=check_{class}{field}is_between_{ofield}and_{o2field}[if_]{tfield},114103=check_field_is_between,114104=1,114124=1,114105=1,114174=1,114175=1,114183=1,114184=1,114126=1,114131=30,114120=Field must be between Other Field and Other Field 2 inclusive. Test Field is an optional extra pre-condition.,114158=field={field}\nlfield={ofield}\nrfield={o2field}\ntfield={tfield}\nsections=validate"
pc sys 20120102 Meta 114100 check_field_not_changed "114101=check_field_not_changed,114102=check_{class}has_not_changed_{field}[if_]{tfield}[when_]{modifier},114103=check_field_not_changed,114104=1,114124=1,114105=1,114197=1,114126=1,114117=1,114120=Field is checked to have not changed with Test Field and Modifier both being optional preconditions.\n\nUse Option \"-primary_only\" to only apply to primary validation.,114158=class={class}\nfield={field}\nmodifier={modifier}\ntfield={tfield}\nprimary_only={?-primary_only}\nsections=validate"
pc sys 20120102 Meta 114100 check_fk_child_field_match "114101=check_fk_child_field_match,114102=check_{class}{spfield}{scfield}matches_{field}[if_]{tfield},114103=check_parent_fk_match,114104=1,114124=1,114105=1,114125=1,114112=1,114121=1,114122=1,114118=1,114126=1,114117=1,114120=Checks that the value of Source Child matches that of Field. Test Field is an optional precondition.\n\nUse option \"-check_if_unchanged\" to prevent skipping this check if the Source Parent has not been changed.,114158=class={class}\nfield={field}\npclass={spclass}\npfield={spfield}\ncfield={scfield}\ntfield={tfield}\ncheck_if_unchanged={?-check_if_unchanged}\nsections=validate"
pc sys 20120102 Meta 114100 check_fk_child_not_found "114101=check_fk_child_not_found,114102=check_{class}{sfield}child_not_found,114103=check_fk_child_not_found,114104=1,114135=1,114128=1,114113=1,114125=1,114121=1,114126=1,114117=1,114140=115437$115100.301405,301710=check_fk_child_not_found_sinfo,114120=Value is an optional custom error message (use \"@source_field\" and \"@source_child\" as replacements). Source Field must be a FK that will be checked against the FK child's Source Field. Source Parent is an optional second FK constraint and Test Field is an optional precondition.\n\nUse option \"-check_reverse_also\" if using Source Parent to also perform the child check with the FK constaints reversed.\n\nAfter saving click \"Add Source Info\" to continue.,114158=message={value}\nsfield={sfield}\nspfield={spfield}\nscfield={scfield}\ntfield={tfield}\ncheck_reverse_also={?-check_reverse_also}\nsections=includes validate,114163=1,114166=message={value}"
pc sys 20120102 Meta 114100 check_for_repeated_values "114101=check_for_repeated_values,114102=check_{class}for_repeated_values,114103=check_no_repeats,114104=1,114117=1,114120=Use option \"-skip_nulls\" to ignore repeated null values.,114158=field_list={fields}\nskip_nulls={?-skip_nulls}\nsections=validate"
pc sys 20120102 Meta 114100 check_for_repeated_values_field_list "114101=check_for_repeated_values_field_list,114102=field_list,114103=n/a,114139=1,114140=115430$115100.301405,301700=check_for_repeated_values,301710=field,114147=1"
pc sys 20120102 Meta 114100 check_list_duplicates "114101=check_list_duplicates,114102=check_{class}{field}for_duplicates[_if_]{tfield},114103=check_list_duplicates,114104=1,114124=1,114135=1,114105=1,114126=1,114120=Field is checked to contain duplicate list items with Value being an optional separator and Test Field being an optional precondition.,114158=class={class}\nfield={field}\nseparator={value}\ntfield={tfield}\nsections=validate"
pc sys 20120102 Meta 114100 check_list_size_limit "114101=check_list_size_limit,114102=check_{class}{field}contains_no_more_than_{sfield}{tvalue_label}items[_if_]{tfield},114103=check_list_size_limit,114104=1,114124=1,114135=1,114105=1,114128=1,114126=1,114115=1,114120=Field is checked to contain no more than a certain number of list items. If Source Field is provided then the number will be take from its value otherwise Test Value will be used. Value is an optional separator and Test Field is an optional precondition.,114158=class={class}\nfield={field}\nsfield={sfield}\nseparator={value}\ntfield={tfield}\ntvalue={tvalue}\nsections=validate"
pc sys 20120102 Meta 114100 check_matches_regex "114101=check_matches_regex,114102=check_{class}{field}matches_{value_label}regex,114103=check_matches_regex,114104=1,114124=1,114105=1,114135=1,114110=1,114115=1,114116=1,114117=1,114120=Check that the Field's value (as a string) matches the regular expression Test Value. Value is the label name for the \"type\" of item the regular expression is identifying.\n\nUse option \"-func=<func>\" to transform Field via a suitable function and option \"-session_var=<varname>\" to only check if the named session variable is not empty.,114158=field={field}\nfistexttype={fistexttype}\nexpression={tvalue}\nfunc={#-func}\nsession_var={#-session_var}\nsfield=\npfield=\nsections=validate,114163=1,114166=label={value}"
pc sys 20120102 Meta 114100 check_matches_regex_field "114101=check_matches_regex_field,114102=check_{class}{field}matches_{value_label}regex,114103=check_matches_regex,114104=1,114124=1,114105=1,114135=1,114110=1,114128=1,114125=1,114121=1,114123=1,114117=1,114120=Check that the Field's value (as a string) matches the regular expression in Source Field/Child. Value is the label name for the \"type\" of item the regular expression is identifying.\n\nUse option \"-func=<func>\" to transform Field via a suitable function and option \"-session_var=<varname>\" to only check if the named session variable is not empty.,114158=field={field}\nfistexttype={fistexttype}\nsfield={sfield}{scfield}\npfield={spfield}\nfunc={#-func}\nsession_var={#-session_var}\nexpression=\nsections=validate,114163=1,114166=label={value}"
pc sys 20120102 Meta 114100 check_modifier_non_null "114101=check_modifier_non_null,114102=check_{class}{field}non_null_if_{modifier}[and_]{tfield},114103=modifier_field_required,114104=1,114124=1,114105=1,114197=1,114107=1,114126=1,114131=30,114120=Field must be non-null if Modifier. Test Field is an optional extra pre-condition.,114158=field={field}\nmodifier={modifier}\ntfield={tfield}\nsections=validate"
pc sys 20120102 Meta 114100 check_not_changed_unless_was_default "114101=check_not_changed_unless_was_default,114102=check_{class}{field}has_not_changed_unless_was_default,114103=check_not_changed_unless_was_default,114104=1,114124=1,114105=1,114117=1,114120=Field can only be changed if it was the default value.\n\nUse option \"-allow_default\" to all the field to be set to the default value always.,114158=field={field}\nallow_default={?-allow_default}\nsections=validate"
pc sys 20120102 Meta 114100 check_null_match "114101=check_null_match,114102=check_{class}{field}and_{tfield}null_match,114103=check_null_match,114104=1,114124=1,114105=1,114111=20,114126=1,114114=1,114127=1,114120=Field and Test Field must both be matching text types.,114158=field1={field}\nfield2={tfield}\nsections=validate"
pc sys 20120102 Meta 114100 comment "114101=comment,114102={value_label}for_{class},114103=n/a,114104=1,114135=1,114110=1,114120=Value is used as a comment."
pc sys 20120102 Meta 114100 default_fk_from_user_fk_default "114101=default_fk_from_user_fk_default,114102=default_{class}{field}to_{spfield}{scfield}default,114103=default_group_fk_for_user,114104=1,114124=1,114105=1,114111=50,114125=1,114112=1,114121=1,114122=1,114120=Defaults foreign key to a hard-coded group default record (Source Child must be a FK to the group).,114158=class={class}\npfield={field}\nufield={spfield}\ngfield={scfield}\nsections=at_create"
pc sys 20120102 Meta 114100 default_fk_global "114101=default_fk_global,114102=default_{class}{field}to_{value_label},114103=fk_default,114104=1,114124=1,114105=1,114135=1,114110=1,114111=50,114120=Defaults foreign key to a hard-coded value (i.e. FK record must be part of initial data).,114158=class={class}\nfield={field}\nvalue={value}\nsections=at_create"
pc sys 20120102 Meta 114100 default_for_clone "114101=default_for_clone,114102=default_{class}{field}for_clone,114103=default_for_clone,114104=1,114124=1,114105=1,114158=class={class}\nfield={field}\nsections=at_create"
pc sys 20120102 Meta 114100 default_from_key "114101=default_from_key,114102=default_{class}{field}from_key,114103=default_from_key,114104=1,114124=1,114105=1,114117=1,114120=Use option \"-not_new\" to prevent usage in a new record and \"-check_null\" to check Field is null before defaulting.\n\nUse option \"-func=<func>\" to transform Field with the key value via a suitable function and \"-include_clones\" if defaulting is required for cloned records.\n\nUse option \"-for_store\" to only occur after validation and option \"-append=<value>\" to append a literal. Option \"-skip_fk_handling\" is provided to bypass normal FK handling (this should generally not be used).,114158=class={class}\nfield={field}\nfunc={#-func}\nnot_dflt={?-not_new}\nchk_null={?-check_null}\nfor_store={?-for_store}\nfmandatory={fmandatory}\nappend={#-append}\ninc_clones={?-include_clones}\nskip_fk_handling={?-skip_fk_handling}\nsections=value_will_be_provided to_store for_store"
pc sys 20120102 Meta 114100 default_from_other_field "114101=default_from_other_field,114102=default_{class}{field}from_{sfield}{spfield}{scfield}[if_]{tpfield}{tcfield}{tfield}[is_]{tvalue},114103=default_to_field,114104=1,114128=1,114124=1,114125=1,114121=1,114123=1,114154=1,114117=1,114126=1,114115=1,114142=1,114120=Use option \"-convert=<convert func>\" to convert Field and \"-append=<value>\" to append a literal and \"-not_new\" to prevent usage in a new record or \"-for_store\" to only occur after validation and \"-include_clones\" if defaulting is required for cloned records.,114158=class={class}\nfield={field}\nsfield={sfield}{scfield}\npfield={spfield}\ntfield={tfield}{tcfield}\ntpfield={tpfield}\ntvalue={tvalue}\nappend={#-append}\ncvt_func={#-convert}\nnot_dflt={?-not_new}\nfor_store={?-for_store}\nfmandatory={fmandatory}\nfistexttype={fistexttype}\ninc_clones={?-include_clones}\nsections=value_will_be_provided to_store for_store"
pc sys 20120102 Meta 114100 default_to_dtm "114101=default_to_dtm,114102=default_{class}{field}to_dtm,114103=default_to_dtm,114104=1,114124=1,114105=1,114126=1,114117=1,114120=Test Field is an optional precondition.\n\nUse option \"-for_store\" to only occur after validation and \"-include_clones\" if defaulting is required for cloned records.,114158=class={class}\nfield={field}\ntfield={tfield}\nfor_store={?-for_store}\ninc_clones={?-include_clones}\nfmandatory={fmandatory}\nsections=value_will_be_provided to_store for_store"
pc sys 20120102 Meta 114100 default_to_field_id "114101=default_to_field_id,114102=default_{class}{field}to_field_id_of_{ofield}[and_]{o2field},114103=default_to_field_id,114104=1,114124=1,114105=1,114174=1,114175=1,114183=1,114126=1,114120=Field is defaulted to the \"field id\" value of Other Field along with optionally the \"field id\" of Other Field 2 also (with a colon separator). Test Field is an optional precondition.,114158=class={class}\nfield={field}\nofield={ofield}\no2field={o2field}\ntfield={tfield}\nftransient={ftransient}\nsections=after_fetch to_store"
pc sys 20120102 Meta 114100 default_to_global "114101=default_to_global,114102=default_{class}{field}to_{value_label}[if_has_]{tfield}[equal_to_]{tvalue}[when_]{modifier},114103=default_to_global,114104=1,114124=1,114105=1,114135=1,114110=1,114197=1,114115=1,114128=1,114126=1,114142=1,114117=1,114120=Source Field\\, Modifier and Test Field/Child [== Test Value] are optional preconditions.\n\nUse option \"-for_store\" to only occur after validation\\, option \"-default_only\" to only apply to a default new record and option \"-include_existing\" to set even for existing records.\n\nNote that If the field is a FK then the value must be the key of a pre-populated DB record.,114158=class={class}\nfield={field}\nvalue={value_literal}\nmodifier={modifier}\ncfield={sfield}\ntpfield={tpfield}\ntfield={tfield}{tcfield}\ntvalue={tvalue}\nfor_store={?-for_store}\ndflt_only={?-default_only}\ninc_exist={?-include_existing}\nfmandatory={fmandatory}\nsections=value_will_be_provided to_store for_store"
pc sys 20120102 Meta 114100 default_to_grp "114101=default_to_grp,114102=default_{class}{field}to_grp,114103=default_to_grp,114104=1,114124=1,114105=1,114117=1,114120=Use option \"-for_store\" to only occur after validation\\, option \"-include_clones\" if defaulting is required for cloned records and option \"-append=<value>\" to append a literal.,114158=class={class}\nfield={field}\nfor_store={?-for_store}\ninc_clones={?-include_clones}\nappend={#-append}\nfmandatory={fmandatory}\nsections=value_will_be_provided to_store for_store"
pc sys 20120102 Meta 114100 default_to_string "114101=default_to_string,114102=default_{class}{field}to_{value_label},114103=default_to_string,114104=1,114124=1,114105=1,114135=1,114110=1,114120=Value is the default label.,114158=class={class}\nfield={field}\nlabel_str={id}_label\nftransient={ftransient}\nsections=after_fetch to_store,114163=1,114166=label={value}"
pc sys 20120102 Meta 114100 default_to_uid "114101=default_to_uid,114102=default_{class}{field}to_uid,114103=default_to_uid,114104=1,114124=1,114105=1,114117=1,114120=Use option \"-for_store\" to only occur after validation\\, option \"-include_clones\" if defaulting is required for cloned records and option \"-append=<value>\" to append a literal.,114158=class={class}\nfield={field}\nfor_store={?-for_store}\ninc_clones={?-include_clones}\nappend={#-append}\nfmandatory={fmandatory}\nsections=value_will_be_provided to_store for_store"
pc sys 20120102 Meta 114100 default_to_uuid "114101=default_to_uuid,114102=default_{class}{field}to_uuid,114103=default_to_uuid,114104=1,114124=1,114105=1,114120=For a new record Field will be defaulted to a UUID.,114158=class={class}\nfield={field}\nsections=to_store"
pc sys 20120102 Meta 114100 field_action "114101=field_action,114102=field_{class}{field}{procedure}[creates_]{newclass},114103=field_empty_action,114104=1,114124=1,114105=1,114135=1,114170=603100,114128=1,114125=1,114121=1,114123=1,114171=1,114106=1,114117=1,114120=Field will contain the action. Source Field/Child is an optional non-null precondition and Value is used as the action if the test is null.\n\nUse option \"-create_only\" to apply to new records only and \"-negate\" to logically negate the precondition and \"-is_testval\" to use Value as a test value for Source Field/Child.,114158=class={class}\nact_field={field}\npfield={spfield}\nfield={scfield}{sfield}\ntfield={tfield}\nis_neg={?-negate}\nnvalue={value}\ncreate_only={?-create_only}\nis_testval={?-is_testval}\nsections=to_store"
pc sys 20120102 Meta 114100 field_bool_acct_minting "114101=field_bool_acct_minting,114102=field_{class}{field}if_{spfield}is_currently_minting,114103=field_bool_acct_minting,114104=1,114124=1,114105=1,114125=1,114112=1,114117=1,114120=Field will be set according to whether or not the Source Parent value matches a currently minting account.\n\nUse option \"-for_store\" to to only occur after validation or option \"-post_init\" to occur in \"post_init\".,114158=class={class}\nfield={field}\nspfield={spfield}\nfor_store={?-for_store}\npost_init={?-post_init}\nsections=to_store for_store post_init"
pc sys 20120102 Meta 114100 field_bool_has_changed "114101=field_bool_has_changed,114102=field_{class}{field}[if_]{tfield}[when_]{modifier}[provided_]{sfield}has_changed[_to_]{value_label},114103=field_bool_has_changed,114104=1,114124=1,114105=1,114135=1,114128=1,114113=1,114197=1,114126=1,114117=1,114120=Field will be set true if Source Field has been changed. If Value is provided then will only set true if the Source Field is equal to Value. Modifier and Test Field are optional preconditions.\n\nUse option \"-not_null\" to only apply if the changed Source Field is non-null. Use option \"-for_store\" to to only occur after validation and option \"-var=<varname>\" to also set object variable \"<varname>\" to true. Use option \"-object_var=<varname>\" as a precondition and option \"-skip_restore\" to not apply when performing a storage restore.,114158=class={class}\nfield={field}\nsfistexttype={sfistexttype}\nvalue={value}\nsfield={sfield}\ntfield={tfield}\nmodifier={modifier}\nnot_null={?-not_null}\nfor_store={?-for_store}\nvar={#-var}\nobject_var={#-object_var}\nskip_restore={?-skip_restore}\nnot_changed=\nsections=to_store for_store"
pc sys 20120102 Meta 114100 field_bool_has_not_changed "114101=field_bool_has_not_changed,114102=field_{class}{field}[if_]{tfield}[when_]{modifier}[provided_]{sfield}has_not_changed,114103=field_bool_has_changed,114104=1,114124=1,114105=1,114128=1,114113=1,114197=1,114126=1,114117=1,114120=Field will be set true if Source Field has not been changed. Modifier and Test Field are optional preconditions.\n\nUse option \"-not_null\" to only apply if the changed Source Field is non-null. Use option \"-for_store\" to to only occur after validation and option \"-var=<varname>\" to also set object variable \"<varname>\" to true. Use option \"-object_var=<varname>\" as a precondition and option \"-skip_restore\" to not apply when performing a storage restore,114158=class={class}\nfield={field}\nsfistexttype={sfistexttype}\nvalue=\nsfield={sfield}\ntfield={tfield}\nmodifier={modifier}\nnot_null={?-not_null}\nfor_store={?-for_store}\nvar={#-var}\nobject_var={#-object_var}\nskip_restore={?-skip_restore}\nnot_changed=true\nsections=to_store for_store"
pc sys 20120102 Meta 114100 field_bool_is_default "114101=field_bool_is_default,114102=field_{class}{field}if_{sfield}{spfield}{scfield}is_default[_and_]{tfield},114103=field_bool_is_default,114104=1,114124=1,114105=1,114128=1,114125=1,114121=1,114123=1,114154=1,114126=1,114117=1,114120=Field will be set according to whether Source Field is its default value. Test Field is an optional additional check.\n\nUse option \"-for_store\" to to only occur after validation or option \"-post_init\" to occur in \"post_init\". Use option \"-create_only\" to apply only to records being created if not using \"-post_init\".,114158=class={class}\nfield={field}\nsfield={sfield}{scfield}\npfield={spfield}\ntfield={tfield}\nis_neq=\nfor_store={?-for_store}\npost_init={?-post_init}\ncreate_only={?-create_only}\nsections=to_store for_store post_init"
pc sys 20120102 Meta 114100 field_bool_is_not_default "114101=field_bool_is_not_default,114102=field_{class}{field}if_{sfield}{spfield}{scfield}is_not_default[_and_]{tfield},114103=field_bool_is_default,114104=1,114124=1,114105=1,114128=1,114125=1,114121=1,114123=1,114154=1,114126=1,114117=1,114120=Field will be set according to whether Source Field is its default value. Test Field is an optional additional check.\n\nUse option \"-for_store\" to to only occur after validation or option \"-post_init\" to occur in \"post_init\". Use option \"-create_only\" to apply only to records being created if not using \"-post_init\".,114158=class={class}\nfield={field}\nsfield={sfield}{scfield}\npfield={spfield}\ntfield={tfield}\nis_neq=true\nfor_store={?-for_store}\npost_init={?-post_init}\ncreate_only={?-create_only}\nsections=to_store for_store post_init"
pc sys 20120102 Meta 114100 field_bool_matched_clone "114101=field_bool_matched_clone,114102=field_{class}{field}bool_matched_{tfield}with_clone[_or_]{sfield},114103=field_bool_matched_clone,114104=1,114124=1,114111=6,114105=1,114135=1,114128=1,114126=1,114114=1,114117=1,114120=Field will be set true or false by checking whether the Test Field value matches that in the cloned record. Source Field is an optional value to use if no clone record is found and Value is an optional suffix for the clone key.\n\nUse option \"-true_only\" to omit setting false if not matching.,114158=class={class}\nfield={field}\nsfield={sfield}\ntfield={tfield}\nkey_suffix={value}\nnot_equal=\ntrue_only={?-true_only}\nsections=for_store get_required_field_names"
pc sys 20120102 Meta 114100 field_bool_mismatched_clone "114101=field_bool_mismatched_clone,114102=field_{class}{field}bool_mismatched_{tfield}with_clone[_or_]{sfield},114103=field_bool_matched_clone,114104=1,114124=1,114111=6,114105=1,114135=1,114128=1,114126=1,114114=1,114117=1,114120=Field will be set true or false by checking whether the Test Field value matches that in the cloned record. Source Field is an optional value to use if no clone record is found and Value is an optional suffix for the clone key.\n\nUse option \"-true_only\" to omit setting false if not mismatching.,114158=class={class}\nfield={field}\nsfield={sfield}\ntfield={tfield}\nkey_suffix={value}\nnot_equal=true\ntrue_only={?-true_only}\nsections=for_store get_required_field_names"
pc sys 20120102 Meta 114100 field_bool_newer_than_dtm "114101=field_bool_newer_than_dtm,114102=field_{class}{field}from_{sfield}is_{value_label}newer_than_dtm,114103=field_bool_dtm,114104=1,114124=1,114105=1,114135=1,114110=1,114128=1,114113=1,114117=1,114120=Field will be set according to the comparison of Source Field and dtm. Value should provide both a number and a type (e.g. 3 hours).\n\nUse option \"-for_store\" to to only occur after validation or option \"-post_init\" to occur in \"post_init\".,114158=class={class}\nfield={field}\nsfield={sfield}\namount={value_leftpart}\ntype={value_rightpart}\nolder=\nfor_store={?-for_store}\npost_init={?-post_init}\nsections=to_store for_store post_init get_required_field_names"
pc sys 20120102 Meta 114100 field_bool_older_than_dtm "114101=field_bool_older_than_dtm,114102=field_{class}{field}from_{sfield}is_{value_label}older_than_dtm,114103=field_bool_dtm,114104=1,114124=1,114105=1,114135=1,114110=1,114128=1,114113=1,114117=1,114120=Field will be set according to the comparison of Source Field and dtm. Value should provide both a number and a type (e.g. 3 hours).\n\nUse option \"-for_store\" to to only occur after validation or option \"-post_init\" to occur in \"post_init\".,114158=class={class}\nfield={field}\nsfield={sfield}\namount={value_leftpart}\ntype={value_rightpart}\nolder=true\nfor_store={?-for_store}\npost_init={?-post_init}\nsections=to_store for_store post_init get_required_field_names"
pc sys 20120102 Meta 114100 field_bool_uid_is_admin "114101=field_bool_uid_is_admin,114102=field_{class}{field}if_uid_is_admin,114103=field_bool_uid,114104=1,114124=1,114105=1,114117=1,114120=Field will be set true if the uid is admin.\n\nUse option \"-for_store\" to to only occur after validation or option \"-post_init\" to occur in \"post_init\".,114158=class={class}\nfield={field}\nfor_store={?-for_store}\npost_init={?-post_init}\nadmin=true\nsystem=\nnot_equal=\nsections=to_store for_store post_init"
pc sys 20120102 Meta 114100 field_bool_uid_is_not_admin "114101=field_bool_uid_is_not_admin,114102=field_{class}{field}if_uid_is_not_admin,114103=field_bool_uid,114104=1,114124=1,114105=1,114117=1,114120=Field will be set true if the uid is not admin.\n\nUse option \"-for_store\" to to only occur after validation or option \"-post_init\" to occur in \"post_init\".,114158=class={class}\nfield={field}\nfor_store={?-for_store}\npost_init={?-post_init}\nadmin=true\nsystem=\nnot_equal=true\nsections=to_store for_store post_init"
pc sys 20120102 Meta 114100 field_bool_uid_is_system "114101=field_bool_uid_is_system,114102=field_{class}{field}if_uid_is_system,114103=field_bool_uid,114104=1,114124=1,114105=1,114117=1,114120=Field will be set true if the uid is system.\n\nUse option \"-for_store\" to to only occur after validation or option \"-post_init\" to occur in \"post_init\".,114158=class={class}\nfield={field}\nfor_store={?-for_store}\npost_init={?-post_init}\nadmin=\nsystem=true\nnot_equal=\nsections=to_store for_store post_init"
pc sys 20120102 Meta 114100 field_bool_was_cloned "114101=field_bool_was_cloned,114102=field_{class}{field}if_record_was_cloned,114103=field_bool_was_cloned,114104=1,114124=1,114105=1,114111=6,114117=1,114120=Field will be set according to whether the newly created record was cloned.\n\nUse option \"-for_store\" to to only occur after validation.,114158=class={class}\nfield={field}\nfor_store={?-for_store}\nsections=to_store for_store"
pc sys 20120102 Meta 114100 field_clear "114101=field_clear,114102=field_clear_{class}{field}[if_]{sfield}{spfield}{scfield}[and_]{tfield},114103=field_clear,114104=1,114124=1,114105=1,114128=1,114125=1,114121=1,114126=1,114130=35,114131=38,114123=1,114117=1,114120=Both Source Field/Child and Test Field are optional preconditions but Test Field should not be supplied unless Source Field/Child has also been supplied. Use option \"-for_store\" to only occur after validation. Use option \"-create_only\" to only apply to records being created or \"-update_only\" to only apply to existing records.,114158=class={class}\nfield={field}\nfistexttype={fistexttype}\nsfield={sfield}{scfield}\nspfield={spfield}\ntfield={tfield}\nis_neg=\nfor_store={?-for_store}\ncreate_only={?-create_only}\nupdate_only={?-update_only}\nset_to_default=\nsections=to_store for_store"
pc sys 20120102 Meta 114100 field_clear_if_executed "114101=field_clear_if_executed,114102=field_clear_{class}{field}if_executed_{procedure},114103=field_clear_if_executed,114104=1,114124=1,114105=1,114171=1,114106=1,114117=1,114120=Field will be cleared to zero/null if the Procedure had just been previously executed.\n\nUse option \"-for_store\" to to only occur after validation or option \"-post_init\" to occur in \"post_init\".,114158=field={field}\nfistexttype={fistexttype}\nprocedure={procedure}\nfor_store={?-for_store}\npost_init={?-post_init}\nsections=to_store for_store post_init"
pc sys 20120102 Meta 114100 field_clear_not1 "114101=field_clear_not1,114102=field_clear_{class}{field}if_not_{sfield}{spfield}{scfield},114103=field_clear,114104=1,114124=1,114105=1,114128=1,114154=1,114125=1,114121=1,114130=35,114131=38,114123=1,114117=1,114120=Source Field/Child is a mandatory negative precondition. Use option \"-for_store\" to only occur after validation. Use option \"-create_only\" to only apply to records being created or \"-update_only\" to only apply to existing records.,114158=class={class}\nfield={field}\nfistexttype={fistexttype}\nsfield={sfield}{scfield}\nspfield={spfield}\ntfield={tfield}\nis_neg=true\nfor_store={?-for_store}\ncreate_only={?-create_only}\nupdate_only={?-update_only}\nset_to_default=\nsections=to_store for_store"
pc sys 20120102 Meta 114100 field_clear_not2 "114101=field_clear_not2,114102=field_clear_{class}{field}if_{sfield}{spfield}{scfield}and_not_{tfield},114103=field_clear,114104=1,114124=1,114105=1,114128=1,114154=1,114125=1,114121=1,114126=1,114114=1,114130=35,114131=38,114123=1,114117=1,114120=Source Field/Child is a mandatory precondition and Test Field is a mandatory negative precondition. Use option \"-for_store\" to only occur after validation. Use option \"-create_only\" to only apply to records being created or \"-update_only\" to only apply to existing records.,114158=class={class}\nfield={field}\nfistexttype={fistexttype}\nsfield={sfield}{scfield}\nspfield={spfield}\ntfield={tfield}\nis_neg=true\nfor_store={?-for_store}\ncreate_only={?-create_only}\nupdate_only={?-update_only}\nset_to_default=\nsections=to_store for_store"
pc sys 20120102 Meta 114100 field_clear_on_changed "114101=field_clear_on_changed,114102=field_clear_{class}{field}on_changed_{sfield}[if_]{tpfield}{tcfield}{tfield}[is_]{tvalue},114103=field_clear_on_changed,114104=1,114124=1,114105=1,114128=1,114113=1,114115=1,114126=1,114142=1,114117=1,114120=Field will be cleared to zero/null if Source Field has changed. Test Field/Child [== Test Value] is an optional precondition. Use option \"-ignore={new|create}\" to ignore new records or records being created and use option \"-for_store\" to only occur after validation.,114158=class={class}\nfield={field}\nfistexttype={fistexttype}\nsfield={sfield}\nsfisfk={sfisfk}\ntpfield={tpfield}\ntfield={tcfield}{tfield}\ntvalue={tvalue}\nnot_create={?-ignore=create}\nnot_dflt={?-ignore=new}\nfor_store={?-for_store}\nset_to_default=\nsections=to_store for_store"
pc sys 20120102 Meta 114100 field_default "114101=field_default,114102=field_default_{class}{field}[if_]{sfield}{spfield}{scfield}[and_]{tfield},114103=field_clear,114104=1,114124=1,114105=1,114128=1,114125=1,114121=1,114126=1,114130=35,114131=38,114123=1,114117=1,114120=Both Source Field/Child and Test Field are optional preconditions but Test Field should not be supplied unless Source Field/Child has also been supplied. Use option \"-for_store\" to only occur after validation. Use option \"-create_only\" to only apply to records being created or \"-update_only\" to only apply to existing records.,114158=class={class}\nfield={field}\nfistexttype={fistexttype}\nsfield={sfield}{scfield}\nspfield={spfield}\ntfield={tfield}\nis_neg=\nfor_store={?-for_store}\ncreate_only={?-create_only}\nupdate_only={?-update_only}\nset_to_default=true\nsections=to_store for_store"
pc sys 20120102 Meta 114100 field_default_not1 "114101=field_default_not1,114102=field_default_{class}{field}if_not_{sfield}{spfield}{scfield},114103=field_clear,114104=1,114124=1,114105=1,114128=1,114113=1,114125=1,114121=1,114130=35,114131=38,114123=1,114117=1,114120=Source Field/Child is a mandatory negative precondition. Use option \"-for_store\" to only occur after validation. Use option \"-create_only\" to only apply to records being created or \"-update_only\" to only apply to existing records.,114158=class={class}\nfield={field}\nfistexttype={fistexttype}\nsfield={sfield}{scfield}\nspfield={spfield}\ntfield={tfield}\nis_neg=true\nfor_store={?-for_store}\ncreate_only={?-create_only}\nupdate_only={?-update_only}\nset_to_default=true\nsections=to_store for_store"
pc sys 20120102 Meta 114100 field_default_not2 "114101=field_default_not2,114102=field_default_{class}{field}if_{sfield}{spfield}{scfield}and_not_{tfield},114103=field_clear,114104=1,114124=1,114105=1,114128=1,114113=1,114125=1,114121=1,114126=1,114114=1,114130=35,114131=38,114123=1,114117=1,114120=Source Field/Child is a mandatory precondition and Test Field is a mandatory negative precondition. Use option \"-for_store\" to only occur after validation. Use option \"-create_only\" to only apply to records being created or \"-update_only\" to only apply to existing records.,114158=class={class}\nfield={field}\nfistexttype={fistexttype}\nsfield={sfield}{scfield}\nspfield={spfield}\ntfield={tfield}\nis_neg=true\nfor_store={?-for_store}\ncreate_only={?-create_only}\nupdate_only={?-update_only}\nset_to_default=true\nsections=to_store for_store"
pc sys 20120102 Meta 114100 field_default_on_changed "114101=field_default_on_changed,114102=field_default_{class}{field}on_changed_{sfield}[if_]{tpfield}{tcfield}{tfield}[is_]{tvalue},114103=field_clear_on_changed,114104=1,114124=1,114105=1,114128=1,114113=1,114115=1,114126=1,114142=1,114117=1,114120=Field will be cleared to zero/null if Source Field has changed. Test Field/Child [== Test Value] is an optional precondition. Use option \"-ignore={new|create}\" to ignore new records or records being created and use option \"-for_store\" to only occur after validation.,114158=class={class}\nfield={field}\nfistexttype={fistexttype}\nsfield={sfield}\nsfisfk={sfisfk}\ntpfield={tpfield}\ntfield={tcfield}{tfield}\ntvalue={tvalue}\nnot_create={?-ignore=create}\nnot_dflt={?-ignore=new}\nfor_store={?-for_store}\nset_to_default=true\nsections=to_store for_store"
pc sys 20120102 Meta 114100 field_dependency "114101=field_dependency,114102=field_dependency_{class}{field}upon_{sfield},114103=field_dependency,114104=1,114124=1,114105=1,114128=1,114113=1,114120=Source Field will always be included if Field is in the field list.,114158=class={class}\nfield={field}\nsfield={sfield}\nsections=get_required_field_names"
pc sys 20120102 Meta 114100 field_from_acyclic_path "114101=field_from_acyclic_path,114102=field_{class}{field}from_{spfield}{scfield}path,114103=field_from_acyclic_path,114104=1,114124=1,114105=1,114174=1,114135=1,114110=1,114111=20,114112=1,114125=1,114121=1,114122=1,114117=1,114119=51,114130=20,114120=Field will become the path and Value is used as the path separator. Source Parent is the \"self relationship\" parent and Source Child is the field provides each part of the \"path\".\n\nUse option \"-embed_links\" to put link information into the path (the path field will need to have either \"html\" or \"manual_link\" as its extra setting for this to work). Other Field is an optional \"external\" variation when using \"-embed_links\" and if it is provided then the \"-external\" option is ignored.\n\nUse option \"-external\" when links are intended to be displayed in an external class and use \"-allow_parent_iteration\" to operate even when a graph parent is iterating.,114158=class={class}\nsrc_field={scfield}\nsrc_field_id={scfield_id}\next_field={ofield}\ndest_field={field}\ndest_field_id={field_id}\nfmandatory={fmandatory}\nftransient={ftransient}\npfield={spfield}\npfield_id={spfield_id}\nseparator={value_string}\nembed_links={?-embed_links}\nexternal={?-external}\nallow_parent_iteration={?-allow_parent_iteration}\nsections=value_will_be_provided for_store after_fetch get_required_field_names"
pc sys 20120102 Meta 114100 field_from_changed_fk "114101=field_from_changed_fk,114102=field_{class}{field}from_{spfield}{scfield}if_{spfield}has_changed,114103=field_from_changed_fk,114104=1,114124=1,114105=1,114125=1,114112=1,114117=1,114121=1,114122=1,114120=Use option \"-for_store\" to only occur after validation or option \"-new=also|only\" to apply also/only to new records. Use \"-update_only\" to only apply to existing records and use \"-trigger_only\" to only apply if FK was the UI trigger. Use option \"-not_null\" to not change value if Source Parent is null and option \"-append=<value>\" to append a literal.,114158=class={class}\ndfield={field}\npfield={spfield}\nsfield={scfield}\nfor_store={?-for_store}\nfmandatory={fmandatory}\nnew_only={?-new=only}\ninc_dflt={?-new=also}\nnot_create={?-update_only}\ntrigger_only={?-trigger_only}\nnot_null={?-not_null}\nappend={#-append}\nsections=value_will_be_provided to_store for_store"
pc sys 20120102 Meta 114100 field_from_child_auto_int_inc "114101=field_from_child_auto_int_inc,114102=field_{class}{field}from_last_{spfield}child_int_inc,114103=field_from_child_auto_int_inc,114104=1,114124=1,114105=1,114135=1,114125=1,114112=1,114140=115437$115100.301405,301710=field_from_child_auto_int_inc_sinfo,114117=1,114120=Value is an optional prefix.\n\nAfter saving click \"Add Source Info\" to continue.\n\nUse option \"-min_digits=<number>\" to zero prefix the number to the minimum digits number specification.,114158=class={class}\nfield={field}\npfield={spfield}\nprefix={value}\nmin_digits={#-min_digits}\nsections=to_store"
pc sys 20120102 Meta 114100 field_from_child_concat "114101=field_from_child_concat,114102=field_{class}{field}from_{child}children,114103=field_from_child_concat,114104=1,114124=1,114105=1,114174=1,114135=1,114191=1,114138=1,114117=1,114140=115432$115100.301405,301710=field_from_child_concat_cinfo,114120=Field will be the concatenated values from the Child Relationship records. Value is an optional record separator and Other Field is a second field to assign (which will be assigned to the value of the \"order\" field if it was used).\n\nUse option \"-for_store\" to only occur after validation and option \"-embed_links\" to put link information into the field (the field will need to have either \"html\" or \"manual_link\" as its extra setting for this to work).\n\nAfter saving click \"Add Child Info\" to continue.,114158=class={class}\nfield={field}\nxfield={ofield}\nchildren={child}\nseparator={value_string}\ncclass={cclass}\nfor_store={?-for_store}\nembed_links={?-embed_links}\nsections=to_store for_store after_store after_destroy"
pc sys 20120102 Meta 114100 field_from_clone_key "114101=field_from_clone_key,114102=field_{class}{field}from_clone_key[_if_]{tfield},114103=field_from_clone_key,114104=1,114124=1,114111=51,114126=1,114117=1,114120=Field must be a \"self-relationship\" FK and Test Field is an optional precondition.\n\nUse option \"-for_store\" to only occur after validation or option \"-new_only\" to only apply to new records.,114158=class={class}\nfield={field}\ntfield={tfield}\nfor_store={?-for_store}\nfmandatory={fmandatory}\nnew_only={?-new_only}\nnot_create={?-update_only}\ntrigger_only={?-trigger_only}\nnot_null={?-not_null}\nsections=value_will_be_provided to_store for_store"
pc sys 20120102 Meta 114100 field_from_concatenation "114101=field_from_concatenation,114102=field_{class}{field}from_concatenation[_if_]{tfield},114103=field_from_concatenation,114104=1,114124=1,114105=1,114126=1,114117=1,114135=1,114120=Field will be the concatenated \"field list\". Value is an optional separator and Test Field is an optional precondition.\n\nUse option \"-new_only\" to only apply to new records or option \"-for_store\" to only occur after validation. Use option \"-non_trigger\" to set only if non-trigger.,114158=class={class}\ndfield={field}\nfmandatory={fmandatory}\ntfield={tfield}\nfield_list={fields}\nseparator={value_string}\nnew_only={?-new_only}\nfor_store={?-for_store}\nnon_trigger={?-non_trigger}\nsections=value_will_be_provided to_store for_store"
pc sys 20120102 Meta 114100 field_from_concatenation_field_list "114101=field_from_concatenation_field_list,114102=field_list,114103=n/a,114139=1,114140=115430$115100.301405,301700=field_from_concatenation,301710=field,114147=1"
pc sys 20120102 Meta 114100 field_from_dtm "114101=field_from_dtm,114102=field_{class}{field}from_dtm[_if_]{tfield},114103=field_from_dtm,114104=1,114124=1,114105=1,114126=1,114117=1,114120=Test Field is an optional precondition. Use option \"-for_store\" to only occur after validation.,114158=class={class}\nfield={field}\ntfield={tfield}\nfor_store={?-for_store}\nfmandatory={fmandatory}\nsections=value_will_be_provided to_store for_store"
pc sys 20120102 Meta 114100 field_from_enum_item_name "114101=field_from_enum_item_name,114102=field_{class}{field}from_{sfield}enum_item_name,114103=field_from_enum_item_name,114104=1,114124=1,114105=1,114128=1,114113=1,114198=1,114108=1,114207=1,114117=1,114120=Field is the \"name\" and Source Field is the \"source\" for the enum value.\n\nUse option \"-new_only\" to only apply to new records.,114158=class={class}\nfield={field}\nsfield={sfield}\nenum={enum}\nnew_only={?-new_only}\nsections=to_store"
pc sys 20120102 Meta 114100 field_from_first_child "114101=field_from_first_child,114102=field_{class}{field}from_first_{child},114103=fk_link_first_child,114104=1,114124=1,114105=1,114126=1,114115=1,114117=1,114191=1,114138=1,114140=115432$115100.301405,114145=1,301710=field_first_child_opt_order,114120=Field will be obtained from the Child Relationship. Test Field and Test Value are optional preconditions. Use option \"-for_store\" to perform after validation and option \"-create_only\" to only apply to records being created or \"-update_only\" to only apply to existing records.,114158=class={class}\nfield={field}\nchild={child}\nchild_class={cclass}\npfield=\nstatus_field={tfield}\nstatus_value={tvalue}\nfor_store={?-for_store}\nfmandatory={fmandatory}\nnew_only={?-create_only}\nnot_create={?-update_only}\nreverse=\nsections=value_will_be_provided to_store for_store"
pc sys 20120102 Meta 114100 field_from_first_fk_child "114101=field_from_first_fk_child,114102=field_{class}{field}from_first_{spfield}child,114103=fk_link_first_child,114104=1,114124=1,114105=1,114125=1,114112=1,114126=1,114115=1,114117=1,114140=115437$115100.301405,301710=field_first_source_info,114120=Field will be obtained from a child relationship of the Source Parent. Test Field and Test Value are optional preconditions. Use option \"-for_store\" to perform after validation and option \"-create_only\" to only apply to records being created or \"-update_only\" to only apply to existing records.,114158=class={class}\nfield={field}\npfield={spfield}\nstatus_field={tfield}\nstatus_value={tvalue}\nfor_store={?-for_store}\nfmandatory={fmandatory}\nnew_only={?-create_only}\nnot_create={?-update_only}\nreverse=\nsections=value_will_be_provided to_store for_store"
pc sys 20120102 Meta 114100 field_from_gen_pdf "114101=field_from_gen_pdf,114102=field_{class}{field}from_{procedure}gen_pdf[_if_]{tfield},114103=field_from_gen_pdf,114104=1,114124=1,114105=1,114174=1,114175=1,114126=1,114171=1,114106=1,114204=1,114132=1,114120=Field is the \"file\" field and Other Field is the PDF \"title\". Test Field is an optional precondition. Procedure is where the PDF file is generated via a script that needs to have been created by another specification. Procedure Arg must be a string \"output\" argument so a success message can be returned.,114158=class={class}\nfile={field}\ntitle={ofield}\nprocedure={procedure}\noutput={procedure_arg}\ntfield={tfield}\nsections=procedure"
pc sys 20120102 Meta 114100 field_from_grp "114101=field_from_grp,114102=field_{class}{field}from_grp[_if_]{tfield},114103=field_from_grp,114104=1,114124=1,114105=1,114126=1,114117=1,114120=Test Field is an optional precondition.\n\nUse option \"-create_only\" to apply to new records only and use option \"-for_store\" to only occur after validation or option \"-post_init\" to occur in \"post_init\". Use option \"-check={default|notdefault}\" to only perform if Field is (not) its default value and option \"-append=<value>\" to append a literal.,114158=class={class}\nfield={field}\ntfield={tfield}\nfor_store={?-for_store}\npost_init={?-post_init}\ncreate_only={?-create_only}\ncheck={#-check}\nappend={#-append}\nfmandatory={fmandatory}\nsections=value_will_be_provided to_store for_store post_init"
pc sys 20120102 Meta 114100 field_from_key "114101=field_from_key,114102=field_{class}{field}from_key[_if_]{tfield},114103=field_from_key,114104=1,114124=1,114105=1,114126=1,114117=1,114120=Field will be set to the key value of the record with Test Field being an optional precondition.\n\nUse option \"-create_only\" to apply only to records being created or \"-update_only\" to only apply to records being updated. Use option \"-for_store\" to only occur after validation and option \"-suffix=<value>\" to append a suffix literal. Use option \"-skip_fk_handling\" to bypass normal FK handling (this should generally not be used).,114158=class={class}\nfield={field}\ntfield={tfield}\ncreate_only={?-create_only}\nupdate_only={?-update_only}\nfor_store={?-for_store}\nsuffix={#-suffix}\nskip_fk_handling={?-skip_fk_handling}\nfmandatory={fmandatory}\nsections=value_will_be_provided to_store for_store"
pc sys 20120102 Meta 114100 field_from_last_child "114101=field_from_last_child,114102=field_{class}{field}from_last_{child},114103=fk_link_first_child,114104=1,114124=1,114105=1,114126=1,114115=1,114117=1,114191=1,114138=1,114140=115432$115100.301405,114145=1,301710=field_first_child_opt_order,114120=Field will be obtained from the Child Relationship. Test Field and Test Value are optional preconditions. Use option \"-for_store\" to perform after validation and option \"-create_only\" to only apply to records being created or \"-update_only\" to only apply to existing records.,114158=class={class}\nfield={field}\nchild={child}\nchild_class={cclass}\npfield=\nstatus_field={tfield}\nstatus_value={tvalue}\nfor_store={?-for_store}\nfmandatory={fmandatory}\nnew_only={?-create_only}\nnot_create={?-update_only}\nreverse=true\nsections=value_will_be_provided to_store for_store"
pc sys 20120102 Meta 114100 field_from_last_fk_child "114101=field_from_last_fk_child,114102=field_{class}{field}from_last_{spfield}child,114103=fk_link_first_child,114104=1,114124=1,114105=1,114125=1,114112=1,114126=1,114115=1,114117=1,114140=115437$115100.301405,301710=field_first_source_info,114120=Field will be obtained from a child relationship of the Source Parent. Test Field and Test Value are optional preconditions. Use option \"-for_store\" to perform after validation and option \"-create_only\" to only apply to records being created or \"-update_only\" to only apply to existing records.,114158=class={class}\nfield={field}\npfield={spfield}\nstatus_field={tfield}\nstatus_value={tvalue}\nfor_store={?-for_store}\nfmandatory={fmandatory}\nnew_only={?-create_only}\nnot_create={?-update_only}\nreverse=true\nsections=value_will_be_provided to_store for_store"
pc sys 20120102 Meta 114100 field_from_module_string "114101=field_from_module_string,114102=field_{class}{field}from_module_string[_if_]{tfield},114103=field_from_module_string,114104=1,114124=1,114105=1,114135=1,114110=1,114126=1,114117=1,114120=Field will be set from the module string which Value is the default language literal. Test Field is an optional boolean precondition.\n\nUse option \"-for_store\" to to only occur after validation or option \"-post_init\" to occur in \"post_init\".,114158=id={id}\nfield={field}\nfmandatory={fmandatory}\ntfield={tfield}\nfor_store={?-for_store}\npost_init={?-post_init}\nsections=to_store for_store post_init value_will_be_provided,114163=1,114166=string={value}"
pc sys 20120102 Meta 114100 field_from_op_enum_item "114101=field_from_op_enum_item,114102=field_{class}{field}from_{sfield}{tvalue}{enum_item}[if_]{tfield}[in_]{procedure}[when_]{modifier},114103=field_from_op,114104=1,114124=1,114105=1,114198=1,114199=1,114109=1,114207=1,114128=1,114113=1,114117=1,114126=1,114115=1,114116=1,114171=1,114197=1,114120=Field is Source Field \"op\" Enum Item. Modifier is an optional precondition and Test Field is another optional precondition while Test Value must be one of \"eq | neq | lt | gt | lteq | gteq | add | sub | mul | div | and | or | xor | mod | bitand | bitor | bitsleft | bitsright\". If Procedure is provided then it will be used as the source injection point.\n\nUse \"-for_store\" to only occur after validation or option \"-post_init\" to occur in \"post_init\". If using Procedure then can use option \"-update\" to perform a record update. Use option \"-check={default|notdefault}\" to only perform op if Source Field is (not) its default value and option \"-new_only\" to only apply to new records or \"-create_only\" to apply only to records being created if not using \"-post_init\".,114158=class={class}\nfield={field}\nvalue={enum_value}\nvtype=\nevalue={enum_item}\nfmandatory={fmandatory}\nsfield={sfield}\nsfistexttype={sfistexttype}\ntfield={tfield}\ntfistexttype={tfistexttype}\nop={tvalue}\nprocedure={procedure}\nmodifier={modifier}\ntype={#-type}\nfor_store={?-for_store}\npost_init={?-post_init}\nupdate={?-update}\ncheck={#-check}\nnew_only={?-new_only}\ncreate_only={?-create_only}\nspfield=\nscfistexttype=\nofield=\nsections=procedure value_will_be_provided to_store for_store post_init get_required_field_names"
pc sys 20120102 Meta 114100 field_from_op_field "114101=field_from_op_field,114102=field_{class}{field}from_{sfield}{spfield}{scfield}{tvalue}{ofield}[if_]{tfield}[in_]{procedure}[when_]{modifier},114103=field_from_op,114104=1,114124=1,114105=1,114174=1,114175=1,114128=1,114125=1,114121=1,114123=1,114154=1,114117=1,114126=1,114115=1,114116=1,114171=1,114197=1,114120=Field is Source Field/Child \"op\" Other Field. Modifier is an optional precondition and Test Field is another optional precondition while Test Value must be one of \"eq | neq | lt | gt | lteq | gteq | add | sub | mul | div | and | or | xor | mod | bitand | bitor | bitsleft | bitsright\". If Procedure is provided then it will be used as the source injection point.\n\nUse option \"-type=<type>\" to cast Other Field and option \"-for_store\" to only occur after validation or option \"-post_init\" to occur in \"post_init\". If using Procedure then can use option \"-update\" to perform a record update. Use option \"-check={default|notdefault}\" to only perform op if Source Field/Parent is (not) its default value. Use option \"-new_only\" to only apply to new records or \"-create_only\" to apply only to records being created if not using \"-post_init\".,114158=class={class}\nofield={ofield}\nfield={field}\nfmandatory={fmandatory}\nsfield={sfield}{scfield}\nspfield={spfield}\nsfistexttype={sfistexttype}\nscfistexttype={scfistexttype}\ntfield={tfield}\ntfistexttype={tfistexttype}\nop={tvalue}\nprocedure={procedure}\nmodifier={modifier}\ntype={#-type}\nfor_store={?-for_store}\npost_init={?-post_init}\nupdate={?-update}\ncheck={#-check}\nnew_only={?-new_only}\ncreate_only={?-create_only}\nvalue=\nvtype=\nevalue=\nsections=procedure value_will_be_provided to_store for_store post_init get_required_field_names"
pc sys 20120102 Meta 114100 field_from_op_value "114101=field_from_op_value,114102=field_{class}{field}from_{sfield}{spfield}{scfield}{tvalue}{value_label}[if_]{tfield}[in_]{procedure}[when_]{modifier},114103=field_from_op,114104=1,114124=1,114105=1,114135=1,114110=1,114111=30,114128=1,114125=1,114121=1,114123=1,114154=1,114117=1,114126=1,114115=1,114116=1,114171=1,114197=1,114120=Field is Source Field/Child \"op\" Value. Modifier is an optional precondition and Test Field is another optional precondition while Test Value must be one of \"eq | neq | lt | gt | lteq | gteq | add | sub | mul | div | and | or | xor | mod | bitand | bitor | bitsleft | bitsright\". If Procedure is provided then it will be used as the source injection point.\n\nUse option \"-type=<type>\" to cast Value and option \"-for_store\" to only occur after validation or option \"-post_init\" to occur in \"post_init\". If using Procedure then can use option \"-update\" to perform a record update. Use option \"-check={default|notdefault}\" to only perform op if Source Field/Parent is (not) its default value. Use option \"-new_only\" to only apply to new records or \"-create_only\" to apply only to records being created if not using \"-post_init\".,114158=class={class}\nvalue={value_leftpart}\nvtype={value_rightpart}\nfield={field}\nfmandatory={fmandatory}\nsfield={sfield}{scfield}\nspfield={spfield}\nsfistexttype={sfistexttype}\nscfistexttype={scfistexttype}\ntfield={tfield}\ntfistexttype={tfistexttype}\nop={tvalue}\nprocedure={procedure}\nmodifier={modifier}\ntype={#-type}\nfor_store={?-for_store}\npost_init={?-post_init}\nupdate={?-update}\ncheck={#-check}\nnew_only={?-new_only}\ncreate_only={?-create_only}\nofield=\nevalue=\nsections=procedure value_will_be_provided to_store for_store post_init get_required_field_names"
pc sys 20120102 Meta 114100 field_from_other_field "114101=field_from_other_field,114102=field_{class}{field}from_{sfield}{spfield}{scfield}[if_]{tfield}{tpfield}{tcfield}[is_]{tvalue}[in_]{procedure}[when_]{modifier},114103=field_from_other_field,114104=1,114124=1,114174=1,114183=1,114125=1,114121=1,114123=1,114135=1,114154=1,114128=1,114126=1,114115=1,114171=1,114117=1,114131=38,114142=1,114197=1,114120=Modifier and Test Field/Child [== Test Value] are optional preconditions and if Value is provided it will be used if the precondition fails. If Procedure is provided then it will be used as the source injection point. Other Field and Other Field 2 are optional prefix function arguments when using the \"-func\" option.\n\nUse option \"-new_only\" to apply for new records only or option \"-create_only\" to prevent usage in updates along with \"-include_clones\" to apply even when cloning. Use option \"-for_store\" to only occur after validation and use option \"-internal_only\" to only apply to internal update operations. Use option \"-func=<func>\" (with optional \"-func_arg1=<lit>\" and \"-func_arg2=<lit>\" as literal suffix arguments) to transform the Source Field/Child value for Field and \"-mfunc=<mfunc>\" to use the specified Source Field's/Child's member function. If using Procedure then can use option \"-update\" to perform a record update. Use option \"-non_trigger\" to set only if non-trigger. Use option \"-check={default|notdefault}\" to only perform if Field is (not) its default value and option \"-append=<value>\" to append a literal.,114158=class={class}\ndfield={field}\nfmandatory={fmandatory}\nfield1={ofield}\nfield2={o2field}\npfield={spfield}\nsfield={scfield}{sfield}\ntpfield={tpfield}\ntfield={tcfield}{tfield}\ntvalue={tvalue}\ntfistexttype={tfistexttype}\ntcfistexttype={tcfistexttype}\nmodifier={modifier}\nprocedure={procedure}\nnew_only={?-new_only}\ncreate_only={?-create_only}\ninclude_clones={?-include_clones}\nfor_store={?-for_store}\ninternal_only={?-internal_only}\nchk_null=\nnvalue={value_literal}\nfunc={#-func}\nfunc_arg1={#-func_arg1}\nfunc_arg2={#-func_arg2}\nmfunc={#-mfunc}\nupdate={?-update}\nnon_trigger={?-non_trigger}\ncheck={#-check}\nappend={#-append}\nsections=procedure value_will_be_provided to_store for_store get_required_field_names"
pc sys 20120102 Meta 114100 field_from_other_non_null_field "114101=field_from_other_non_null_field,114102=field_{class}{field}from_non_null_{sfield}{spfield}{scfield}[if_]{tfield}{tpfield}{tcfield}[is_]{tvalue}[in_]{procedure}[when_]{modifier},114103=field_from_other_field,114104=1,114124=1,114174=1,114183=1,114125=1,114121=1,114123=1,114135=1,114154=1,114171=1,114117=1,114128=1,114126=1,114115=1,114131=38,114142=1,114197=1,114120=Modifier and Test Field/Child [== Test Value] are optional preconditions and if Value is provided it will be used if the Source is null or the precondition fails. If Procedure is provided then it will be used as the source injection point. Other Field and Other Field 2 are optional prefix function arguments when using the \"-func\" option.\n\nUse option \"-new_only\" to apply for new records only or option \"-create_only\" to prevent usage in updates along with \"-include_clones\" to apply even when cloning. Use option \"-for_store\" to only occur after validation and use option \"-internal_only\" to only apply to internal update operations. Use option \"-func=<func>\" (with optional \"-func_arg1=<lit>\" and \"-func_arg2=<lit>\" as literal suffix arguments) to transform the Source Field/Child value for Field and \"-mfunc=<mfunc>\" to use the specified Source Field's/Child's member function. If using Procedure then can use option \"-update\" to perform a record update. Use option \"-non_trigger\" to set only if non-trigger. Use option \"-check={default|notdefault}\" to only perform if Field is (not) its default value and option \"-append=<value>\" to append a literal.,114158=class={class}\ndfield={field}\nfmandatory={fmandatory}\nfield1={ofield}\nfield2={o2field}\npfield={spfield}\nsfield={scfield}{sfield}\ntpfield={tpfield}\ntfield={tcfield}{tfield}\ntvalue={tvalue}\ntfistexttype={tfistexttype}\ntcfistexttype={tcfistexttype}\nmodifier={modifier}\nprocedure={procedure}\nnew_only={?-new_only}\ncreate_only={?-create_only}\ninclude_clones={?-include_clones}\nfor_store={?-for_store}\ninternal_only={?-internal_only}\nchk_null=true\nnvalue={value_literal}\nfunc={#-func}\nfunc_arg1={#-func_arg1}\nfunc_arg2={#-func_arg2}\nmfunc={#-mfunc}\nupdate={?-update}\nnon_trigger={?-non_trigger}\ncheck={#-check}\nappend={#-append}\nsections=procedure value_will_be_provided to_store for_store get_required_field_names"
pc sys 20120102 Meta 114100 field_from_parent_auto_int_inc "114101=field_from_parent_auto_int_inc,114102=field_{class}{field}from_{spfield}{scfield},114103=parent_auto_int_inc,114104=1,114124=1,114105=1,114125=1,114112=1,114121=1,114122=1,114126=1,114117=1,114115=1,114120=Test Field is an optional field for \"id chaining\" (use Test Value as the child's increment suffix). Use option \"-use_static\" to only increment from the class static instance.,114158=class={class}\nfield={field}\npclass={spclass}\npfield={spfield}\ncfield={scfield}\nnfield={tfield}\nnew_val={tvalue}\nfmandatory={fmandatory}\nstatic={?-use_static}\nsections=value_will_be_provided for_store"
pc sys 20120102 Meta 114100 field_from_procedure_call "114101=field_from_procedure_call,114102=field_{class}{field}from_{procedure},114103=field_from_procedure_call,114104=1,114124=1,114105=1,114171=1,114106=1,114135=1,114120=Field will get its value from a call to Procedure. Value is an optional argument to pass to the procedure.,114158=class={class}\nfield={field}\nvalue={value}\nprocedure={procedure}\ntransient=\nsections=finalise_fetch to_store"
pc sys 20120102 Meta 114100 field_from_script_ext "114101=field_from_script_ext,114102=field_{class}{field}from_{value}script_in_{procedure}[if_]{tfield},114103=field_from_script,114104=1,114124=1,114105=1,114174=1,114183=1,114135=1,114110=1,114171=1,114106=1,114128=1,114126=1,114115=1,114120=Field will get its value via a call to the external script named Value. Other Field and Other Field 2 are optional arguments to be passed to the script. Source Field is an optional datetime that will be set to the current datetime and Test Field is an optional precondition. Test Value is an optional regular expression that will be used to validate the external script response. If its value is set to 'use_tfield' then Test Field will not be used as a precondition but instead becomes the source of the regular expression.\n\nNote that Field is not directly updated by the Procedure but instead by an internal script (called after the external one) that will named according to Model\\, Class and Field names.,114158=model={model}\nclass={class}\nfield={field}\nvalue={value}\narg1={ofield}\narg2={o2field}\nsfield={sfield}\ntfield={tfield}\ntvalue={tvalue}\nprocedure={procedure}\nscript={model}_{class}_{field}.cin\ncomment=\nsections=procedure"
pc sys 20120102 Meta 114100 field_from_search_replace "114101=field_from_search_replace,114102=field_{class}{field}from_{sfield}{spfield}{scfield}search_replace[_if_]{tfield},114103=field_from_search_replace,114104=1,114124=1,114105=1,114128=1,114121=1,114125=1,114123=1,114126=1,114117=1,114154=1,114120=Test Field is an optional precondition.\n\nUse option \"-keyrep=<token>\" for key replacement token\\, option \"-classrep=<token>\" for class replacement token and option \"-include_labels\" to also include field display names. Use option \"-top_level\" to only apply to the top level node of the object graph.,114158=class={class}\ndfield={field}\nsfield={spfield}{sfield}\ncfield={scfield}\ntfield={tfield}\nfield_list={fields}\nkeyrep={#-keyrep}\nclassrep={#-classrep}\nftransient=0\nseparator=\nopt_prefix=\nofield=\noleftb=\norightb=\ntop_level={?-top_level}\ninc_labels={?-include_labels}\nsections=after_fetch to_store get_required_field_names"
pc sys 20120102 Meta 114100 field_from_search_replace_field_list "114101=field_from_search_replace_field_list,114102=field_svlist,114103=n/a,114139=1,114140=115430$115100.301405,301700=field_from_search_replace,301710=field_source_and_value,114147=1"
pc sys 20120102 Meta 114100 field_from_uid "114101=field_from_uid,114102=field_{class}{field}from_uid[_if_]{tfield},114103=field_from_uid,114104=1,114124=1,114105=1,114126=1,114117=1,114120=Test Field is an optional precondition.\n\nUse option \"-create_only\" to apply to new records only and use option \"-for_store\" to only occur after validation or option \"-post_init\" to occur in \"post_init\". Use option \"-check={default|notdefault}\" to only perform if Field is (not) its default value and option \"-append=<value>\" to append a literal.,114158=class={class}\nfield={field}\ntfield={tfield}\nfor_store={?-for_store}\npost_init={?-post_init}\ncreate_only={?-create_only}\ncheck={#-check}\nappend={#-append}\nfmandatory={fmandatory}\nsections=value_will_be_provided to_store for_store post_init"
pc sys 20120102 Meta 114100 field_from_unary_op "114101=field_from_unary_op,114102=field_{class}{field}from_{tvalue}{sfield}[if_]{tfield}[in_]{procedure},114103=field_from_unary_op,114104=1,114124=1,114105=1,114111=30,114128=1,114113=1,114117=1,114118=1,114126=1,114115=1,114131=30,114116=1,114171=1,114120=Field is set to \"op\" Source Field. Test Field is an optional precondition and Test Value must be one of \"not | bitnot\". If Procedure is provided then it will be used as the source injection point.\n\nUse option \"-for_store\" to only occur after validation or option \"-post_init\" to occur in \"post_init\". If using Procedure then can use option \"-update\" to perform a record update.,114158=class={class}\nfield={field}\nsfield={sfield}\ntfield={tfield}\nop={tvalue}\nprocedure={procedure}\npost_init={?-post_init}\nfor_store={?-for_store}\nupdate={?-update}\nsections=procedure to_store for_store post_init get_required_field_names"
pc sys 20120102 Meta 114100 field_from_updating_graph_parent "114101=field_from_updating_graph_parent,114102=field_{class}{field}from_updating_{spclass}graph_parent_{scfield}[if_equal_to_]{tvalue},114103=field_from_updating_graph_parent,114104=1,114124=1,114105=1,114125=1,114112=1,114121=1,114122=1,114115=1,114117=1,114120=Field will be set to the value of Source Child in the graph parent if the graph parent is the same class as Source Parent and is being updated. If Test Value is provided then assignment will only occur if the field matches this value.\n\nUse option \"-for_store\" to only occur after validation.,114158=class={class}\nfield={field}\nspclass={spclass}\nscfield={scfield}\ntvalue={tvalue}\nfor_store={?-for_store}\nsections=to_store for_store"
pc sys 20120102 Meta 114100 field_inc_in_proc "114101=field_inc_in_proc,114102=field_{class}{field}to_{procedure},114103=field_inc_in_proc,114104=1,114124=1,114105=1,114171=1,114106=1,114135=1,114110=1,114111=30,114120=For a calendar Value use \"now\" or \"today\" for the present or provide a number and a type (e.g. 2 hours).,114158=class={class}\nfield={field}\nvalue={value}\nproc={procedure}\nsections=procedure"
pc sys 20120102 Meta 114100 field_quote_cloned_html "114101=field_quote_cloned_html,114102=field_quote_{class}{field}with_{sfield}{spfield}{scfield}and_{tfield},114103=field_quote_cloned_html,114104=1,114124=1,114105=1,114128=1,114125=1,114121=1,114123=1,114154=1,114126=1,114114=1,114120=Field is the html field to be quoted. Source Field/Child is the reference source and Test Field is the reference date time.,114158=class={class}\nfield={field}\nsfield={sfield}{scfield}\nspfield={spfield}\ntfield={tfield}\nsections=to_store"
pc sys 20120102 Meta 114100 field_swap_fk "114101=field_swap_fk,114102=field_{class}swap_{sfield}and_{spfield}[if_]{tfield},114103=field_swap_fk,114104=1,114174=1,114183=1,114128=1,114113=1,114125=1,114112=1,114171=1,114126=1,114117=1,114120=Source Field is the FK to be swapped with Source Parent. Test Field is an optional precondition if Other Field is provided then it will be assigned the value of Other Field 2.\n\nUse option \"-create_only\" to apply to new records only. Use option \"-for_store\" to to only occur after validation and if using Procedure then can use option \"-update\" to perform a record update.,114158=class={class}\nfk_1={sfield}\nfk_2={spfield}\nofield={ofield}\no2field={o2field}\ntfield={tfield}\nprocedure={procedure}\ncreate_only={?-create_only}\nupdate={?-update}\nfor_store={?-for_store}\nsections=procedure to_store for_store get_required_field_names"
pc sys 20120102 Meta 114100 field_to_enum_item "114101=field_to_enum_item,114102=field_{class}{field}to_{enum_item}[if_]{tfield}[in_]{procedure}[when_]{modifier},114103=field_to_value,114104=1,114124=1,114105=1,114162=1,114199=1,114109=1,114126=1,114197=1,114171=1,114117=1,114120=Field will be assigned to Enum Item. Modifier and Test Field are optional precondition. If Procedure is provided then it will be used as the source injection point.\n\nUse option \"-create_only\" to apply to new records only or \"-update_only\" to only apply to existing records and use option \"-internal_only\" to only apply to internal create or update operations. Use option \"-for_store\" to only occur after validation or option \"-post_init\" to occur in \"post_init\". If using Procedure then can use option \"-update\" to perform a record update.,114158=class={class}\nfield={field}\nvalue={enum_item}\nevalue={enum_value}\nmodifier={modifier}\ntfield={tfield}\nprocedure={procedure}\nupdate={?-update}\nfor_store={?-for_store}\npost_init={?-post_init}\ncreate_only={?-create_only}\nupdate_only={?-update_only}\ninternal_only={?-internal_only}\nfmandatory={fmandatory}\nfistexttype={fistexttype}\ntfistexttype={tfistexttype}\nsections=procedure value_will_be_provided to_store for_store post_init get_required_field_names"
pc sys 20120102 Meta 114100 field_to_rounded "114101=field_to_rounded,114102=field_{class}{field}to_rounded,114103=field_to_rounded,114104=1,114124=1,114105=1,114111=4,114117=1,114120=Field must be a numeric and use Option \"-method=<up|down|normal|bankers>\" to specify a method (the default is normal).,114158=class={class}\nfield={field}\ndecimals={fdecimals}\nmethod={#-method}\nsections=to_store"
pc sys 20120102 Meta 114100 field_to_value "114101=field_to_value,114102=field_{class}{field}to_{value_label}[if_]{tfield}[in_]{procedure}[when_]{modifier},114103=field_to_value,114104=1,114124=1,114105=1,114135=1,114110=1,114126=1,114197=1,114171=1,114117=1,114120=Field will be assigned to Value. Modifier and Test Field are an optional preconditions. If Procedure is provided then it will be used as the source injection point.\n\nUse option \"-create_only\" to apply to new records only or \"-update_only\" to only apply to existing records and use option \"-internal_only\" to only apply to internal create or update operations. Use option \"-for_store\" to only occur after validation or option \"-post_init\" to occur in \"post_init\". If using Procedure then can use option \"-update\" to perform a record update.,114158=class={class}\nfield={field}\nvalue={value}\nevalue=\nmodifier={modifier}\ntfield={tfield}\nprocedure={procedure}\nupdate={?-update}\nfor_store={?-for_store}\npost_init={?-post_init}\ncreate_only={?-create_only}\nupdate_only={?-update_only}\ninternal_only={?-internal_only}\nfmandatory={fmandatory}\nfistexttype={fistexttype}\ntfistexttype={tfistexttype}\nsections=procedure value_will_be_provided to_store for_store post_init get_required_field_names"
pc sys 20120102 Meta 114100 field_to_value_for_updating_graph_parent "114101=field_to_value_for_updating_graph_parent,114102=field_{class}{field}to_{value_label}for_updating_{spclass}graph_parent[_if_{spclass}]{scfield}[when_]{tfield}[equal_to_]{tvalue},114103=field_to_value_for_updating_graph_parent,114104=1,114124=1,114105=1,114174=1,114135=1,114110=1,114125=1,114112=1,114121=1,114176=1,114126=1,114115=1,114117=1,114120=Field will be set Value if the graph parent matches the Source Parent class and if this graph parent is being updated. Test Field [== Test Value] is an optional precondition. Source Child is an optional precondition for the graph parent. Other Source Child will be assigned to the value of Other Field if both are provided.\n\nUse option \"-for_store\" to only occur after validation.,114158=class={class}\nfield={field}\nofield={ofield}\nvalue={value}\nspclass={spclass}\nscfield={scfield}\noscfield={oscfield}\ntfield={tfield}\ntvalue={tvalue}\nfor_store={?-for_store}\nfistexttype={fistexttype}\ntfistexttype={tfistexttype}\nsections=to_store for_store"
pc sys 20120102 Meta 114100 field_value_enum_for_modifier "114101=field_value_enum_for_modifier,114102=field_{class}{field}to_{enum_item}if_{modifier},114103=modifier_set_field,114104=1,114124=1,114105=1,114197=1,114107=1,114198=1,114108=1,114199=1,114109=1,114162=1,114117=1,114120=Use option \"-for_store\" to only occur after validation and option \"-non_trigger\" to set only if non-trigger. Use option \"-create_only\" to apply to new records only or \"-update_only\" to only apply to existing records.,114158=class={class}\nfield={field}\nmodifier={modifier}\nvalue={enum_value}\nevalue={enum_item}\nfor_store={?-for_store}\nnon_trigger={?-non_trigger}\ncreate_only={?-create_only}\nupdate_only={?-update_only}\nsections=to_store for_store"
pc sys 20120102 Meta 114100 field_value_for_modifier "114101=field_value_for_modifier,114102=field_{class}{field}to_{value_label}if_{modifier},114103=modifier_set_field,114104=1,114124=1,114105=1,114197=1,114107=1,114135=1,114110=1,114117=1,114120=Use option \"-for_store\" to only occur after validation and option \"-non_trigger\" to set only if non-trigger. Use option \"-create_only\" to apply to new records only or \"-update_only\" to only apply to existing records.,114158=class={class}\nfield={field}\nmodifier={modifier}\nvalue={value}\nevalue=\nfor_store={?-for_store}\nnon_trigger={?-non_trigger}\ncreate_only={?-create_only}\nupdate_only={?-update_only}\nsections=to_store for_store"
pc sys 20120102 Meta 114100 field_value_if_non_null "114101=field_value_if_non_null,114102=field_{class}{field}to_{value_label}if_{tpfield}{tcfield}{tfield}is_non_null,114103=field_value,114104=1,114124=1,114105=1,114135=1,114110=1,114126=1,114142=1,114131=20,114114=1,114117=1,114120=Use option \"-for_store\" to only occur after validation and \"-update_only\" to only apply to existing records.,114158=class={class}\nfield={field}\nvalue={value}\ntfield={tcfield}{tfield}\ntpfield={tpfield}\nfor_store={?-for_store}\nnot_create={?-update_only}\nnot_null=true\nsections=to_store for_store"
pc sys 20120102 Meta 114100 field_value_if_null "114101=field_value_if_null,114102=field_{class}{field}to_{value_label}if_{tpfield}{tcfield}{tfield}is_null,114103=field_value,114104=1,114124=1,114105=1,114135=1,114110=1,114126=1,114142=1,114131=20,114114=1,114117=1,114120=Use option \"-for_store\" to only occur after validation and \"-update_only\" to only apply to existing records.,114158=class={class}\nfield={field}\nvalue={value}\ntfield={tcfield}{tfield}\ntpfield={tpfield}\nfor_store={?-for_store}\nnot_create={?-update_only}\nnot_null=\nsections=to_store for_store"
pc sys 20120102 Meta 114100 field_value_for_enum_item "114101=field_value_for_enum_item,114102=field_{class}{field}to_{value_label}if_{sfield}is_{enum_item},114103=field_value_for_enum_item,114104=1,114124=1,114105=1,114135=1,114110=1,114128=1,114113=1,114198=1,114108=1,114199=1,114109=1,114207=1,114117=1,114120=Field will be set to Value if Source Field is equal to Enum Item.\n\nUse option \"-for_store\" to only occur after validation. Use option \"-create_only\" to apply to new records only or \"-update_only\" to only apply to existing records.,114158=class={class}\nfield={field}\nsfield={sfield}\nvalue={value}\nenum={enum}\nenum_item={enum_item}\nfmandatory={fmandatory}\nfistexttype={fistexttype}\nfor_store={?-for_store}\ncreate_only={?-create_only}\nupdate_only={?-update_only}\nsections=to_store for_store value_will_be_provided"
pc sys 20120102 Meta 114100 field_values_from_updating_graph_parent_source_info "114101=field_values_from_updating_graph_parent_source_info,114102=source_info,114103=n/a,114104=1,114148=1,114124=1,114105=1,114111=50,114168=1,114146=1,114125=1,114137=1,114147=1,114149=1,114151=1,114169=1,114120=Select a Field to be the FK source for value copying to the Source Parent then add field pairs to the field list.,114158=pclass={class}\npsfield={field}\nfield_info={field_pairs}"
pc sys 20120102 Meta 114100 field_values_from_updating_graph_parent_source_field_list "114101=field_values_from_updating_graph_parent_source_field_list,114102=field_pair_list,114103=n/a,114104=1,114146=1,114125=1,114137=1,114167=1,114144=1,114140=115431$115100.301405,301700=field_values_from_updating_graph_parent_source_info,301710=field_pair,114147=1,114151=1"
pc sys 20120102 Meta 114100 field_values_from_updating_graph_parent "114101=field_values_from_updating_graph_parent,114102=field_values_for_{class}when_{child}is_updating,114103=field_values_from_graph_parent,114104=1,114191=1,114138=1,114140=115437$115100.301405,301710=field_values_from_updating_graph_parent_source_info,114120=Choose a Child Relationship to the graph parent that will update this class then click \"Add Source Info\".,114158=class={class}\nsections=to_store"
pc sys 20120102 Meta 114100 filter_field_uid "114101=filter_field_uid,114102=filter_{class}if_{spfield}is_uid,114103=filter_field_uid,114104=1,114125=1,114112=1,114120=Records will be filtered if Source Parent is equal to the uid.,114158=class={class}\nspfield={spfield}\nsections=is_filtered get_always_required_field_names"
pc sys 20120102 Meta 114100 filter_field_value "114101=filter_field_value,114102=filter_{class}if_{field}is_{value_label}[and_]{tfield}[when_]{modifier},114103=filter_field_value,114104=1,114124=1,114105=1,114125=1,114135=1,114110=1,114197=1,114126=1,114117=1,114120=Source Parent can optionally be used to only filter when iterating below the matching graph parent. Modifier and Test Field are optional preconditions.\n\nUse option \"-print_only\" to only apply to printed lists or \"-non_print\" to only apply to non-printed lists.,114158=class={class}\nfield={field}\nvalue={value}\nspfield={spfield}\nmodifier={modifier}\ntfield={tfield}\nperm=\nprint_only={?-print_only}\nnon_print={?-non_print}\nsections=is_filtered get_always_required_field_names"
pc sys 20120102 Meta 114100 filter_field_value_perm "114101=filter_field_value_perm,114102=filter_{class}if_{field}is_{value_label}[when_]{modifier}and_not_{permission},114103=filter_field_value,114104=1,114124=1,114105=1,114125=1,114135=1,114110=1,114136=1,114197=1,114180=1,114117=1,114120=If user does not have Permission then filter if Field is equal to Value. Source Parent can optionally be used to only filter when iterating below the matching graph parent. Modifier is an optional precondition.\n\nUse option \"-print_only\" to only apply to printed lists or \"-non_print\" to only apply to non-printed lists.,114158=class={class}\nfield={field}\nvalue={value}\nperm={permission_id}\nspfield={spfield}\nmodifier={modifier}\ntfield=\nprint_only={?-print_only}\nnon_print={?-non_print}\nsections=is_filtered get_always_required_field_names"
pc sys 20120102 Meta 114100 filter_fk_in_uid_set "114101=filter_fk_in_uid_set,114102=filter_{class}if_{tfield}is_in_{spfield}{scfield},114103=filter_fk_in_uid_set,114104=1,114125=1,114112=1,114121=1,114122=1,114126=1,114114=1,114117=1,114120=Test Field and Source Parent must be a \"user\" relationship and Source Child is expected to be a key set. Use Option \"-var=<varname>\" to use a variable in place of Source Child.,114158=class={class}\nspfield={spfield}\nscfield={scfield}\ntfield={tfield}\nvname={#-var}\nsections=is_filtered get_always_required_field_names"
pc sys 20120102 Meta 114100 filter_non_uid "114101=filter_non_uid,114102=filter_{class}if_{spfield}{scfield}does_not_contain_uid,114103=non_uid_filter,114104=1,114125=1,114112=1,114119=52,114121=1,114122=1,114130=0,114120=Source Child Field is expected to contain a comma separated list of User keys (\"transient_field_from_child_concat\" can be used to create a transient for this purpose).,114158=class={class}\npclass={spclass}\npfield={spfield}\ncfield={scfield}\nsections=is_filtered"
pc sys 20120102 Meta 114100 filter_perm_restricted "114101=filter_perm_restricted,114102=filter_{class}if_{field}is_restricted,114103=filter_perm_restricted,114104=1,114124=1,114105=1,114111=20,114158=class={class}\nfield={field}\nsections=is_filtered get_always_required_field_names"
pc sys 20120102 Meta 114100 filter_security_level "114101=filter_security_level,114102=filter_{class}if_{field}is_insufficient,114103=filter_security_level,114104=1,114124=1,114105=1,114111=20,114158=class={class}\nslevel={field}\nsections=is_filtered get_always_required_field_names"
pc sys 20120102 Meta 114100 for_acyclic "114101=for_acyclic,114102=for_{class}acyclic,114103=acyclic,114104=1,114125=1,114112=1,114119=51,114120=Source Parent is the self relationship parent.,114158=class={class}\nfield={spfield}\nsections=validate"
pc sys 20120102 Meta 114100 for_audit_fields "114101=for_audit_fields,114102=for_{class}audit_fields,114103=audit_fields,114104=1,114124=1,114105=1,114174=1,114125=1,114126=1,114120=Field is the \"Created By\" field\\, Other_Field is \"Created On\"\\, Source_Parent is \"Modified By\" and Test_Field is \"Modified On\".,114158=class={class}\ncusrfield={field}\ncdtmfield={ofield}\nmusrfield={spfield}\nmdtmfield={tfield}\nsections=value_will_be_provided for_store"
pc sys 20120102 Meta 114100 for_calc_interest "114101=for_calc_interest,114102=for_{class}{procedure},114103=interest,114104=1,114124=1,114105=1,114111=4,114174=1,114175=1,114183=1,114184=1,114130=2,114126=1,114114=1,114131=4,114171=1,114106=1,114120=Field is the \"balance\"\\, Other Field is for \"start date\" and Other Field 2 is for \"finish date\". Test Field is the \"interest rate\". Procedure Arg is the \"new calculation date\".,114158=class={class}\nbalance={field}\nrate={tfield}\ncalc_start={ofield}\ncalc_finish={o2field}\nsections=procedure"
pc sys 20120102 Meta 114100 for_call_procs "114101=for_call_procs,114102=for_{class}{procedure}call_{oprocedure}then_{o2procedure}[if_]{tfield},114103=for_call_procs,114104=1,114174=1,114183=1,114135=1,114171=1,114106=1,114204=1,114187=1,114188=1,114126=1,114117=1,114120=Procedure will call Other Procedure then Other Procedure 2. Procedure Arg is an optional output argument and if provided it is passed to both other procedure calls unless Value is provided in which case it will be assigned to it. Test Field is an optional precondition fall calling the other two procedures. If Other Field and Other Field 2 are provided then the current record will be updated with Other Field being set to the value of Other Field 2.\n\nUse option \"-use_trans\" to surround calls with a transaction and option \"-skip_restore\" to not call the other procedures when performing a storage restore. Use option \"-session_var=<varname>\" as a precondition to only call the other procedres if the named session variable is not empty.,114158=class={class}\nfname={ofield}\nfvalue={o2field}\nprocedure={procedure}\noutput_arg={procedure_arg}\nprocedure1={oprocedure}\nprocedure2={o2procedure}\nmessage={value}\ntfield={tfield}\nuse_trans={?-use_trans}\nskip_restore={?-skip_restore}\nsession_var={#-session_var}\nsections=procedure,114163=1,114166=message={value}"
pc sys 20120102 Meta 114100 for_clone "114101=for_clone,114102=for_{class}clone_in_{procedure},114103=for_clone,114104=1,114124=1,114105=1,114174=1,114183=1,114128=1,114125=1,114121=1,114176=1,114135=1,114110=1,114171=1,114106=1,114132=1,114126=1,114117=1,114120=Field will be set to Value for the clone. Other Field is an optional field to update from the record being cloned (unless using the \"-clone_only\" option) with Other Field 2 being the value it will be set to. Test Field is optionally provided to identify a relationship parent for clearing. The Procedure is where the \"clone\" implementation will be placed and the Procedure Arg (unless using the \"-proc_arg_is_key_suffix\" option) must be a string \"output\" argument so a success message can be returned. If Source Field is provided then it is for \"fields and values\" with it being set along with a \"key info\" session variable and Other Source child if provided will then assigned via an \"extra info\" session variable (no actual clone record will be created when using this approach).\n\nUse option \"-clone_only\" for Other Field and Other Field 2 to apply to the clone rather than the record being cloned. Use option \"-use_proc_name\" to use the Procedure name as the output prefix and use option \"-key_suffix=<suffix>\" to use a specific key suffix for the clone record or \"-proc_arg_is_key_suffix\" to use the Procedure Arg as the key suffix for the clone record. Source Parent is an optional value to be set in the clone by fetching the record that matches the Source Child for the Procedure Arg value (as an alternative key). Use option \"-use_trans\" if wanting to include a surrounding transaction.,114158=class={class}\nfield={field}\nvalue={value_literal}\nsfield={ofield}\nsvalue={o2field}\nfldval={sfield}\nscfield={scfield}\nextra={oscfield}\nspfield={spfield}\nspclass={spclass}\ntfield={tfield}\nprocedure={procedure}\nproc_arg={procedure_arg}\nclone_only={?-clone_only}\nkey_suffix={#-key_suffix}\nproc_arg_is_key_suffix={?-proc_arg_is_key_suffix}\nuse_proc_arg_for_source=true\nuse_trans={?-use_trans}\nuse_proc_name={?-use_proc_name}\nsections=procedure"
pc sys 20120102 Meta 114100 for_clone_multi "114101=for_clone_multi,114102=for_{class}clone_multi_in_{procedure},114103=for_clone,114104=1,114124=1,114105=1,114174=1,114183=1,114128=1,114125=1,114112=1,114121=1,114176=1,114122=1,114135=1,114110=1,114171=1,114106=1,114132=1,114126=1,114117=1,114120=Field will be set to Value for the clone. Other Field is an optional field to update from the record being cloned (unless using the \"-clone_only\" option) with Other Field 2 being the value it will be set to. Source Parent/Child specify the clone \"counter\" to ensure unique keys and Test Field is optionally provided to identify a relationship parent for clearing. The Procedure is where the \"clone\" implementation will be placed and the Procedure Arg (unless using the \"-proc_arg_is_key_suffix\" option) must be a string \"output\" argument so a success message can be returned. If Source Field is provided then it is for \"fields and values\" with it being set along with a \"key info\" session variable and Other Source child if provided will then assigned via an \"extra info\" session variable (no actual clone record will be created when using this approach).\n\nUse option \"-clone_only\" for Other Field and Other Field 2 to apply to the clone rather than the record being cloned. Use option \"-use_proc_name\" to use the Procedure name as the output prefix and use option \"-key_suffix=<suffix>\" to use a specific key suffix for the clone record or \"-proc_arg_is_key_suffix\" to use the Procedure Arg as the key suffix for the clone record. Use option \"-use_trans\" if wanting to include a surrounding transaction.,114158=class={class}\nfield={field}\nvalue={value_literal}\nsfield={ofield}\nsvalue={o2field}\nfldval={sfield}\nscfield={scfield}\nextra={oscfield}\nspfield={spfield}\nspclass={spclass}\ntfield={tfield}\nprocedure={procedure}\nproc_arg={procedure_arg}\nclone_only={?-clone_only}\nkey_suffix={#-key_suffix}\nproc_arg_is_key_suffix={?-proc_arg_is_key_suffix}\nuse_proc_arg_for_source=\nuse_trans={?-use_trans}\nuse_proc_name={?-use_proc_name}\nsections=procedure"
pc sys 20120102 Meta 114100 for_destroy "114101=for_destroy,114102=for_{class}{procedure},114103=for_destroy,114104=1,114171=1,114106=1,114120=Procedure is for \"destroy\".,114158=class={class}\nprocedure={procedure}\nsections=procedure"
pc sys 20120102 Meta 114100 for_destroy_clone "114101=for_destroy_clone,114102=for_{class}{procedure},114103=for_destroy_clone,114104=1,114124=1,114174=1,114171=1,114132=1,114106=1,114117=1,114120=Field is an optional field to be set to Other Field's value. Procedure is for \"destroy\" and Procedure Arg must be a string \"output\" argument so a success message can be returned.\n\nUse option \"-key_suffix=<suffix>\" to use a specific key suffix for the clone record.,114158=class={class}\nfield={field}\nsfield={ofield}\nprocedure={procedure}\noutput_arg={procedure_arg}\nkey_suffix={#-key_suffix}\nsections=procedure"
pc sys 20120102 Meta 114100 for_directed_graph "114101=for_directed_graph,114102=for_{class}directed_graph,114103=folder,114104=1,114125=1,114112=1,114119=51"
pc sys 20120102 Meta 114100 for_each "114101=for_each,114102=for_{class}{procedure}call_{oprocedure}for_each_{field}item,114103=for_each,114104=1,114124=1,114105=1,114135=1,114110=1,114171=1,114106=1,114187=1,114111=0,114117=1,114120=Procedure will call Other Procedure for each item in Field found separated by Value.\n\nUse option \"-func=<func>\" to transform the item value and option \"-use_trans\" if wanting a surrounding transaction.,114158=class={class}\nfield={field}\nseparator={value}\nprocedure={procedure}\noprocedure={oprocedure}\nfunc={#-func}\nuse_trans={?-use_trans}\nsections=procedure"
pc sys 20120102 Meta 114100 for_each_record "114101=for_each_record,114102=for_{class}{procedure}call_{oprocedure}for_each_record[_where_]{field}[is_]{value_label}[if_]{tfield},114103=for_each_record,114104=1,114124=1,114135=1,114174=1,114171=1,114106=1,114187=1,114126=1,114117=1,114120=Procedure will call Other Procedure for each record. Field is an optional restriction field with Value being the value to restrict it to and Other Field is an optional ordering field. Test Field is an optional precondition.\n\nUse option \"-use_trans\" if wanting a surrounding transaction and option \"-var=<varname>\" to set object variable \"<varname>\" to true. Use option \"-value=<expression>\" to override the Value literal with an expression and use option \"-quiet\" to suppress logging of scripts for individual records. Use option \"-reverse\" to iterate in the reverse order. If using Test Field then use option \"-else_break\" to terminate iteration when precondition test fails. Use option \"-skip_restore\" to not execute when performing a storage restore.,114158=class={class}\nrfield={field}\nrvalue={value}\nofield={ofield}\nprocedure={procedure}\noprocedure={oprocedure}\ntfield={tfield}\nuse_trans={?-use_trans}\nvar={#-var}\nvalue={#-value}\nquiet={?-quiet}\nreverse={?-reverse}\nelse_break={?-else_break}\nskip_restore={?-skip_restore}\nsections=procedure"
pc sys 20120102 Meta 114100 for_file_attachment "114101=for_file_attachment,114102=for_{class}file_attachment_is_{field},114103=file_attachment,114104=1,114124=1,114105=1,114128=1,114120=Field must be a \"file\" field. Source Field is an optional \"size\" field.,114158=class={class}\nfield={field}\nfield_id={field_id}\nsfield={sfield}\nsections=at_create for_store for_destroy"
pc sys 20120102 Meta 114100 for_file_content "114101=for_file_content,114102=for_{class}{sfield}file,114103=file_content,114104=1,114124=1,114105=1,114128=1,114113=1,114120=Field is the \"file\" and Source Field is the \"content\".,114158=class={class}\nfield={field}\nsfield={sfield}\nsections=for_store"
pc sys 20120102 Meta 114100 for_file_link "114101=for_file_link,114102=for_{class}{field}file_link,114103=file_link,114104=1,114124=1,114105=1,114125=1,114126=1,114114=1,114128=1,114121=1,114123=1,114135=1,114110=1,114117=1,114120=Field is the \"file link\" and Test Field is the file name with Source Field/Child as an optional prefix. Value is the \"file extension\".\n\nUse option \"-append_to_ext=<extra>\" to append extra text to the file extension.,114158=class={class}\nfield={field}\nfield1={tfield}\nfield2={sfield}{scfield}\npfield2={spfield}\next={value}\nappend_to_ext={#-append_to_ext}\nsections=for_store for_destroy"
pc sys 20120102 Meta 114100 for_file_link_demo "114101=for_file_link_demo,114102=for_{class}{field}file_link_demo,114103=file_link_demo,114104=1,114124=1,114105=1,114135=1,114110=1,114120=Field is the \"file\" and Value is one or more (space separated) \"file extensions\".\n\nNote that this specification is intended only to create file links for populating demo attached file records.,114158=class={class}\nfield={field}\nexts={value}\nsections=for_store"
pc sys 20120102 Meta 114100 for_move_children_from "114101=for_move_children_from,114102=for_{class}{procedure}move_children_from_{child},114103=for_move_children,114104=1,114135=1,114171=1,114106=1,114191=1,114138=1,114140=115432$115100.301405,301710=for_move_children_cinfo,114120=Value is an optional suffix for the record key.\n\nAfter saving click \"Add Child Info\" to continue.,114158=class={class}\nprocedure={procedure}\nchildren={child}\nmove_from=true\nkey_suffix={value}\nsections=procedure"
pc sys 20120102 Meta 114100 for_move_children_to "114101=for_move_children_to,114102=for_{class}{procedure}move_children_to_{child},114103=for_move_children,114104=1,114135=1,114171=1,114106=1,114191=1,114138=1,114140=115432$115100.301405,301710=for_move_children_cinfo,114120=Value is an optional suffix for the record key.\n\nAfter saving click \"Add Child Info\" to continue.,114158=class={class}\nprocedure={procedure}\nchildren={child}\nmove_from=\nkey_suffix={value}\nsections=procedure"
pc sys 20120102 Meta 114100 for_ordered_move "114101=for_ordered_move,114102=for_{class}{field},114103=move_up_and_down,114104=1,114124=1,114105=1,114125=1,114111=0,114140=115439$115100.301405,301710=for_ordered_move_up,114117=1,114120=Field is the \"order\" field and Source Parent is an optional parent to be updated after moving.\n\nUse option \"-minimal\" to force the use of \"minimal\" update operations.\n\nAfter saving click \"Add Arg 1\" to continue.,114158=class={class}\nfield={field}\nminimal={?-minimal}\nupdate_parent={spfield}\nsections=procedure get_always_required_field_names"
pc sys 20120102 Meta 114100 for_send_email_notification "114101=for_send_email_notification,114102=for_{class}{spfield}email_notification,114103=for_send_email_notification,114104=1,114124=1,114105=1,114135=1,114110=1,114174=1,114171=1,114183=1,114106=1,114128=1,114113=1,114125=1,114112=1,114126=1,114114=1,114140=115437$115100.301405,301710=for_send_email_notification_sinfo,114120=Field is for \"subject\" and Other Field a boolean to indicate that content is HTML. Other Field 2 is an optional \"from\" user. Value is the notification subject text (use \"@subject\"\\ as a replacement). Procedure is the source code injection point. Source Field is the message content and Source Parent is the \"user\" FK. Test Field is for \"has been notified\".\n\nAfter saving click \"Add Source Info\" to continue.,114158=subject={value}\nfield={field}\nofield={ofield}\no2field={o2field}\nsfield={sfield}\nspfield={spfield}\ntfield={tfield}\nprocedure={procedure}\nsections=procedure,114163=1,114166=subject={value}"
pc sys 20120102 Meta 114100 for_tag "114101=for_tag,114102=for_{class}tag,114103=for_tag,114104=1,114124=1,114105=1,114111=0,114174=1,114175=1,114125=1,114112=1,114121=1,114176=1,114171=1,114106=1,114208=1,114187=1,114191=1,114138=1,114140=115432$115100.301405,301710=for_tag_cinfo,114146=1,114120=Field is for \"actions\" and Other Field is for \"untag key\". Procedure is for \"tag item\" and Other Procedure is for \"untag item\". Source Parent is for \"tag\" and Source Child is optionally for \"user\" and Other Source Child is optionally for \"group\". Child Relationship is for \"tags\".\n\nAfter saving click \"Add Child Info\" to continue.,114158=actions={field}\nuntag_key={ofield}\ntag_proc={procedure}\nuntag_proc={oprocedure}\ntag={spfield}\ntag_user={scfield}\ntag_group={oscfield}\ntags={child}\ntag_class={cclass}\nsections=procedure after_fetch for_store"
pc sys 20120102 Meta 114100 gen_bulk "114101=gen_bulk,114102=gen_bulk_script_for_{class}{procedure},114103=gen_script,114104=1,114135=1,114171=1,114106=1,114120=Value is an optional \"log comment\" and Procedure along with module and class will be name of the .csv file.,114158=class={class}\nclass_id={class_id}\ncomment={value}\nprocedure={procedure}\nmodel={model}\nmodel_id={model_id}\nscript={model}_{class}_{procedure}.cin\nsections=unused"
pc sys 20120102 Meta 114100 gen_clone "114101=gen_clone,114102=gen_clone_script_for_{class}{procedure},114103=gen_script,114104=1,114135=1,114171=1,114106=1,114120=Value is an optional \"log comment\" and Procedure will be \"executed\" in order to create a new record via the clone script.,114158=class={class}\nclass_id={class_id}\ncomment={value}\nprocedure={procedure}\nmodel={model}\nmodel_id={model_id}\nscript={model}_{class}_{procedure}.cin\nsections=unused"
pc sys 20120102 Meta 114100 gen_create "114101=gen_create,114102=gen_create_script_for_{class}{procedure},114103=gen_script,114104=1,114135=1,114171=1,114106=1,114120=Value is an optional \"log comment\" and Procedure will be \"executed\" in order to create a new record via the create script.,114158=class={class}\nclass_id={class_id}\ncomment={value}\nprocedure={procedure}\nmodel={model}\nmodel_id={model_id}\nscript={model}_{class}_{procedure}.cin\nsections=unused"
pc sys 20120102 Meta 114100 gen_execute "114101=gen_execute,114102=gen_execute_script_for_{class}{procedure},114103=gen_script,114104=1,114135=1,114171=1,114106=1,114117=1,114120=Value is an optional \"log comment\" and Procedure is to be \"executed\".\n\nUse Option \"-auto\" for auto scheduled scripts which should be combined with \"-time=<time_or_range>\" and \"-cycle=<cycle_period>\" with optionally \"-exclude=<exclude_days>\"\\, \"-start=<start_date>\" and \"-finish=<finish_date>\".,114158=class={class}\nclass_id={class_id}\ncomment={value}\nprocedure={procedure}\nprocedure_id={procedure_id}\nmodel={model}\nmodel_id={model_id}\nis_auto={?-auto}\ntime={#-time}\nstart={#-start}\nfinish={#-finish}\ncycle={#-cycle}\nexclude={#-exclude}\nscript={model}_{class}_{procedure}.cin\nsections=unused"
pc sys 20120102 Meta 114100 gen_pdf_child_list "114101=gen_pdf_child_list,114102=gen_{class}child_{child}pdf_list_for_{procedure},114103=gen_script,114104=1,114135=1,114110=1,114171=1,114106=1,114191=1,114138=1,114140=115432$115100.301405,301710=gen_pdf_child_list_cinfo,114120=Value is the PDF \"list ext\"\\, Procedure is for \"generate\" and Child Relationship for the child list itself.\n\nAfter saving click \"Add Child Info\" to continue.,114158=class={class}\nlist_ext={value}\ngen_proc={procedure}\nchild={child}\ncclass={cclass}\nmodel={model}\nscript={model}_{class}_{procedure}.cin\nvars={model}_{cclass}.{value}.pdf.vars.xrep\nsections=unused"
pc sys 20120102 Meta 114100 home_message_stats "114101=home_message_stats,114102=home_message,114103=home_message_stats,114104=1,114125=1,114140=115433$115100.301405,301710=home_message_secondary,114163=1,114120=Class is the primary source for statistics with Source Parent being an optional secondary source (typically the primary source would be the \"user\" and the secondary the \"group\").,114158=type=stats\ncommand={model}_Home_Message\ncmd_args=-p=$perms $user\nprimary_class={class}\nsecondary_class={spfield},114165=secondary_stats1_cclass=\nprimary_stats1_cfield=\nprimary_stats1_class1=\nprimary_stats1_field1=\nprimary_stats1_value1=\nprimary_stats1_class2=\nprimary_stats1_field2=\nprimary_stats1_value2=\nprimary_stats2_cclass=\nprimary_stats2_cfield=\nprimary_stats2_perm=\nprimary_stats2_class1=\nprimary_stats2_field1=\nprimary_stats2_value1=\nprimary_stats2_class2=\nprimary_stats2_field2=\nprimary_stats2_value2=\nsecondary_perm=\nsecondary_stats1_cfield=\nsecondary_stats1_class1=\nsecondary_stats1_field1=\nsecondary_stats1_value1=\nsecondary_stats1_class2=\nsecondary_stats1_field2=\nsecondary_stats1_value2=\nsecondary_stats2_cclass=\nsecondary_stats2_cfield=\nsecondary_stats2_perm=\nsecondary_stats2_class1=\nsecondary_stats2_field1=\nsecondary_stats2_value1=\nsecondary_stats2_class2=\nsecondary_stats2_field2=\nsecondary_stats2_value2="
pc sys 20120102 Meta 114100 home_message_primary "114101=home_message_primary,114102=primary,114103=n/a,114104=1,114139=1,114146=1,301700=home_message_stats,114140=115434$115100.301405,301710=home_message_stats_1,114147=1,114151=1,114164=primary"
pc sys 20120102 Meta 114100 home_message_top_n "114101=home_message_top_n,114102=home_message,114103=home_message_top_n,114104=1,114124=1,114105=1,114128=1,114113=1,114135=1,114110=1,114120=Field is what will be output and Source Field is used for ordering. Value is the number of records to output.,114158=type=top_n\nlimit={value}\nclass={class}\nfield={field}\nofield={sfield}\ncommand={model}_{class}_Home_Message\ncmd_args=-p=$perms $user"
pc sys 20120102 Meta 114100 loop_do_while "114101=loop_do_while,114102=loop_{class}{procedure}calls_{oprocedure}while_{field},114103=loop_do_while,114104=1,114124=1,114105=1,114171=1,114106=1,114187=1,114111=30,114120=Procedure calls Other Procedure and will continue while Field scalar is true.,114158=class={class}\nfield={field}\nprocedure={procedure}\noprocedure={oprocedure}\nsections=procedure"
pc sys 20120102 Meta 114100 loop_for_int "114101=loop_for_int,114102=loop_{class}{procedure}calls_{oprocedure}{field}times,114103=loop_for_int,114104=1,114124=1,114105=1,114171=1,114106=1,114187=1,114111=5,114120=Procedure will call Other Procedure Field times.,114158=class={class}\nfield={field}\nprocedure={procedure}\noprocedure={oprocedure}\nsections=procedure"
pc sys 20120102 Meta 114100 loop_while_do "114101=loop_while_do,114102=loop_{class}{procedure}while_{field}calls_{oprocedure},114103=loop_while_do,114104=1,114124=1,114105=1,114171=1,114106=1,114187=1,114111=30,114120=Procedure calls Other Procedure while Field scalar is true.,114158=class={class}\nfield={field}\nprocedure={procedure}\noprocedure={oprocedure}\nsections=procedure"
pc sys 20120102 Meta 114100 modifier_date_alert "114101=modifier_date_alert,114102=modifier_{class}{modifier}if_{field}is_within_{value_label},114103=modifier_date_notification,114104=1,114124=1,114105=1,114197=1,114107=1,114111=2,114135=1,114110=1,114117=1,114120=Use option \"-annual\" for an annual event.,114158=class={class}\nfield={field}\nmodifier={modifier}\nperiod={value_leftpart}\ntype={value_rightpart}\nannual={?-annual}\nsections=get_state get_always_required_field_names"
pc sys 20120102 Meta 114100 modifier_datetime_was_prior "114101=modifier_datetime_was_prior,114102=modifier_{class}{modifier}if_{field}was_prior_to_{value_label}[and_]{tfield}[is_]{tvalue},114103=modifier_past_date_time,114104=1,114124=1,114105=1,114111=41,114197=1,114107=1,114126=1,114135=1,114110=1,114115=1,114120=Test Field [== Test Value] is an optional precondition. Use Value \"now\" or \"today\" for current comparison or provide a number and a type (e.g. 3 hours).,114158=class={class}\ndfield={field}\ndfprim={primitive}\nvalue={value}\nmodifier={modifier}\ntfield={tfield}\ntvalue={tvalue}\nfuture=\nsections=get_state get_always_required_field_names"
pc sys 20120102 Meta 114100 modifier_datetime_will_follow "114101=modifier_datetime_will_follow,114102=modifier_{class}{modifier}if_{field}will_be_after_{value_label}[and_]{tfield}[is_]{tvalue},114103=modifier_past_date_time,114104=1,114124=1,114105=1,114111=41,114197=1,114107=1,114126=1,114135=1,114110=1,114115=1,114120=Test Field [== Test Value] is an optional precondition. Use Value \"now\" or \"today\" for current comparison or provide a number and a type (e.g. 3 hours).,114158=class={class}\ndfield={field}\ndfprim={primitive}\nvalue={value}\nmodifier={modifier}\ntfield={tfield}\ntvalue={tvalue}\nfuture=true\nsections=get_state get_always_required_field_names"
pc sys 20120102 Meta 114100 modifier_field_changed "114101=modifier_field_changed,114102=modifier_{class}{modifier}if_{sfield}has_changed[_and_]{tpfield}{tfield}[is_]{tvalue},114103=modifier_field_changed,114104=1,114128=1,114113=1,114197=1,114107=1,114126=1,114115=1,114142=1,114120=Test Field/Child [== Test Value] is an optional extra test condition.,114158=field={sfield}\nmodifier={modifier}\ntfield={tfield}{tcfield}\ntpfield={tpfield}\ntvalue={tvalue}\nnot_changed=\nsections=get_state get_always_required_field_names"
pc sys 20120102 Meta 114100 modifier_field_compare "114101=modifier_field_compare,114102=modifier_{class}{modifier}if_{field}{tvalue}{spfield}{scfield}{sfield}[_and_]{tpfield}{tfield},114103=modifier_field_compare,114104=1,114124=1,114105=1,114128=1,114125=1,114121=1,114123=1,114154=1,114197=1,114107=1,114126=1,114115=1,114142=1,114120=Field is compared to Source Field/Child with Test Value being one of \"eq\"\\, \"neq\"\\, \"lt\"\\, \"gt\"\\, \"lteq\"\\ or \"gteq\". Test Field/Child is an optional precondition.,114158=field={field}\nsfield={scfield}{sfield}\npfield={spfield}\nmodifier={modifier}\ntfield={tfield}{tcfield}\ntpfield={tpfield}\nop={tvalue}\nsections=get_state get_always_required_field_names"
pc sys 20120102 Meta 114100 modifier_field_non_null "114101=modifier_field_non_null,114102=modifier_{class}{modifier}if_{spfield}{scfield}{sfield}is_non_null[_and_]{tpfield}{tfield}[is_]{tvalue},114103=modifier_field_null,114104=1,114128=1,114125=1,114121=1,114123=1,114154=1,114197=1,114107=1,114117=1,114126=1,114115=1,114142=1,114120=Test Field/Child [== Test Value] is an optional extra test condition. Use option \"-not_new\" to prevent usage in a new record.,114158=field={scfield}{sfield}\npfield={spfield}\nscclass={scclass}\nmodifier={modifier}\ntfield={tfield}{tcfield}\ntpfield={tpfield}\ntvalue={tvalue}\nnot_dflt={?-not_new}\nis_neg=true\nsections=includes get_state get_always_required_field_names"
pc sys 20120102 Meta 114100 modifier_field_not_changed "114101=modifier_field_not_changed,114102=modifier_{class}{modifier}if_{sfield}has_not_changed[_and_]{tpfield}{tfield}[is_]{tvalue},114103=modifier_field_changed,114104=1,114128=1,114113=1,114197=1,114107=1,114126=1,114115=1,114142=1,114120=Test Field/Child [== Test Value] is an optional extra test condition.,114158=field={sfield}\nmodifier={modifier}\ntfield={tfield}{tcfield}\ntpfield={tpfield}\ntvalue={tvalue}\nnot_changed=true\nsections=get_state get_always_required_field_names"
pc sys 20120102 Meta 114100 modifier_field_null "114101=modifier_field_null,114102=modifier_{class}{modifier}if_{spfield}{scfield}{sfield}is_null[_and_]{tpfield}{tfield}[is_]{tvalue},114103=modifier_field_null,114104=1,114128=1,114125=1,114121=1,114123=1,114154=1,114197=1,114107=1,114117=1,114126=1,114115=1,114142=1,114120=Test Field/Child [== Test Value] is an optional extra test condition. Use option \"-not_new\" to prevent usage in a new record.,114158=field={scfield}{sfield}\npfield={spfield}\nscclass={scclass}\nmodifier={modifier}\ntfield={tfield}{tcfield}\ntpfield={tpfield}\ntvalue={tvalue}\nnot_dflt={?-not_new}\nis_neg=\nsections=includes get_state get_always_required_field_names"
pc sys 20120102 Meta 114100 modifier_field_value "114101=modifier_field_value,114102=modifier_{class}{modifier}if_{spfield}{scfield}{sfield}is_{value_label}[and_]{tpfield}{tfield}[is_]{tvalue},114103=modifier_field_value,114104=1,114128=1,114121=1,114125=1,114123=1,114197=1,114107=1,114135=1,114110=1,114126=1,114115=1,114117=1,114179=1,114142=1,114120=Test Field/Child [== Test Value] is an optional extra test condition. Use option \"-not_new\" to prevent usage in a new record or option \"-new_only\" to only apply to new records. Use option \"-convert=<convert func>\" to convert the Source Field value.\n\nValue can be prefixed with a comparision op followed by a space where op can be one of \"eq\"\\, \"neq\"\\, \"lt\"\\, \"gt\"\\, \"lteq\" or \"gteq\".,114158=class={class}\nfield={sfield}{scfield}\npfield={spfield}\nmodifier={modifier}\ntfield={tfield}{tcfield}\ntpfield={tpfield}\ntvalue={tvalue}\ntestop={value_leftpart}\nvalue={value_rightpart}\nevalue=\nnot_dflt={?-not_new}\nnew_only={?-new_only}\nnot_eq=\ncvt_func={#-convert}\nfistexttype={fistexttype}\nsections=get_state get_always_required_field_names"
pc sys 20120102 Meta 114100 modifier_field_value_enum "114101=modifier_field_value_enum,114102=modifier_{class}{modifier}if_{field}is_{value_label}{enum_item}[and_]{tpfield}{tcfield}{tfield}[is_]{tvalue},114103=modifier_field_value,114104=1,114124=1,114105=1,114135=1,114197=1,114107=1,114198=1,114108=1,114199=1,114109=1,114126=1,114115=1,114162=1,114117=1,114142=1,114120=Test Field/Child [== Test Value] is an optional extra test condition. Use option \"-not_new\" to prevent usage in a new record or option \"-new_only\" to only apply to new records.\n\nValue is an optional comparision op which can be one of \"eq\"\\, \"neq\"\\, \"lt\"\\, \"gt\"\\, \"lteq\" or \"gteq\",114158=class={class}\nfield={field}\npfield=\nmodifier={modifier}\ntfield={tfield}{tcfield}\ntpfield={tpfield}\ntvalue={tvalue}\ntestop={value}\nvalue={enum_value}\nevalue={enum_item}\nnot_dflt={?-not_new}\nnew_only={?-new_only}\nnot_eq=\ncvt_func=\nfistexttype={fistexttype}\nsections=get_state get_always_required_field_names"
pc sys 20120102 Meta 114100 modifier_from_not_other_mod "114101=modifier_from_not_other_mod,114102=modifier_{class}{modifier}if_not_{omodifier},114103=modifier_from_not_other_mod,114104=1,114197=1,114107=1,114202=1,114120=Modifier is set true if Other Modifier is not.,114158=modifier={modifier}\nomodifier={omodifier}\nsections=get_state"
pc sys 20120102 Meta 114100 modifier_from_other_mods "114101=modifier_from_other_mods,114102=modifier_{class}{modifier}if_{omodifier}{value}{o2modifier},114103=modifier_from_other_mods,114104=1,114135=1,114110=1,114197=1,114107=1,114202=1,114203=1,114120=Value being set to either \"and\" or \"or\".,114158=modifier={modifier}\nlmodifier={omodifier}\nrmodifier={o2modifier}\nop={value}\nsections=get_state"
pc sys 20120102 Meta 114100 modifier_has_variable "114101=modifier_has_variable,114102=modifier_{class}{modifier}if_has_variable_{value_label},114103=modifier_has_variable,114104=1,114197=1,114107=1,114135=1,114110=1,114117=1,114120=Modifier will be set if the Value variable is not empty.\n\nUse option \"-session_var\" to check for a session variable rather than an object variable.,114158=class={class}\nmodifier={modifier}\nvalue={value}\nsession_var={?-session_var}\nsections=get_state"
pc sys 20120102 Meta 114100 modifier_key_not_value "114101=modifier_key_not_value,114102=modifier_{class}{modifier}if_key_is_not_{value_label},114103=modifier_key_value,114104=1,114197=1,114107=1,114135=1,114110=1,114158=class={class}\nmodifier={modifier}\nvalue={value_literal}\nextra=\nnot_eq=true\nsections=get_state"
pc sys 20120102 Meta 114100 modifier_key_value "114101=modifier_key_value,114102=modifier_{class}{modifier}if_key_is_{value_label},114103=modifier_key_value,114104=1,114197=1,114107=1,114135=1,114110=1,114117=1,114120=Use option \"-extra={edit|delete}\" to additionally protect the record from editing or deleting.,114158=class={class}\nmodifier={modifier}\nvalue={value_literal}\nextra={#-extra}\nnot_eq=\nsections=get_state"
pc sys 20120102 Meta 114100 modifier_permission "114101=modifier_permission,114102=modifier_{class}{modifier}if_not_{permission}[or_uid_is_not_]{spfield},114103=modifier_permission,114104=1,114197=1,114107=1,114125=1,114136=1,114180=1,114117=1,114120=Source Parent is for an optional \"user\" check. Use option \"-admin_always\" or \"-admin_never\" for modifier to always/never be set for admin.,114158=class={class}\nmodifier={modifier}\nufield={spfield}\npermission={permission}\npermission_id={permission_id}\nadmin_always={?-admin_always}\nadmin_never={?-admin_never}\nremove=\nsections=get_state get_always_required_field_names"
pc sys 20120102 Meta 114100 modifier_permission_remove "114101=modifier_permission_remove,114102=modifier_remove_{class}{modifier}if_{permission}[and_uid_is_]{spfield},114103=modifier_permission,114104=1,114197=1,114107=1,114125=1,114136=1,114180=1,114117=1,114120=Source Parent is for an optional \"user\" check. Use option \"-admin_always\" or \"-admin_never\" for modifier to always/never be removed for admin.,114158=class={class}\nmodifier={modifier}\nufield={spfield}\npermission={permission}\npermission_id={permission_id}\nadmin_always={?-admin_always}\nadmin_never={?-admin_never}\nremove=true\nsections=get_state get_always_required_field_names"
pc sys 20120102 Meta 114100 permit_ignore_uneditable "114101=permit_ignore_uneditable,114102=permit_ignore_uneditable_{class}[if_]{tfield},114103=permit_ignore_uneditable,114104=1,114126=1,114117=1,114120=Test Field is an optional precondition.\n\nUse option \"-admin_always\" to ignore the precondition test for admin and Option \"-var=<varname>\" to use or also use a variable as a precondition.,114158=class={class}\ntfield={tfield}\nadmin_always={?-admin_always}\nvar={#-var}\nsections=get_state get_always_required_field_names"
pc sys 20120102 Meta 114100 permit_update_always "114101=permit_update_always,114102=permit_{class}update_always_for_listed_fields,114103=permit_update_always,114104=1,114120=Update will always be permitted if field values provided are only for those fields listed.,114158=field_list={fields}\nsections=get_state get_always_required_field_names"
pc sys 20120102 Meta 114100 permit_update_always_field_list "114101=permit_update_always_field_list,114102=field_list,114103=n/a,114139=1,114140=115430$115100.301405,301700=permit_update_always,301710=field,114147=1"
pc sys 20120102 Meta 114100 permit_user_ignore_uneditable "114101=permit_user_ignore_uneditable,114102=permit_ignore_uneditable_if_{class}{spfield}{scfield}{tvalue}{tpfield}{tcfield}{tfield}[and_]{ofield},114103=permit_user_ignore_uneditable,114125=1,114174=1,114112=1,114121=1,114122=1,114104=1,114142=1,114126=1,114115=1,114117=1,114120=Source Parent must be to a \"user\" FK and Source Child is the \"user\" field that will be checked in the comparison with Test Field/Child according to Test Value being one of \"eq\"\\, \"neq\"\\, \"lt\"\\, \"gt\"\\, \"lteq\"\\ or \"gteq\". Other Field is an optional additional extra precondition.\n\nUse option \"-var=<varname>\" to use a variable in place of Source Parent/Child if a value for it was provided.,114158=class={class}\nactions={field}\nspclass={spclass}\nspfield={spfield}\nscfield={scfield}\ntfield={tfield}{tcfield}\ntpfield={tpfield}\nop={tvalue}\notfield={ofield}\nvname={#-var}\nprompt={?-prompt}\nback_for_view={?-back_for_view}\nsections=get_state after_fetch get_always_required_field_names"
pc sys 20120102 Meta 114100 restrict_destroy "114101=restrict_destroy,114102=restrict_destroy_for_{class}if_{sfield}{spfield}{scfield}is_{value_label},114103=destroy_restrict,114104=1,114128=1,114125=1,114121=1,114123=1,114154=1,114135=1,114110=1,114117=1,114120=Use option \"-allow_internal\" to permit application internal destroy operations.,114158=class={class}\nfield={sfield}{scfield}\npfield={spfield}\nvalue={value}\nallow_internal={?-allow_internal}\nsections=can_destroy"
pc sys 20120102 Meta 114100 restrict_paging "114101=restrict_paging,114102=restrict_paging_for_{class}to_{value_label}if_{tfield},114103=restrict_paging,114104=1,114124=1,114105=1,114135=1,114110=1,114126=1,114114=1,114120=Field is for \"ordering\"\\, Value is the \"variable\" to page from and Test Field is the condition for using it.,114158=class={class}\npage_field={field}\nvariable={value}\ntfield={tfield}\nsections=add_extra_paging_info"
pc sys 20120102 Meta 114100 restrict_protect "114101=restrict_protect,114102=restrict_protect_{class}if_{spfield}{scfield}{sfield}[and_not_]{tfield}[and_not_]{permission},114103=restrict_protect,114104=1,114128=1,114125=1,114121=1,114123=1,114126=1,114136=1,114117=1,114120=Source Field/Child is a conditional which will be ignored if the optional Test_Field condition is true or the user has the optional Permission. Use option \"-admin_always\" to ignore for admin and \"-no_ignore\" to prevent state ignoring. Use option \"-scope={edit|delete}\" to restrict protection to edit/delete only and \"-unactionable\" to also restrict actions. Use Option \"-changing\" if state is being changed by another session.,114158=field={scfield}{sfield}\npfield={spfield}\ntfield={tfield}\npermission={permission}\npermission_id={permission_id}\nscope={#-scope}\nadmin_always={?-admin_always}\nno_ignore={?-no_ignore}\nunactionable={?-unactionable}\nchanging={?-changing}\nsections=get_state get_always_required_field_names"
pc sys 20120102 Meta 114100 restrict_protect_equal "114101=restrict_protect_equal,114102=restrict_protect_{class}if_{spfield}{scfield}{sfield}is_{value_label},114103=protect_equal,114104=1,114128=1,114125=1,114121=1,114123=1,114154=1,114179=1,114135=1,114110=1,114117=1,114120=Use option \"-scope={edit|delete}\" to restrict protection to edit/delete only and \"-changing\" if state is being changed by another process. Use option \"-admin_always\" to ignore for admin and \"-scripts_always\" to ignore for internal scripts.,114158=class={class}\nfield={sfield}{scfield}\npfield={spfield}\nvalue={value_literal}\nlabel=\nscope={#-scope}\nchanging={?-changing}\nadmin_always={?-admin_always}\nscripts_always={?-scripts_always}\nsections=get_state get_always_required_field_names"
pc sys 20120102 Meta 114100 restrict_protect_equal_enum "114101=restrict_protect_equal_enum,114102=restrict_protect_{class}if_{spfield}{scfield}{sfield}is_{enum_item},114103=protect_equal,114104=1,114128=1,114125=1,114121=1,114123=1,114198=1,114108=1,114199=1,114109=1,114154=1,114179=1,114215=1,114117=1,114120=Use option \"-scope={edit|delete}\" to restrict protection to edit/delete only and \"-changing\" if state is being changed by another process. Use option \"-admin_always\" to ignore for admin and \"-scripts_always\" to ignore for internal scripts,114158=class={class}\nfield={sfield}{scfield}\npfield={spfield}\nvalue={enum_value}\nlabel={enum_item}\nscope={#-scope}\nchanging={?-changing}\nadmin_always={?-admin_always}\nscripts_always={?-scripts_always}\nsections=get_state get_always_required_field_names"
pc sys 20120102 Meta 114100 restrict_protect_modifier "114101=restrict_protect_modifier,114102=restrict_protect_{class}[if_]{tfield}[when_]{modifier},114103=protect_modifier,114104=1,114197=1,114107=1,114126=1,114117=1,114120=Restricts when Modifier has been set. Test Field is an optional precondition.\n\nUse option \"-scope={edit|delete}\" to restrict protection to edit/delete only.,114158=class={class}\nmodifier={modifier}\ntfield={tfield}\nscope={#-scope}\nsections=get_state get_always_required_field_names"
pc sys 20120102 Meta 114100 restrict_protect_not_equal "114101=restrict_protect_not_equal,114102=restrict_protect_{class}if_{spfield}{scfield}{sfield}is_not_{value_label},114103=protect_not_equal,114104=1,114128=1,114125=1,114121=1,114123=1,114154=1,114179=1,114135=1,114110=1,114117=1,114120=Use option \"-scope={edit|delete}\" to restrict protection to edit/delete only and \"-changing\" if state is being changed by another process. Use option \"-admin_always\" to ignore for admin and \"-scripts_always\" to ignore for internal scripts,114158=class={class}\nfield={sfield}{scfield}\npfield={spfield}\nvalue={value_literal}\nlabel=\nscope={#-scope}\nchanging={?-changing}\nadmin_always={?-admin_always}\nscripts_always={?-scripts_always}\nsections=get_state get_always_required_field_names"
pc sys 20120102 Meta 114100 restrict_protect_not_equal_enum "114101=restrict_protect_not_equal_enum,114102=restrict_protect_{class}if_{spfield}{scfield}{sfield}is_not_{enum_item},114103=protect_not_equal,114104=1,114128=1,114125=1,114121=1,114123=1,114198=1,114108=1,114199=1,114109=1,114154=1,114179=1,114215=1,114117=1,114120=Use option \"-scope={edit|delete}\" to restrict protection to edit/delete only and \"-changing\" if state is being changed by another process Use option \"-admin_always\" to ignore for admin and \"-scripts_always\" to ignore for internal scripts.,114158=class={class}\nfield={sfield}{scfield}\npfield={spfield}\nvalue={enum_value}\nlabel={enum_item}\nscope={#-scope}\nchanging={?-changing}\nadmin_always={?-admin_always}\nscripts_always={?-scripts_always}\nsections=get_state get_always_required_field_names"
pc sys 20120102 Meta 114100 restrict_uid_not_equal "114101=restrict_uid_not_equal,114102=restrict_{class}if_uid_is_not_{field}[or_]{spfield}{scfield}{sfield}[and_not_]{tfield}[and_not_]{permission},114103=restrict_uid_not_equal,114104=1,114124=1,114105=1,114128=1,114121=1,114125=1,114123=1,114126=1,114136=1,114117=1,114120=Field is the \"user\" key and Source Field/Child is an optional conditional override. If the optional Test Field is true or the user has the optional Permission then this restriction will not apply.\n\nUse option \"-scope={edit|delete}\" to restrict protection to edit/delete only and \"-unactionable\" to also restrict actions. Use Option \"-admin_always\" to prevent the restriction applying to admin.,114158=ufield={field}\nsfield={spfield}{sfield}\nscfield={scfield}\ntfield={tfield}\nperm={permission}\nperm_id={permission_id}\nscope={#-scope}\nadmin_always={?-admin_always}\nunactionable={?-unactionable}\nsections=get_state get_always_required_field_names"
pc sys 20120102 Meta 114100 restrict_unactionable_equal "114101=restrict_unactionable_equal,114102=restrict_unactionable_{class}if_{spfield}{scfield}{sfield}[is_|is_null]{value_label},114103=unactionable_field_value,114104=1,114128=1,114125=1,114121=1,114123=1,114154=1,114135=1,114179=1,114120=Record will be \"unactionable\" if field is equal to value.,114158=class={class}\npfield={spfield}\nfield={sfield}{scfield}\nvalue={value}\nevalue=\nnot_eq=\nfistexttype={fistexttype}\nsections=get_state get_always_required_field_names"
pc sys 20120102 Meta 114100 restrict_unactionable_equal_enum "114101=restrict_unactionable_equal_enum,114102=restrict_unactionable_{class}if_{spfield}{scfield}{sfield}[is_]{enum_item},114103=unactionable_field_value,114104=1,114128=1,114125=1,114121=1,114123=1,114198=1,114108=1,114199=1,114109=1,114154=1,114179=1,114215=1,114120=Record will be \"unactionable\" if field is equal to enum item.,114158=class={class}\npfield={spfield}\nfield={sfield}{scfield}\nvalue={enum_value}\nevalue={enum_item}\nnot_eq=\nfistexttype={fistexttype}\nsections=get_state get_always_required_field_names"
pc sys 20120102 Meta 114100 restrict_unactionable_not_equal "114101=restrict_unactionable_not_equal,114102=restrict_unactionable_{class}if_{spfield}{scfield}{sfield}[is_not_|is_not_null]{value},114103=unactionable_field_value,114104=1,114128=1,114125=1,114121=1,114123=1,114154=1,114135=1,114179=1,114120=Record will be \"unactionable\" if field is not equal to value.,114158=class={class}\npfield={spfield}\nfield={sfield}{scfield}\nvalue={value}\nevalue=\nnot_eq=true\nfistexttype={fistexttype}\nsections=get_state get_always_required_field_names"
pc sys 20120102 Meta 114100 restrict_unactionable_not_equal_enum "114101=restrict_unactionable_not_equal_enum,114102=restrict_unactionable_{class}if_{spfield}{scfield}{sfield}[is_not_]{enum_item},114103=unactionable_field_value,114104=1,114128=1,114125=1,114121=1,114123=1,114198=1,114108=1,114199=1,114109=1,114154=1,114179=1,114215=1,114120=Record will be \"unactionable\" if field is equal to enum item.,114158=class={class}\npfield={spfield}\nfield={sfield}{scfield}\nvalue={enum_value}\nevalue={enum_item}\nnot_eq=true\nfistexttype={fistexttype}\nsections=get_state get_always_required_field_names"
pc sys 20120102 Meta 114100 restriction "114101=restriction,114102=restrict_{class}{value_label}[where_]{field_values},114103=n/a,114104=1,114135=1,114163=1,114120=Use the Value \"@parent\" here to restrict to self-related children or \"@xparent\" to exclude the parent record."
pc sys 20120102 Meta 114100 restriction_field_list "114101=restriction_field_list,114102=field_list,114103=n/a,114104=1,114139=1,114140=115430$115100.301405,301700=restriction,301710=field_restrict,114147=1"
pc sys 20120102 Meta 114100 transient_add_action_child_create_for_uid "114101=transient_add_child_create_action_for_uid,114102=transient_{class}add_{procedure}to_{field}if_uid_in_{sfield}[and_if_]{tfield}[when_]{modifier}[and_]{permission},114103=transient_add_action_child_create_for_uid,114104=1,114124=1,114105=1,114128=1,114113=1,114197=1,114191=1,114138=1,114171=1,114106=1,114136=1,114126=1,114117=1,114120=Field is the transient \"actions\" field and Source Field is the comma separated list of \"user\" keys. Modifier and Test Field are optional preconditions and Permission is an optional required permission.\n\nUse option \"-top_level\" to only apply to the top level node of the object graph and \"-not_iterating\" to omit if is iterating.,114158=procedure={procedure}\nchild={child}\nfield={field}\nsfield={sfield}\nmodifier={modifier}\ntfield={tfield}\npermission={permission}\npermission_id={permission_id}\nnot_self=\ntop_level={?-top_level}\nnot_iterating={?-not_iterating}\nsections=after_fetch get_required_field_names"
pc sys 20120102 Meta 114100 transient_add_action_child_create_for_uid_not_in_set "114101=transient_add_action_child_create_for_uid_not_in_set,114102=transient_{class}add_{procedure}to_{field}if_uid_not_in_{sfield}[and_if_]{tfield}[when_]{modifier}[and_]{permission},114103=transient_add_action_child_create_for_uid,114104=1,114124=1,114105=1,114128=1,114113=1,114197=1,114191=1,114138=1,114171=1,114106=1,114136=1,114126=1,114117=1,114120=Field is the transient \"actions\" field and Source Field is the comma separated list of \"user\" keys. Modifier and Test Field are optional preconditions and Permission is an optional required permission.\n\nUse option \"-top_level\" to only apply to the top level node of the object graph and \"-not_iterating\" to omit if is iterating.,114158=procedure={procedure}\nchild={child}\nfield={field}\nsfield={sfield}\nmodifier={modifier}\ntfield={tfield}\npermission={permission}\npermission_id={permission_id}\nnot_self=true\ntop_level={?-top_level}\nnot_iterating={?-not_iterating}\nsections=after_fetch get_required_field_names"
pc sys 20120102 Meta 114100 transient_event_overlap "114101=transient_event_overlap,114102=transient_{class}{field},114103=transient_event_overlap,114104=1,114124=1,114105=1,114111=6,114121=1,114122=1,114176=1,114177=1,114126=1,114114=1,114181=1,114120=Field is the \"overlapping\" transient boolean. Source Child is the \"when\" and Other Source Child is the \"duration\" and Test Field is \"when finished\".,114158=class={class}\nfield={field}\nwhen={scfield}\nduration={oscfield}\nfinish={tfield}\nuser=\ngroup=\nsections=after_fetch get_required_field_names"
pc sys 20120102 Meta 114100 transient_event_overlap_opt_info "114101=transient_event_overlap_opt_info,114102=user_group_info,114103=n/a,114104=1,114124=1,114125=1,114146=1,114147=1,114139=1,114151=1,301700=transient_event_overlap,114120=The Field is an optional \"user\" FK and Source Parent field is an optional \"group\" FK.,114158=user={field}\ngroup={spfield}"
pc sys 20120102 Meta 114100 transient_field_action_create_from_fk "114101=transient_field_action_create_from_fk,114102=transient_{class}{field}add_{procedure}setting_{spfield}{scfield}{sfield}to_{ofield},114103=transient_field_action_create_from_fk,114104=1,114124=1,114105=1,114174=1,114175=1,114171=1,114106=1,114128=1,114125=1,114121=1,114123=1,114154=1,114117=1,114120=Field is for \"actions\"\\, Other Field is a FK value to be set in the new record and Procedure is the \"action\" to be appended. Source Field is the field that will be set for the new record or if the new record needs to be of a different class then use Source Parent and Source Child to identify the class and field.\n\nUse Option \"-key_sep=<separator>\" to change the separator used before the record's key.,114158=actions={field}\nfkfield={ofield}\naction={procedure}\nsfield={sfield}{scfield}\nspfield={spfield}\nspclass={spclass}\nkey_sep={#-key_sep}\nsections=after_fetch get_required_field_names"
pc sys 20120102 Meta 114100 transient_field_action_for_fk_child_match "114101=transient_field_action_for_fk_child_match,114102=transient_{class}{field}{oprocedure}{procedure}for_{spfield}matched_in_{child}children,114103=transient_field_action_for_fk_child_match,114104=1,114124=1,114105=1,114171=1,114106=1,114125=1,114112=1,114208=1,114191=1,114138=1,114140=115432$115100.301405,301710=transient_field_action_for_fk_child_match_cinfo,114120=Field will contain the action. Source Parent is the FK value which will be compared with the Source Parent of the child record. Procedure is the action that will be added if a child match is found and optionally Other Procedure will be added if a child match is not found.\n\nAfter saving click \"Add Child Info\" to continue.,114158=class={class}\nactions={field}\nprocedure={procedure}\noprocedure={oprocedure}\nspfield={spfield}\nchildren={child}\nsections=after_fetch get_required_field_names"
pc sys 20120102 Meta 114100 transient_field_action_for_fld "114101=transient_field_action_for_fld,114102=transient_{class}{field}add_{procedure}[for_]{sfield}[if_]{tfield},114103=transient_field_action,114104=1,114124=1,114105=1,114174=1,114183=1,114171=1,114106=1,114128=1,114126=1,114117=1,114120=Field will contain the action. Other Field is an optional field that if provided will be assigned to the value of Other Field 2 if cloning or editing. Source Field and Test Field are an optional preconditions.\n\nUse option \"-default\" to make the action behave as the default action in the UI. Use option \"-prompt\" to force UI confirmation for action and \"-back_for_view\" to force a UI \"back\" to occur after the action completes. Use option \"-edit_record\" or \"-clone_record\" for the action to become an edit or clone operation rather than a procedure call. Use option \"-no_log\" for a non-logged procedure call or option \"-no_trans\" to prevent the procedure call from being surrounded by a transaction. Use option \"-admin_always\" or \"-admin_never\" for action to always/never be available to admin and \"-iterating\" \"-not_iterating\" to only include the action if iteration is or is not occurring. Use option \"-even_when_changing\" to include the action even if the record is flagged as being changed.,114158=class={class}\nactions={field}\nofield={ofield}\nvfield={o2field}\nprocedure={procedure}\naltfield={sfield}\nufield=\npermission=\npermission_id=\nmodifier={modifier}\ntfield={tfield}\nprompt={?-prompt}\ndefault={?-default}\nback_for_view={?-back_for_view}\nedit_record={?-edit_record}\nclone_record={?-clone_record}\nno_log={?-no_log}\nno_trans={?-no_trans}\nadmin_always={?-admin_always}\nadmin_never={?-admin_never}\niterating={?-iterating}\nnot_iterating={?-not_iterating}\nstate=\ncheck_not_in_set=\nvname={#-var}\neven_when_changing={?-even_when_changing}\nsections=after_fetch get_required_field_names"
pc sys 20120102 Meta 114100 transient_field_action_for_fld_or_perm "114101=transient_field_action_for_fld_or_perm,114102=transient_{class}{field}add_{procedure}for_{permission}or_{sfield}[if_]{tfield},114103=transient_field_action,114104=1,114124=1,114105=1,114174=1,114183=1,114171=1,114106=1,114128=1,114126=1,114136=1,114180=1,114117=1,114120=Field will contain the action. Other Field is an optional field that if provided will be assigned to the value of Other Field 2 if cloning or editing. Source Field must be true unless the user has the Permission and Test Field is an optional precondition.\n\nUse option \"-default\" to make the action behave as the default action in the UI. Use option \"-prompt\" to force UI confirmation for action and \"-back_for_view\" to force a UI \"back\" to occur after the action completes. Use option \"-edit_record\" or \"-clone_record\" for the action to become an edit or clone operation rather than a procedure call. Use option \"-no_log\" for a non-logged procedure call or option \"-no_trans\" to prevent the procedure call from being surrounded by a transaction. Use option \"-admin_always\" or \"-admin_never\" for action to always/never be available to admin and \"-iterating\" \"-not_iterating\" to only include the action if iteration is or is not occurring. Use option \"-even_when_changing\" to include the action even if the record is flagged as being changed.,114158=class={class}\nactions={field}\nofield={ofield}\nvfield={o2field}\nprocedure={procedure}\naltfield={sfield}\nufield=\npermission={permission}\npermission_id={permission_id}\nmodifier={modifier}\ntfield={tfield}\nprompt={?-prompt}\ndefault={?-default}\nback_for_view={?-back_for_view}\nedit_record={?-edit_record}\nclone_record={?-clone_record}\nno_log={?-no_log}\nno_trans={?-no_trans}\nadmin_always={?-admin_always}\nadmin_never={?-admin_never}\niterating={?-iterating}\nnot_iterating={?-not_iterating}\nstate=\ncheck_not_in_set=\nvname={#-var}\neven_when_changing={?-even_when_changing}\nsections=after_fetch get_required_field_names"
pc sys 20120102 Meta 114100 transient_field_action_for_mod "114101=transient_field_action_for_mod,114102=transient_{class}{field}add_{procedure}when_{modifier}[if_]{tfield},114103=transient_field_action_for_mod,114104=1,114124=1,114105=1,114174=1,114183=1,114197=1,114107=1,114171=1,114106=1,114126=1,114117=1,114120=Field will contain the action and Test Field is an optional precondition. Other Field is an optional field to be assigned the value of Other Field 2 if cloning or editing.\n\nUse option \"-default\" to make the action behave as the default action. Use option \"-prompt\" to force UI confirmation for action and \"-back_for_view\" to force a UI \"back\" to occur after the action completes. Use option \"-edit_record\" or \"-clone_record\" for the action to become an edit or clone operation rather than a procedure call. Use option \"-admin_always\" or \"-admin_never\" for action to always/never be available to admin and \"-iterating\" or \"-not_iterating\" to only include the action if iteration is or is not occurring. Use option \"-no_log\" for a non-logged procedure call or \"-no_trans\" to prevent the procedure call from being surrounded by a transaction. Use option \"-not_sess_var=<varname>\" to only add the action if session variable \"<varname>\" has not been given a value.,114158=class={class}\nactions={field}\nofield={ofield}\nvfield={o2field}\nprocedure={procedure}\nmodifier={modifier}\ntfield={tfield}\ndefault={?-default}\nprompt={?-prompt}\nback_for_view={?-back_for_view}\nedit_record={?-edit_record}\nclone_record={?-clone_record}\nno_log={?-no_log}\nno_trans={?-no_trans}\nadmin_always={?-admin_always}\nadmin_never={?-admin_never}\niterating={?-iterating}\nnot_iterating={?-not_iterating}\nstate=\ncheck_not_in_set=\nnot_sess_var={#-not_sess_var}\nsections=after_fetch get_required_field_names"
pc sys 20120102 Meta 114100 transient_field_action_for_uid "114101=transient_field_action_for_uid,114102=transient_{class}{field}add_{procedure}for_uid_is_{spfield}[if_]{tfield}[when_]{modifier},114103=transient_field_action,114104=1,114124=1,114105=1,114174=1,114183=1,114171=1,114106=1,114128=1,114197=1,114125=1,114112=1,114126=1,114117=1,114120=Field will contain the action. Other Field is an optional field that if provided will be assigned to the value of Other Field 2 if cloning or editing. Source Field is an optional boolean alternative to Source Parent which is the \"user\" to match the uid with Modifier and Test Field being optional preconditions.\n\nUse option \"-default\" to make the action behave as the default action in the UI. Use option \"-prompt\" to force UI confirmation for action and \"-back_for_view\" to force a UI \"back\" to occur after the action completes. Use option \"-edit_record\" or \"-clone_record\" for the action to become an edit or clone operation rather than a procedure call. Use option \"-no_log\" for a non-logged procedure call or option \"-no_trans\" to prevent the procedure call from being surrounded by a transaction. Use option \"-admin_always\" or \"-admin_never\" for action to always/never be available to admin and \"-iterating\" or \"-not_iterating\" to only include the action if iteration is or is not occurring. Use option \"-even_when_changing\" to include the action even if the record is flagged as being changed.,114158=class={class}\nactions={field}\nofield={ofield}\nvfield={o2field}\nprocedure={procedure}\naltfield={sfield}\nufield={spfield}\npermission=\npermission_id=\nmodifier={modifier}\ntfield={tfield}\nprompt={?-prompt}\ndefault={?-default}\nback_for_view={?-back_for_view}\nedit_record={?-edit_record}\nclone_record={?-clone_record}\nno_log={?-no_log}\nno_trans={?-no_trans}\nadmin_always={?-admin_always}\nadmin_never={?-admin_never}\niterating={?-iterating}\nnot_iterating={?-not_iterating}\nstate=\ncheck_not_in_set=\nvname={#-var}\neven_when_changing={?-even_when_changing}\nsections=after_fetch get_required_field_names"
pc sys 20120102 Meta 114100 transient_field_action_for_uid_not_in_set "114101=transient_field_action_for_uid_not_in_set,114102=transient_{class}{field}add_{procedure}for_uid_not_in_{spfield}[if_]{tfield}[when_]{modifier},114103=transient_field_action,114104=1,114124=1,114105=1,114174=1,114183=1,114171=1,114106=1,114128=1,114197=1,114113=1,114126=1,114117=1,114120=Field will contain the action. Other Field is an optional field that if provided will be assigned to the value of Other Field 2 if cloning or editing. Source Field is the \"uid set\" which uid must not belong to with Modifier and Test Field being optional preconditions.\n\nUse option \"-default\" to make the action behave as the default action in the UI. Use option \"-prompt\" to force UI confirmation for action and \"-back_for_view\" to force a UI \"back\" to occur after the action completes. Use option \"-edit_record\" or \"-clone_record\" for the action to become an edit or clone operation rather than a procedure call. Use option \"-no_log\" for a non-logged procedure call or option \"-no_trans\" to prevent the procedure call from being surrounded by a transaction. Use option \"-admin_always\" or \"-admin_never\" for action to always/never be available to admin and \"-iterating\" or \"-not_iterating\" to only include the action if iteration is or is not occurring. Use option \"-var=<vname>\" if the set should instead come from a variable. Use option \"-even_when_changing\" to include the action even if the record is flagged as being changed.,114158=class={class}\nactions={field}\nofield={ofield}\nvfield={o2field}\nprocedure={procedure}\naltfield=\nufield={sfield}\npermission=\npermission_id=\nmodifier={modifier}\ntfield={tfield}\nprompt={?-prompt}\ndefault={?-default}\nback_for_view={?-back_for_view}\nedit_record={?-edit_record}\nclone_record={?-clone_record}\nno_log={?-no_log}\nno_trans={?-no_trans}\nadmin_always={?-admin_always}\nadmin_never={?-admin_never}\niterating={?-iterating}\nnot_iterating={?-not_iterating}\nstate=\ncheck_not_in_set=true\nvname={#-var}\neven_when_changing={?-even_when_changing}\nsections=after_fetch get_required_field_names"
pc sys 20120102 Meta 114100 transient_field_action_for_uid_or_perm "114101=transient_field_action_for_uid_or_perm,114102=transient_{class}{field}add_{procedure}for_{permission}or_uid_is_{spfield}[if_]{tfield}[when_]{modifier},114103=transient_field_action,114104=1,114124=1,114174=1,114183=1,114105=1,114171=1,114106=1,114128=1,114197=1,114125=1,114112=1,114126=1,114136=1,114180=1,114117=1,114120=Field will contain the action. Other Field is an optional field that if provided will be assigned to the value of Other Field 2 if cloning or editing. Source Field is an optional boolean alternative to Source Parent which is the \"user\" to match the uid unless the user has the Permission with Modifier and Test Field being optional preconditions.\n\nUse option \"-default\" to make the action behave as the default action in the UI. Use option \"-prompt\" to force UI confirmation for action and \"-back_for_view\" to force a UI \"back\" to occur after the action completes. Use option \"-edit_record\" or \"-clone_record\" for the action to become an edit or clone operation rather than a procedure call. Use option \"-no_log\" for a non-logged procedure call or option \"-no_trans\" to prevent the procedure call from being surrounded by a transaction. Use option \"-state={editable|deletable}\" to check if record state and \"-admin_always\" or \"-admin_never\" for action to always/never be available to admin. Use option \"iterating\" or \"-not_iterating\" to only include the action if iteration is or is not occurring. Use option \"-even_when_changing\" to include the action even if the record is flagged as being changed.,114158=class={class}\nactions={field}\nofield={ofield}\nvfield={o2field}\nprocedure={procedure}\naltfield={sfield}\nufield={spfield}\npermission={permission}\npermission_id={permission_id}\nmodifier={modifier}\ntfield={tfield}\nprompt={?-prompt}\ndefault={?-default}\nback_for_view={?-back_for_view}\nstate={#-state}\nedit_record={?-edit_record}\nclone_record={?-clone_record}\nno_log={?-no_log}\nno_trans={?-no_trans}\nadmin_always={?-admin_always}\nadmin_never={?-admin_never}\niterating={?-iterating}\nnot_iterating={?-not_iterating}\ncheck_not_in_set=\nvname={#-var}\neven_when_changing={?-even_when_changing}\nsections=after_fetch get_required_field_names"
pc sys 20120102 Meta 114100 transient_field_bool_has_child_for_uid "114101=transient_field_bool_has_child_for_uid,114102=transient_{class}{field}if_has_child_{child}for_uid,114103=transient_field_bool_has_child_for_uid,114104=1,114124=1,114105=1,114125=1,114136=1,114191=1,114138=1,114117=1,114145=1,114140=115432$115100.301405,301710=transient_field_bool_has_child_for_uid_cinfo,114120=Field will be assigned true if a child record exists that belongs to the current uid. Source Parent is an optional \"user\" FK and Permission is an optional required permission.\n\nUse option \"-top_level\" to only apply to the top level node of the object graph. Use option \"-not_self\" to omit check if the \"user\" matches the uid and option \"-not_iterating\" to only check if is not iterating.\n\nAfter saving click \"Add Child Info\" to continue.,114158=class={class}\nfield={field}\nufield={spfield}\nchild={child}\ncclass={cclass}\npermission={permission}\npermission_id={permission_id}\nnot_self={?-not_self}\ntop_level={?-top_level}\nnot_iterating={?-not_iterating}\nsections=after_fetch get_required_field_names"
pc sys 20120102 Meta 114100 transient_field_bool_is_default "114101=transient_field_bool_is_default,114102=transient_field_{class}{field}if_{sfield}{spfield}{scfield}is_default,114103=transient_field_bool_is_default,114104=1,114124=1,114105=1,114128=1,114125=1,114121=1,114123=1,114154=1,114120=Field will be set according to whether Source Field is its default value.,114158=class={class}\nfield={field}\nsfield={sfield}{scfield}\npfield={spfield}\nis_neq=\nsections=after_fetch"
pc sys 20120102 Meta 114100 transient_field_bool_is_in_op "114101=transient_field_bool_is_in_op,114102=transient_{class}{field}if_is_{value},114103=transient_field_bool_is_in_op,114104=1,114124=1,114135=1,114110=1,114105=1,114117=1,114120=Field will be set true if the record op is Value which must be one of \"editing\"\\, \"creating\"\\, \"updating\" or \"destroying\".\n\nUse Option \"-post_init\" to occur in \"post_init\".,114158=class={class}\nfield={field}\nvalue={value}\npost_init={?-post_init}\nsections=post_init after_fetch"
pc sys 20120102 Meta 114100 transient_field_bool_is_not_default "114101=transient_field_bool_is_not_default,114102=transient_field_{class}{field}if_{sfield}{spfield}{scfield}is_not_default,114103=transient_field_bool_is_default,114104=1,114124=1,114105=1,114128=1,114125=1,114121=1,114123=1,114154=1,114120=Field will be set according to whether Source Field is its default value.,114158=class={class}\nfield={field}\nsfield={sfield}{scfield}\npfield={spfield}\nis_neq=true\nsections=after_fetch"
pc sys 20120102 Meta 114100 transient_field_bool_uid_is_admin "114101=transient_field_bool_uid_is_admin,114102=transient_{class}{field}if_uid_is_admin,114103=transient_field_bool_uid,114104=1,114124=1,114105=1,114117=1,114120=Field will be set true if the uid is admin.\n\nUse option \"-or_system\" to also be true if uid is system.,114158=class={class}\nfield={field}\nadmin=true\nsystem={?-or_system}\nsections=after_fetch"
pc sys 20120102 Meta 114100 transient_field_bool_uid_is_system "114101=transient_field_bool_uid_is_system,114102=transient_{class}{field}if_uid_is_system,114103=transient_field_bool_uid,114104=1,114124=1,114105=1,114117=1,114120=Field will be set true if the uid is system.\n\nUse option \"-or_admin\" to also be true if uid is admin.,114158=class={class}\nfield={field}\nadmin={?-or_admin}\nsystem=true\nsections=after_fetch"
pc sys 20120102 Meta 114100 transient_field_from_acyclic_path "114101=transient_field_from_acyclic_path,114102=transient_{class}{field}from_{spfield}{scfield}path,114103=field_from_acyclic_path,114104=1,114124=1,114105=1,114174=1,114135=1,114110=1,114111=20,114112=1,114125=1,114121=1,114122=1,114117=1,114119=51,114130=20,114120=Field will become the path and Value is used as the path separator. Source Parent is the \"self relationship\" parent and Source Child is the field provides each part of the \"path\".\n\nUse option \"-embed_links\" to put link information into the path (the path field will need to have either \"html\" or \"manual_link\" as its  extra setting for this to work). Other Field is an optional \"external\" variation when using \"-embed_links\" and if it is provided then the \"-external\" option is ignored.\n\nUse option \"-external\" when links are intended to be displayed in an external class and use \"-allow_parent_iteration\" to operate even when a graph parent is iterating.,114158=class={class}\nsrc_field={scfield}\nsrc_field_id={scfield_id}\ndest_field={field}\next_field={ofield}\ndest_field_id={field_id}\nftransient=1\npfield={spfield}\npfield_id={spfield_id}\nseparator={value_string}\nembed_links={?-embed_links}\nexternal={?-external}\nallow_parent_iteration={?-allow_parent_iteration}\nsections=for_store after_fetch get_required_field_names"
pc sys 20120102 Meta 114100 transient_field_from_child_concat "114101=transient_field_from_child_concat,114102=transient_{class}{field}from_{child}children,114103=append_opts_for_iter,114104=1,114124=1,114105=1,114111=0,114117=1,114191=1,114138=1,114135=1,114145=1,114140=115432$115100.301405,301710=transient_field_from_child_concat_child,114120=Field is the text field that will be appended to during iteration of the Child Relationship records and Value is an optional separator.\n\nUse option \"-embed_links\" to put link information into the path (the path field will need to have either \"html\" or \"manual_link\" as its  extra setting for this to work).,114158=class={class}\nfield={field}\ncclass={cclass}\nchild={child}\nseparator={value_string}\nofield=\ncfield=\npfield=\nrfield=\nrvalue=\nembed_links={?-embed_links}\nsections=after_fetch"
pc sys 20120102 Meta 114100 transient_field_from_class "114101=transient_field_from_class,114102=transient_{class}{field}from_class_id,114103=transient_field_from_class,114104=1,114124=1,114105=1,114120=Field will be set from the record class identifier.,114158=field={field}\nsections=after_fetch"
pc sys 20120102 Meta 114100 transient_field_from_concat "114101=transient_field_from_concat,114102=transient_{class}{field}from_{ofield}[with_]{o2field}[and_]{sfield}{spfield}{scfield}[if_]{tfield}[when_]{modifier},114103=transient_field_concat,114104=1,114124=1,114105=1,114128=1,114125=1,114121=1,114123=1,114154=1,114174=1,114175=1,114183=1,114197=1,114126=1,114117=1,114111=20,114176=1,114135=1,114120=Field is the concatenation of Other Field (and optionally Other Field 2) and Source Field/Child with Value being used as an optional separator between the fields. Modifier and Test Field are optional preconditions.\n\nUse \"-reverse\" to concatenate them in reverse and \"-both_not_empty\" to only concatenate if both Other Field and Source Field/Child are not empty strings. Use option \"-always_use_separator\" to use a separator even when values are empty. Use option \"-top_level\" to only apply to the top level node of the object graph.\n\nIf Other Source Child is provided it is used as a test to determine if the order should be reversed.,114158=class={class}\ndfield={field}\nfield1={ofield}\nfield2={o2field}\nfield3={sfield}{spfield}\ncfield={scfield}\nrfield={oscfield}\nseparator={value_string}\nmodifier={modifier}\ntfield={tfield}\nreverse={?-reverse}\nnon_empty={?-both_not_empty}\nalways_use_separator={?-always_use_separator}\ntop_level={?-top_level}\nsections=after_fetch get_required_field_names"
pc sys 20120102 Meta 114100 transient_field_from_dtm "114101=transient_field_from_dtm,114102=transient_{class}{field}from_dtm,114103=transient_field_from_dtm,114104=1,114124=1,114105=1,114120=Field will be set from the current dtm value.,114158=field={field}\nsections=after_fetch"
pc sys 20120102 Meta 114100 transient_field_from_file "114101=transient_field_from_file,114102=transient_{class}{field}from_{sfield}{value_label},114103=transient_field_from_file,114104=1,114124=1,114105=1,114128=1,114113=1,114135=1,114120=Use Value for an optional file name suffix.,114158=class={class}\nfield={field}\nsfield={sfield}\nsuffix={value}\nsections=after_fetch"
pc sys 20120102 Meta 114100 transient_field_from_key "114101=transient_field_from_key,114102=transient_{class}{field}from_key[_if_]{tfield},114103=transient_field_from_key,114104=1,114124=1,114105=1,114126=1,114117=1,114120=Field will be set from the record key. Test Field is an optional precondition.\n\nUse Option \"-post_init\" to occur in \"post_init\".,114158=field={field}\ntfield={tfield}\npost_init={?-post_init}\nsections=post_init after_fetch"
pc sys 20120102 Meta 114100 transient_field_from_module_string "114101=transient_field_from_module_string,114102=transient_{class}{field}from_module_string[_if_]{tfield}{value_label},114103=transient_field_from_module_string,114104=1,114124=1,114105=1,114111=0,114135=1,114110=1,114126=1,114120=Field will be set from the module string which Value is the default language literal. Test Field is an optional boolean precondition or if Value is set to \"@tfield\" or \"@tfield=tvalue\" then the Test Field's display name will be used (as well as its value appended after a \"=\" literal with the latter).,114158=id={id}\nfield={field}\nvalue={value}\ntfield={tfield}\nsections=after_fetch get_required_field_names,114163=1,114166=string={value}"
pc sys 20120102 Meta 114100 transient_field_from_op_field "114101=transient_field_from_op_field,114102=transient_{class}{field}from_{sfield}{spfield}{scfield}{tvalue}{ofield}[if_]{tfield},114103=transient_field_from_op,114104=1,114124=1,114105=1,114174=1,114175=1,114128=1,114125=1,114121=1,114123=1,114154=1,114117=1,114126=1,114115=1,114131=30,114116=1,114120=Field is Source Field/Child \"op\" Other Field. Test Field is an optional precondition and Test Value must be one of \"eq | neq | lt | gt | lteq | gteq | add | sub | mul | div | and | or | xor | mod | bitand | bitor | bitsleft | bitsright\". Use option \"-type=<type>\" to cast Other Field and use option \"-check={default|notdefault}\" to only perform op if Source Field/Parent is (not) its default value. Use option \"-not_editing_parent\" to only perform op if the graph parent is not being edited.,114158=class={class}\nofield={ofield}\nfield={field}\nfmandatory={fmandatory}\nsfield={sfield}{scfield}\nspfield={spfield}\nsfistexttype={sfistexttype}\nscfistexttype={scfistexttype}\ntfield={tfield}\ntfistexttype={tfistexttype}\nop={tvalue}\ntype={#-type}\ncheck={#-check}\nnot_pedit={?-not_editing_parent}\nvalue=\nsections=after_fetch get_required_field_names"
pc sys 20120102 Meta 114100 transient_field_from_op_value "114101=transient_field_from_op_value,114102=transient_{class}{field}from_{sfield}{spfield}{scfield}{tvalue}{value_label}[if_]{tfield},114103=transient_field_from_op,114104=1,114124=1,114105=1,114135=1,114110=1,114111=30,114128=1,114125=1,114121=1,114123=1,114154=1,114117=1,114126=1,114115=1,114131=30,114116=1,114120=Field is Source Field/Child \"op\" Value. Test Field is an optional precondition and Test Value must be one of \"eq | neq | lt | gt | lteq | gteq | add | sub | mul | div | and | or | xor | mod | bitand | bitor | bitsleft | bitsright\". Use option \"-type=<type>\" to cast Value and use option \"-check={default|notdefault}\" to only perform op if Source Field/Parent is (not) its default value. Use option \"-not_editing_parent\" to only perform op if the graph parent is not being edited.,114158=class={class}\nvalue={value}\nfield={field}\nfmandatory={fmandatory}\nsfield={sfield}{scfield}\nspfield={spfield}\nsfistexttype={sfistexttype}\nscfistexttype={scfistexttype}\ntfield={tfield}\ntfistexttype={tfistexttype}\nop={tvalue}\ntype={#-type}\ncheck={#-check}\nnot_pedit={?-not_editing_parent}\nofield=\nsections=after_fetch get_required_field_names"
pc sys 20120102 Meta 114100 transient_field_from_other "114101=transient_field_from_other,114102=transient_{class}{field}from_{sfield}{spfield}{scfield}[if_]{tfield}[when_]{modifier},114103=transient_field_alias,114104=1,114124=1,114105=1,114174=1,114183=1,114128=1,114197=1,114125=1,114121=1,114123=1,114126=1,114154=1,114117=1,114120=Use Modifier and/or Test Field as optional preconditions. Other Field and Other Field 2 are optional prefix function arguments when using the \"-func\" option.\n\nUse option \"-func=<func>\" (with optional \"-func_arg1=<lit>\" and \"-func_arg2=<lit>\" as literal suffix arguments) to transform the Source Field/Child value for Field and \"-mfunc=<mfunc>\" to use the specified Source Field's/Child's member function. Use option \"-check_default\" to only set if the current value is the default and \"-iterating_only\" to only set if records are being iterated. Use Option \"-post_init\" to occur in \"post_init\".,114158=class={class}\nfield={field}\nsfield={sfield}{spfield}\nscfield={scfield}\nfield1={ofield}\nfield2={o2field}\ncheck_mod={modifier}\ntfield={tfield}\nfunc={#-func}\nfunc_arg1={#-func_arg1}\nfunc_arg2={#-func_arg2}\nmfunc={#-mfunc}\ndef_value={?-check_default}\niter_only={?-iterating_only}\npost_init={?-post_init}\nsections=post_init after_fetch get_required_field_names"
pc sys 20120102 Meta 114100 transient_field_from_procedure_call "114101=transient_field_from_procedure_call,114102=transient_{class}{field}from_{procedure},114103=field_from_procedure_call,114104=1,114124=1,114105=1,114171=1,114106=1,114135=1,114120=Field will get its value from a call to Procedure. Value is an optional argument to pass to the procedure,114158=class={class}\nfield={field}\nvalue={value}\nprocedure={procedure}\ntransient=true\nsections=finalise_fetch to_store"
pc sys 20120102 Meta 114100 transient_field_from_search_replace "114101=transient_field_from_search_replace,114102=transient_{class}{field}from_{sfield}{spfield}{scfield}search_replace[_if_]{tfield},114103=field_from_search_replace,114104=1,114124=1,114105=1,114128=1,114121=1,114125=1,114123=1,114126=1,114154=1,114117=1,114120=Test Field is an optional precondition.\n\nUse option \"-keyrep=<token>\" for key replacement token\\, option \"-classrep=<token>\" for class replacement token and option \"-include_labels\" to also include field display names. Use option \"-top_level\" to only apply to the top level node of the object graph.,114158=class={class}\ndfield={field}\nsfield={spfield}{sfield}\ncfield={scfield}\ntfield={tfield}\nfield_list={fields}\nkeyrep={#-keyrep}\nclassrep={#-classrep}\nftransient={ftransient}\nseparator=\nopt_prefix=\nofield=\noleftb=\norightb=\ntop_level={?-top_level}\ninc_labels={?-include_labels}\nsections=after_fetch to_store get_required_field_names"
pc sys 20120102 Meta 114100 transient_field_from_search_replace_field_list "114101=transient_field_from_search_replace_field_list,114102=field_svlist,114103=n/a,114139=1,114140=115430$115100.301405,301700=transient_field_from_search_replace,301710=field_source_and_value,114147=1"
pc sys 20120102 Meta 114100 transient_field_from_sum "114101=transient_field_from_sum,114102=transient_{class}{field}from_{sfield}sum,114103=transient_field_from_sum,114104=1,114124=1,114105=1,114128=1,114113=1,114111=31,114120=Field will be used to sum Source Field during iteration.,114158=class={class}\nfield={field}\nsfield={sfield}\nis_neq=\nsections=after_fetch"
pc sys 20120102 Meta 114100 transient_field_from_uid "114101=transient_field_from_uid,114102=transient_{class}{field}from_uid[_if_]{tfield},114103=transient_field_from_uid,114104=1,114124=1,114105=1,114126=1,114117=1,114120=Field will be set from the current uid value. Test Field is an optional precondition.\n\nUse Option \"-post_init\" to occur in \"post_init\".,114158=field={field}\ntfield={tfield}\npost_init={?-post_init}\nsections=post_init after_fetch"
pc sys 20120102 Meta 114100 transient_field_from_unary_op "114101=transient_field_from_unary_op,114102=transient_{class}{field}from_{tvalue}{sfield}[if_]{tfield},114103=transient_field_from_unary_op,114104=1,114124=1,114105=1,114111=30,114128=1,114113=1,114118=1,114126=1,114115=1,114131=30,114116=1,114117=1,114120=Field is set to \"op\" Source Field. Test Field is an optional precondition and Test Value must be one of \"not | bitnot\".\n\nUse Option \"-post_init\" to occur in \"post_init\".,114158=class={class}\nfield={field}\nsfield={sfield}\ntfield={tfield}\nop={tvalue}\npost_init={?-post_init}\nsections=post_init after_fetch get_required_field_names"
pc sys 20120102 Meta 114100 transient_field_from_utc_convert "114101=transient_field_from_utc_convert,114102=transient_{class}{field}from_conversion_of_{ofield},114103=transient_field_from_utc_convert,114104=1,114124=1,114105=1,114174=1,114175=1,114183=1,114184=1,114128=1,114120=Field is for \"local time\" with Other Field being the \"utc time\" and Other Field 2 being the \"timezone name\". Source Field is optional and if provided will be given the full \"timezone description\".,114158=field={field}\nofield={ofield}\no2field={o2field}\nsfield={sfield}\nsections=after_fetch get_required_field_names"
pc sys 20120102 Meta 114100 transient_field_from_variable "114101=transient_field_from_variable,114102=transient_{class}{field}from_{value_label}[or_if_empty_from_]{spfield}{scfield}{sfield},114103=transient_field_from_variable,114104=1,114124=1,114105=1,114135=1,114110=1,114128=1,114125=1,114121=1,114123=1,114117=1,114120=Field will be set from the Value named object variable. Source Field/Child is an optional source for the value if the variable is empty.\n\nUse Option \"-session\" to use a session scoped variable and option \"-post_init\" to occur in \"post_init\".,114158=field={field}\nvariable={value}\nsfield={sfield}{scfield}\nspfield={spfield}\nsession={?-session}\npost_init={?-post_init}\nsections=post_init after_fetch get_required_field_names"
pc sys 20120102 Meta 114100 transient_field_replacment "114101=transient_field_replacment,114102=transient_{class}{field}replace_with_{ofield}[and_]{o2field},114103=transient_field_replacment,114104=1,114124=1,114105=1,114174=1,114175=1,114183=1,114120=Field will be replaced by Other Field and also Other Field 2 (if provided) for DB queries.,114158=field={field}\nofield={ofield}\no2field={o2field}\nsections=get_transient_replacement_field_names"
pc sys 20120102 Meta 114100 transient_field_to_value "114101=transient_field_to_value,114102=transient_{class}{field}to_{value_label}[if_]{tfield}[when_]{modifier},114103=transient_field_to_value,114104=1,114124=1,114105=1,114135=1,114110=1,114197=1,114126=1,114120=Field will be set to Value. Modifier and Test Field are optional preconditions.,114158=field={field}\nfistexttype={fistexttype}\nvalue={value}\ntfield={tfield}\nmodifier={modifier}\nsections=after_fetch"
pc sys 20120102 Meta 114100 transient_field_value_if_has_perm "114101=transient_field_value_if_has_perm,114102=transient_{class}set_{field}to_{value_label}if_{permission},114103=transient_field_value_if_has_perm,114104=1,114124=1,114105=1,114135=1,114110=1,114136=1,114180=1,114117=1,114120=Field will be set to Value if the user has the Permission.\n\nUse Option \"-admin_always\" to always set for admin.,114158=class={class}\nfield={field}\nvalue={value}\npermission={permission}\npermission_id={permission_id}\nadmin_always={?-admin_always}\nsections=after_fetch"
pc sys 20120102 Meta 114100 transient_field_value_if_uid_in_set "114101=transient_field_value_if_uid_in_set,114102=transient_{class}set_{field}to_{value_label}if_uid_in_{sfield},114103=transient_field_value_if_uid_in_set,114104=1,114124=1,114105=1,114135=1,114110=1,114128=1,114113=1,114117=1,114120=Field will be set to Value if the uid key is found in the Source Field comma separated list.\n\nUse Option \"-admin_always\" to always set for admin.,114158=class={class}\nfield={field}\nsfield={sfield}\nvalue={value}\nadmin_always={?-admin_always}\nsections=after_fetch get_required_field_names"
pc sys 20120102 Meta 114100 transient_permission_concat "114101=transient_permission_concat,114102=transient_{class}{field}add_{permission}if_{tfield}[is_]{tvalue},114103=transient_permission_concat,114104=1,114124=1,114105=1,114126=1,114114=1,114115=1,114136=1,114180=1,114117=1,114120=Field is the \"permissions\" transient with Test Field [== Test Value] being the conditional to append the Permission.\n\nUse option \"-admin_always\" for permission to always be granted to admin.,114158=class={class}\nfield={field}\ntfield={tfield}\ntvalue={tvalue}\npermission={permission}\npermission_id={permission_id}\nadmin_always={?-admin_always}\nsections=after_fetch get_required_field_names"
pc sys 20120102 Meta 114100 transient_permission_from_other_perms "114101=transient_permission_from_other_perms,114102=transient_{class}{field}add_{permission}if_{opermission}{value}{o2permission},114103=transient_permission_from_other_perms,114104=1,114124=1,114105=1,114135=1,114110=1,114136=1,114180=1,114200=1,114201=1,114120=Field is the \"permissions\" transient with Value being set to either \"and\" or \"or\". Permission is the new \"permission\" and Other_Permission and Other_Permission_2 are the ones to be tested.,114158=class={class}\nfield={field}\nop={value}\npermission={permission}\npermission_id={permission_id}\nlpermission={opermission}\nlpermission_id={opermission_id}\nrpermission={o2permission}\nrpermission_id={o2permission_id}\nsections=after_fetch"
pc sys 20120102 Meta 114100 transient_search_rep_from_child_vars "114101=transient_search_rep_from_child_vars,114102=transient_search_rep_for_{class}{field}with_{child}children,114103=transient_search_rep_from_child_vars,114104=1,114124=1,114105=1,114191=1,114138=1,114117=1,114145=1,114140=115432$115100.301405,301710=transient_search_rep_from_child_vars_child,114120=Field will have search replaces performed for all Child Relationship records.\n\nUse option \"-left=<lb>\" and \"-right=<rb>\" for bracketing literals.,114158=class={class}\nfield={field}\nvarchild={child}\nlb={#-left}\nrb={#-right}\nsections=after_fetch"
pc sys 20120102 Meta 114100 trigger_child_cascade "114101=trigger_child_cascade,114102=trigger_{class}child_{child}cascade[_if_has_changed_]{tfield}[to_]{tvalue},114103=update_children,114104=1,114171=1,114191=1,114138=1,114126=1,114115=1,114117=1,114120=Procedure is optional and if provided will be called for the parent record each child is updated. Test Field is optional and if provided is checked to have changed. If Test Value is provided then will only update if Test Field is now equal to this value.\n\nUse option \"-after_self\" to update children after the record itself has been stored and option \"-not_var=<varname>\" to only perform if \"<varname>\" has not been given a value. Use option \"-set_loopvar\" to set the loop variable to the value of the child being iterated.,114158=class={class}\nchild={child}\nprocedure={procedure}\ntfield={tfield}\ntvalue={tvalue}\nafter_self={?-after_self}\nnot_var={#-not_var}\nset_loopvar={?-set_loopvar}\nsections=for_store after_store"
pc sys 20120102 Meta 114100 trigger_child_cascade_fields "114101=trigger_child_cascade_fields,114102=trigger_{class}child_{child}cascade[_if_has_]{tvalue}{tfield},114103=child_field_cascade,114104=1,114191=1,114138=1,114126=1,114115=1,114117=1,114145=1,114120=Test Field is an optional child test comparison with Test Value being one of \"eq\"\\, \"neq\"\\, \"lt\"\\, \"gt\"\\, \"lteq\"\\ or \"gteq\".\n\nUse option \"-or_matches_original\" to include child records that match the parent's original value and use option \"-or_other_fields_changed\" to also include the record if other fields were changed. Use option \"-after_self\" to update children after the record itself has been stored.,114158=class={class}\nchild={child}\nfield_list={field_pairs}\ntfield={tfield}\ntestop={tvalue}\nafter_self={?-after_self}\ncheck_orig={?-or_matches_original}\nany_change={?-or_other_fields_changed}\nsections=for_store after_store"
pc sys 20120102 Meta 114100 trigger_child_cascade_fields_list "114101=trigger_child_cascade_fields_list,114102=field_pair_list,114103=n/a,114124=1,114168=1,114148=1,114140=115431$115100.301405,301700=trigger_child_cascade_fields,301710=field_pair,114147=1,114120=Field is an optional test condition field.,114158=ctfield={field}"
pc sys 20120102 Meta 114100 trigger_child_cascade_search_replace "114101=trigger_child_cascade_search_replace,114102=trigger_{class}child_{child}cascade_search_replace,114103=child_field_change_cascade,114104=1,114191=1,114138=1,114117=1,114145=1,114140=115431$115100.301405,301710=trigger_child_cascade_search_replace_cinfo,114120=Use option \"-exact_match\" to restrict the change to exact matches only.,114158=class={class}\nchild={child}\nexact_match={?-exact_match}"
pc sys 20120102 Meta 114100 trigger_child_cascade_status "114101=trigger_child_cascade_status,114102=trigger_{class}child_{child}cascade_status,114103=child_status_cascade,114104=1,114191=1,114138=1,114125=1,114126=1,114115=1,114140=115432$115100.301405,301710=trigger_child_cascade_status_info,114120=If Test Field is provided then cascade only applies to records where it does not equal the provided Test Value. If Source Parent is provided then it will be used to identify a specific child for special treatment.,114158=class={class}\nchild={child}\nchild_class={cclass}\nspecial_field={spfield}\nneq_status_field={tfield}\nneq_status_value={tvalue}\nsections=for_store"
pc sys 20120102 Meta 114100 trigger_child_destroy "114101=trigger_child_destroy,114102=trigger_{class}child_{child}destroy_all[_if_changed_]{tfield}[in_]{procedure},114103=destroy_children,114104=1,114191=1,114138=1,114126=1,114171=1,114204=1,114128=1,114120=Test Field is optional and if provided is checked to have changed. If Procedure is provided then it will be used as the source injection point. If Procedure Arg is supplied then it is assumed to be the output argument. If Source Field is provided then its value will be used as the procedure output.,114158=class={class}\nchild={child}\ntfield={tfield}\nprocedure={procedure}\noutput_arg={procedure_arg}\noutput_field={sfield}\nseparator=\nuse_test_field_as_suffix=\nsections=procedure for_store"
pc sys 20120102 Meta 114100 trigger_child_destroy_record "114101=trigger_child_destroy_record,114102=trigger_{class}child_{child}destroy_{sfield}record[_in_]{procedure},114103=destroy_children,114104=1,114124=1,114135=1,114191=1,114138=1,114113=1,114171=1,114204=1,114128=1,114120=Field will be suffixed to the record key in order to identify the child record to be destroyed. Use Value as an optional separator. If Procedure is provided then it will be used as the source injection point. If Procedure Arg is supplied then it is assumed to be the output argument. If Source Field is provided then its value will be used as the procedure output.,114158=class={class}\nchild={child}\ntfield={field}\nseparator={value}\nprocedure={procedure}\noutput_arg={procedure_arg}\noutput_field={sfield}\nuse_test_field_as_suffix=true\nsections=procedure for_store"
pc sys 20120102 Meta 114100 trigger_clone_children "114101=trigger_clone_children,114102=trigger_{class}clone_child_{child}records,114103=clone_children,114104=1,114117=1,114191=1,114138=1,114140=115432$115100.301405,301710=trigger_clone_children_cinfo,114120=Use option \"-copy_files\" to make copies of attached files.\n\nAfter saving click \"Add Child Info\" to continue,114158=class={class}\nchild={child}\ncopy_files={?-copy_files}\nsections=after_store"
pc sys 20120102 Meta 114100 trigger_clone_children_from_fk "114101=trigger_clone_children_from_fk,114102=trigger_{class}clone_{child}records_from_{spfield}children,114103=clone_children_from_fk,114104=1,114125=1,114112=1,114191=1,114138=1,114140=115437$115100.301405,301710=trigger_clone_children_from_fk_sinfo,114120=Source Parent is the foreign key from which the Child Relationship records will be cloned.\n\nAfter saving click \"Add Source Info\" to continue.,114158=class={class}\nchild={child}\nfkfield={spfield}\ncpfield=\nsections=after_store"
pc sys 20120102 Meta 114100 trigger_clone_default_record "114101=trigger_clone_default_record,114102=trigger_{class}clone_default_{child}record,114103=clone_default_for_group,114104=1,114191=1,114138=1,114120=A Child Relationship record with the key \"default\" must exist for cloning when each new Class instance is created.,114158=class={class}\ncclass={cclass}\ngfield={cname}\nsections=after_store"
pc sys 20120102 Meta 114100 trigger_clone_default_children "114101=trigger_clone_default_children,114102=trigger_create_{class}{child}default_records[_if_]{tfield}[is_]{tvalue},114103=trigger_clone_default_children,114104=1,114126=1,114115=1,114191=1,114138=1,114117=1,114140=115441$115100.301405,301710=trigger_clone_default_children_info,114120=Child Relationship is to the class whose default instances will be cloned when a new record is created. Test Field [== Test Value] is an optional extra precondition.\n\nUse option \"-skip_clones\" to not perform this if the record being created is itself a clone or option \"-use_clone_children\" to use the child records of the clone.\n\nAfter saving click \"Add Info\" to complete.,114158=class={class}\nchild={child}\ntfield={tfield}\ntvalue={tvalue}\nskip_clones={?-skip_clones}\nuse_clone_children={?-use_clone_children}\nsections=after_store"
pc sys 20120102 Meta 114100 trigger_clone_for_fk_children "114101=trigger_clone_for_fk_children,114102=trigger_clone_{class}for_{spfield}children,114103=trigger_clone_for_fk_children,114104=1,114125=1,114112=1,114126=1,114114=1,114140=115437$115100.301405,301710=trigger_clone_for_fk_children_sinfo,114120=Source Parent is the FK whose children will have clones the created for. Test Field is an optional precondition\n\nAfter saving click \"Add Source Info\" to continue.,114158=class={class}\ntfield={tfield}\nsparent={spfield}\nsections=after_store"
pc sys 20120102 Meta 114100 trigger_clone_fk_children "114101=trigger_clone_fk_children,114102=trigger_{class}clone_{child}records,114103=clone_default_group_children,114104=1,114191=1,114138=1,114140=115432$115100.301405,301710=trigger_clone_fk_children_cinfo,114120=Will clone all default child records for the Child Relationship accoding to its FK back to this class.\n\nAfter saving click \"Add Child Info\" to continue.,114158=class={class}\nchild={child}\ncclass={cclass}\nsections=after_store"
pc sys 20120102 Meta 114100 trigger_copy_children_from_fk "114101=trigger_copy_children_from_fk,114102=trigger_{class}copy_child_{child}records_from_{spfield},114103=copy_child_links_from_fk,114104=1,114125=1,114112=1,114191=1,114138=1,114140=115437$115100.301405,301710=trigger_copy_children_from_fk_sinfo,114120=Source Parent is the fk whose children are the source for creating new Child Relationship records.\n\nAfter saving click \"Add Source Info\" to continue.,114158=cclass={cclass}\ncfield={child}\nfkclass={spclass}\nfkfield={spfield}\ncombine_keys=\nfk_from_child=\nsections=includes after_store"
pc sys 20120102 Meta 114100 trigger_copy_fk_children_below_other_fk "114101=trigger_copy_fk_children_below_other_fk,114102=trigger_{class}copy_{sfield}children_below_{spfield}[if_]{tfield},114103=trigger_copy_fk_children_below_other_fk,114104=1,114128=1,114113=1,114125=1,114112=1,114126=1,114117=1,114140=115437$115100.301405,301710=trigger_copy_fk_children_below_other_fk_sinfo,114120=Source Field is the source FK for child records to be copied from and Source Parent is the destination FK for child records to be copied to. Test Field is an optional precondition.\n\nUse option \"-create_or_update\" to allow updating of child records that already exist.\n\nAfter saving click \"Add Source Info\" to continue.,114158=class={class}\nsrc_fk={sfield}\ndest_fk={spfield}\ntfield={tfield}\ncreate_or_update={?-create_or_update}\nsections=includes after_store"
pc sys 20120102 Meta 114100 trigger_copy_self_children_for_create "114101=trigger_copy_self_children_for_create,114102=trigger_{class}copy_created_record_below_each_{spfield}child,114103=clone_children_for_create,114104=1,114125=1,114112=1,114140=115432$115100.301405,301710=trigger_copy_self_children_for_create_children,114120=Source Parent is the \"owning parent\" that will be used to find the parent of each new copy record."
pc sys 20120102 Meta 114100 trigger_copy_self_children_for_update "114101=trigger_copy_self_children_for_update,114102=trigger_{class}copy_updated_record_for_{child}children,114103=clone_children_for_update,114104=1,114124=1,114125=1,114112=1,114191=1,114138=1,114155=1,114120=Child Relationship must be a self-relationship. Source Parent is the \"owning parent\" that will need to be restored after copying all fields and Field is another optional field that will have its value restored."
pc sys 20120102 Meta 114100 trigger_create_child "114101=trigger_create_child,114102=trigger_{class}create_child_{child}[in_]{procedure}[if_]{tfield}[when_]{modifier},114103=create_child,114104=1,114124=1,114126=1,114191=1,114138=1,114145=1,114128=1,114125=1,114197=1,114171=1,114204=1,114117=1,114120=Field is an optional integer field to use as the child record's key suffix. Source Parent is an optional FK for cloning and Test Field and Modifier are an optional preconditions. If Procedure is provided then it will be used as the source injection point. If Procedure Arg is supplied then it is assumed to be the output argument. If Source Field is provided then its value will be used as the procedure output.\n\nUse option \"-create_only\" to apply to records being created only (this optional is not applicable if using Procedure). If not using Field and Test Field has been included then use option \"-use_test_field_as_suffix\" to use its key as a suffix or use the option \"-use_dtm_as_suffix\" to use the current dtm value. Use option \"-append_loopval\" to append the loop iteration value to the child key.,114158=class={class}\nmodifier={modifier}\ntfield={tfield}\ntfistexttype={tfistexttype}\nchild={child}\nkey_suffix={field}\nclone_field={spfield}\nprocedure={procedure}\noutput_arg={procedure_arg}\noutput_field={sfield}\nfield_list={field_pairs}\ncreate_only={?-create_only}\nuse_dtm_as_suffix={?-use_dtm_as_suffix}\nuse_test_field_as_suffix={?-use_test_field_as_suffix}\nappend_loopval={?-append_loopval}\nsections=procedure after_store get_always_required_field_names"
pc sys 20120102 Meta 114100 trigger_create_child_field_list "114101=trigger_create_child_field_list,114102=field_pair_list,114103=n/a,114124=1,114135=1,114112=1,114168=1,114171=1,114148=1,114140=115431$115100.301405,301700=trigger_create_child,301710=field_pair,114147=1,114120=Use Field and Value to force a specific field to a specific value. If Procedure is supplied then it will be called after the record has been created.,114158=field={field}\npfield={spfield}\nvalue={value_literal}\ncprocedure={procedure}"
pc sys 20120102 Meta 114100 trigger_execute "114101=trigger_execute,114102=trigger_exec_{class}{procedure}[in_]{oprocedure}[if_]{tfield},114103=trigger_execute,114104=1,114124=1,114174=1,114183=1,114171=1,114106=1,114208=1,114128=1,114126=1,114117=1,114120=Field is optionally for \"fields and values\". If using \"fields and values\" and then the assignment of Other Field to the value of Other Field 2 will be appended. Procedure should have beeen used in a \"gen_bulk\"\\, \"gen_clone\"\\, \"gen_create\" or \"gen_execute\" specification. Other Procedure is optionally where code will be injected and Source Field is optionally used to set the \"@uid\" session variable for the external script. Test Field is an optional precondition.\n\nUse Option \"-async\" for asynchronus processing or \"-delay\" to delay processing until transaction commit and \"-after_store\" to delay execution until record has been stored. Use option \"-skip_restore\" to not execute when performing a storage restore and option \"-has_key_already\" to not set the special \"@key\" session variable. Use option \"-func=<func>\" to transform the value of Other Field 2 and \"-session_var=<varname>\" to include a session variable prefix parameter. Use option \"-src_is_for_func\" to instead use Source Field as a precondition for setting Other Field to the value of Other Field 2.,114158=class={class}\nfield={field}\nfname={ofield}\nfvalue={o2field}\nprocedure={procedure}\noprocedure={oprocedure}\nsfield={sfield}\ntfield={tfield}\nasync={?-async}\ndelay={?-delay}\nafter_store={?-after_store}\nskip_restore={?-skip_restore}\nhas_key_already={?-has_key_already}\nsrc_is_for_func={?-src_is_for_func}\nfunc={#-func}\nsession_var={#-session_var}\nscript={model}_{class}_{procedure}\nsections=procedure for_store after_store"
pc sys 20120102 Meta 114100 trigger_parent_field_total "114101=trigger_parent_field_total,114102=trigger_{class}total_{field}to_{spfield}{scfield}[and_]{ofield}[to_{spfield}]{oscfield}[and_]{o2field}[to_{spfield}]{o2scfield}[if_null_]{tfield}[when_]{sfield},114103=total_child_field_in_parent,114104=1,114124=1,114105=1,114174=1,114183=1,114111=31,114128=1,114125=1,114112=1,114121=1,114122=1,114176=1,114205=1,114117=1,114126=1,114120=Source Child is used to hold the accumlated Field record values for each Source Parent record. Other Field and Other Source Child are an optional secondary total with Other Field 2 and Other Source Field 2 being an optional tertiary total.\n\nSource Field is an optional precondition and Test Field is an optional null value test.\n\nUse option \"-after_self\" to perform update/destroy after the record itself has been processed.,114158=class={class}\nnfield={field}\nn2field={ofield}\nn3field={o2field}\nsfield={sfield}\ntfield={tfield}\npfield={spfield}\npnfield={scfield}\npn2field={oscfield}\npn3field={o2scfield}\nafter_self={?-after_self}\nsections=for_store after_store for_destroy after_destroy get_always_required_field_names"
pc sys 20120102 Meta 114100 trigger_parent_update "114101=trigger_parent_update,114102=trigger_{class}to_update_{spfield}[setting_self_to_]{scfield}[if_]{tfield},114103=update_parent,114104=1,114125=1,114112=1,114121=1,114126=1,114117=1,114135=1,114120=Test Field is an optional precondition and Source Child is an optional self reference FK from the parent.\n\nUse option \"-after_store\" to delay update until record is stored and option \"-destroy_also\" to also update the parent when the record is being destroyed.,114158=class={class}\nspfield={spfield}\nscfield={scfield}\ntfield={tfield}\nafter_store={?-after_store}\ndestroy_also={?-destroy_also}\nsections=for_store after_store for_destroy after_destroy"
pc sys 20120102 Meta 114100 trigger_parent_update_cascade "114101=trigger_parent_update_cascade,114102=trigger_{class}to_update_{spfield}[if_]{tfield}[is_]{tvalue},114103=update_parent_cascade,114104=1,114125=1,114112=1,114126=1,114115=1,114120=Source Parent will be updated. Use Test Field/Test Value for an optional foreign key test."
pc sys 20120102 Meta 114100 trigger_parent_update_field "114101=trigger_parent_update_field,114102=trigger_{class}to_update_{spfield}{scfield}to_{field}[and_{spfield}]{oscfield}[to_]{ofield}[and_{spfield}]{o2scfield}[to_]{o2field}[if_]{tfield}[when_]{modifier},114103=trigger_parent_update_field,114104=1,114124=1,114105=1,114174=1,114183=1,114125=1,114112=1,114121=1,114122=1,114176=1,114205=1,114197=1,114126=1,114117=1,114120=Source Parent FK will be updated with Source Child assigned to the value of Field. Other Source Child will be assigned to Other Field if provided and likewise for Other Source Child 2 and Other Field 2. Test Field and Modifier are both optional preconditions.\n\nUse option \"-after_store\" to delay update until record is stored and use option \"-create_only\" to apply to records being created only. Use \"-for_destroy\" to instead apply when record is being destroyed.,114158=class={class}\nfield={field}\nofield={ofield}\no2field={o2field}\nspfield={spfield}\nscfield={scfield}\noscfield={oscfield}\no2scfield={o2scfield}\ntfield={tfield}\nmodifier={modifier}\nafter_store={?-after_store}\ncreate_only={?-create_only}\nfor_destroy={?-for_destroy}\nsections=for_store after_store for_destroy"
pc sys 20120102 Meta 114100 trigger_parent_update_old_and_new "114101=trigger_parent_update_old_and_new,114102=trigger_{class}to_update_{spfield}old_and_new,114103=trigger_parent_update_old_and_new,114104=1,114125=1,114112=1,114120=Source Parent FK records (old and new) will be updated if changed.,114158=class={class}\npfield={spfield}\npclass={spclass}\nsections=after_store"
pc sys 20120102 Meta 114100 trigger_prior_version "114101=trigger_prior_version,114102=trigger_{class}child_{child},114103=prior_version,114104=1,114124=1,114105=1,114126=1,114115=1,114191=1,114138=1,114145=1,114117=1,114120=Field is the \"version\" field and Child Relationship is for the \"prior version\" records. After saving add fields to the \"field list\" for copying to the prior version class.\n\nUse option \"-major_only\" if version is not in \"major.minor\" format.,114158=class={class}\nver_field={field}\ntest_field={tfield}\ntest_value={tvalue}\nmajor_only={?-major_only}\npvchild={child}\nfield_list={field_pairs}\nsections=for_store"
pc sys 20120102 Meta 114100 trigger_prior_version_fields_list "114101=trigger_prior_version_fields_list,114102=field_pair_g_list,114103=n/a,114168=1,114148=1,114140=115431$115100.301405,301700=trigger_prior_version,301710=field_pair_g,114147=1"
pc sys 20120102 Meta 114100 trigger_remove_matching_children_from_fk "114101=trigger_remove_matching_children_from_fk,114102=trigger_{class}remove_matching_child_{child}records_from_{spfield}[if_]{tfield},114103=trigger_remove_matching_children_from_fk,114104=1,114125=1,114112=1,114191=1,114138=1,114126=1,114140=115437$115100.301405,301710=trigger_remove_matching_children_from_fk_sinfo,114120=Source Parent is the fk whose children matching the Child Relationship records will be removed. Test Field is an optional precondition.\n\nAfter saving click \"Add Source Info\" to continue.,114158=cclass={cclass}\ncfield={child}\nfkclass={spclass}\nfkfield={spfield}\ntfield={tfield}\nsections=includes after_store"
pc sys 20120102 Meta 114100 user_info "114101=user_info,114102=user_info,114103=user_info,114104=1,114124=1,114105=1,114128=1,114125=1,114171=1,114174=1,114183=1,114126=1,114114=1,114120=Field is the \"user id\"\\, with Other Field and Other Field 2 optionally available as \"extra1\" and \"extra2\" respectively. Procedure is an optional \"install GPG public key\" with additional optional fields Source Field for the \"email address\" field and Source Parent to specify the \"group\" field. Test Field is the \"password\" for logging in.,114163=1,114158=cid={class_id}\nclass={class}\nuid={field_id}\nextra1={ofield_id}\nextra2={o2field_id}\ngpg_install={procedure_id}\npwd={tfield_id}\nemail={sfield_id}\ngroup={spfield_id}\nparent="
pc sys 20120102 Meta 114100 user_info_extra "114101=user_info_extra,114102=extra,114103=n/a,114104=1,114139=1,114124=1,114128=1,114125=1,114126=1,114174=1,114183=1,301700=user_info,114140=115437$115100.301405,301710=user_info_extra_select,114147=1,114151=1,114120=Field is for \"active\" and Test Field is for \"permissions\". Other Field is for \"access level\" (if applicable)\\, Other Field 2 is for \"user hash\" (if applicable) and Source Field is for \"user name\" (if applicable). If Source Parent is provided then after saving click on \"Add Source Info\" to add a general user list restriction.,114158=active={field_id}\nperm={tfield_id}\nname={sfield_id}\nother={spfield_id}\nsfield={spfield_id}\nslevel={ofield_id}\nhash={o2field_id}\npfield=\npcfield=\nofield=\nslperm=\nsclsnm=\nostrict=\nkoverride=\nsoverride="
pc sys 20120102 Meta 114100 user_info_extra_2 "114101=user_info_extra_2,114102=extra_2,114103=n/a,114104=1,114139=1,114124=1,114174=1,114183=1,114128=1,114126=1,301700=user_info,114147=1,114151=1,114120=Field is for \"unique\"\\, Other Field is for \"has authenticated\" and Other Field 2 is for \"expected pin value\". Source Field is for \"tz name\" and Test Field is for \"encryption key\".,114158=unique={field_id}\nhas_auth={ofield_id}\npin_value={o2field_id}\ntz_name={sfield_id}\ncrypt_key={tfield_id}"
pc sys 20120102 Meta 114100 qlink_info "114101=qlink_info,114102=qlink_info,114103=qlink_info,114104=1,114124=1,114105=1,114125=1,114112=1,114126=1,114115=1,114163=1,114140=115441$115100.301405,301710=qlink_info_details,114120=Field is the \"order\" field\\, Source Parent is the \"user\" class and Test Field/Value is an optional filter. After saving click Add Info to complete.,114158=cid={class_id}\norder={field_id}\nparent={spfield_id}\ntfield={tfield_id}\ntvalue={tvalue}"
pc sys 20120102 Meta 114100 sys_info "114101=sys_info,114102=sys_info,114103=sys_info,114104=1,114124=1,114105=1,114128=1,114154=1,114174=1,114183=1,114184=1,114126=1,114114=1,114120=Field is for \"actions\"\\, Other Field for \"message\" and Other Field 2 for \"name\". Source Field is for \"reference\" field and Test Field is for \"vendor\".,114163=1,114158=cid={class_id}\nclass={class}\nactions={field_id}\nmessage={ofield_id}\nname={o2field_id}\nreference={sfield_id}\nvendor={tfield_id}"
;
session_variable @allow_async false
session_variable @package_type_path .
@ifdef %CIYAM_TEST_STORAGE%
session_variable @attached_file_path .
@endif
~cp Standard.package.bun.gz new.package.bun.gz
pc admin 20120102 100 135100 standard "135101=New_Package_Type"
pu admin 20120102 100 135100 standard "135103=new.package.bun.gz"
pe admin 20120102 100 135100 standard 135410
~cp Auto_Code.package.bun.gz new.package.bun.gz
pc admin 20120102 100 135100 auto_code "135101=New_Package_Type"
pu admin 20120102 100 135100 auto_code "135103=new.package.bun.gz"
pe admin 20120102 100 135100 auto_code 135410
~cp User.package.bun.gz new.package.bun.gz
pc admin 20120102 100 135100 user "135101=New_Package_Type"
pu admin 20120102 100 135100 user "135103=new.package.bun.gz"
pe admin 20120102 100 135100 user 135410
~cp Group.package.bun.gz new.package.bun.gz
pc admin 20120102 100 135100 group "135101=New_Package_Type"
pu admin 20120102 100 135100 group "135103=new.package.bun.gz"
pe admin 20120102 100 135100 group 135410
~rm new.package.bun.gz
storage_term
quit
