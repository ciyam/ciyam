`{`@eq`(`'after_store`'`,`$section`)`|`@eq`(`'procedure`'`,`$section`)\
   // [(start create_child)] `{`$arg_id`}
`{`@eq`(`$arg_create_only`,`'`'`)\
`{`!`@eq`(`$arg_tfield`,`'`'`)\
`{`@eq`(`$arg_tfistexttype`,`'0`'`)\
   if( get_obj( ).`{`$arg_tfield`}( )`{`!`@eq`(`$arg_modifier`,`'`'`) && ( state & c_modifier_`{`$arg_modifier`} )`} )
`,\
   if( !is_null( get_obj( ).`{`$arg_tfield`}( ) )`{`!`@eq`(`$arg_modifier`,`'`'`) && ( state & c_modifier_`{`$arg_modifier`}`} ) )
`}`,\
`{`@eq`(`$arg_modifier`,`'`'`)\
   // NOTE: Empty code block for scope purposes.
`,\
   if( state & c_modifier_`{`$arg_modifier`} )
`}`}`,\
`{`@eq`(`$arg_tfistexttype`,`'0`'`)\
   if( is_create`{`!`@eq`(`$arg_tfield`,`'`'`)
    && get_obj( ).`{`$arg_tfield`}( )`}`{`!`@eq`(`$arg_modifier`,`'`'`) && ( state & c_modifier_`{`$arg_modifier`} )`} )
`,\
   if( is_create`{`!`@eq`(`$arg_tfield`,`'`'`)
    && !is_null( get_obj( ).`{`$arg_tfield`}( ) )`}`{`!`@eq`(`$arg_modifier`,`'`'`) && ( state & c_modifier_`{`$arg_modifier`} )`} )
`}`}\
   {
`{`@eq`(`$arg_key_suffix`,`'`'`)\
`{`@eq`(`$arg_tfield`,`'`'`)`|`@eq`(`$arg_use_test_field_as_suffix`,`'`'`)\
`{`@eq`(`$arg_use_dtm_as_suffix`,`'`'`)\
      string child_key( get_obj( ).get_key( ) + "_C" );
`,\
      string child_key( get_obj( ).get_key( ) + "_" + get_dtm( ) );
`}`,\
      string child_key( get_obj( ).get_key( ) + "_" + get_obj( ).`{`$arg_tfield`}( ).get_key( ) );
`}`,\
      string child_key( construct_key_from_int( get_obj( ).get_key( ), get_obj( ).`{`$arg_key_suffix`}( ) ) );
`}`{`@eq`(`$arg_append_loopval`,`'true`'`)
      child_key += get_obj( ).get_variable( get_special_var_name( e_special_var_loop ) );
`}`{`@eq`(`$arg_is_clone`,`'true`'`)
      child_key += " " + get_obj( ).get_key( );
`}`{`!`@eq`(`$arg_clone_field`,`'`'`)
      if( !is_null( get_obj( ).`{`$arg_clone_field`}( ) ) )
         child_key += " " + get_obj( ).`{`$arg_clone_field`}( ).get_key( );
`}
      get_obj( ).child_`{`$arg_child`}( ).op_create( child_key );

      get_obj( ).child_`{`$arg_child`}( ).`{`$arg_pfield`}( get_obj( ).get_key( ) );
`{`!`@eq`(`$arg_field`,`'`'`)\
      get_obj( ).child_`{`$arg_child`}( ).`{`$arg_field`}( `{`$arg_value`} );
`}`{`?`$arg_field_list`[`$arg_field_list`%,`,
      copy_field_or_file_and_field(
       get_obj( ).child_`{`$arg_child`}( ),
       get_obj( ).child_`{`$arg_child`}( ).get_key( ),
       "\\0", get_obj( ), "\\1", storage_locked_for_admin( ) );
`]`}
      get_obj( ).child_`{`$arg_child`}( ).op_apply( );
`{`!`@eq`(`$arg_cprocedure`,`'`'`)
      get_obj( ).child_`{`$arg_child`}( ).`{`$arg_cprocedure`}( );
`}`{`!`@eq`(`$arg_output_arg`,`'`'`)`&`@eq`(`'procedure`'`,`$section`)
`{`!`@eq`(`$arg_output_field`,`'`'`)\
      `{`$arg_output_arg`} = to_string( get_obj( ).`{`$arg_output_field`}( ) );
`,\
      // FUTURE: The return message itself should be a module string.
      `{`$arg_output_arg`} = get_obj( ).get_display_name( ) + " "
       + get_module_string( "procedure_" + string( c_procedure_id_`{`$arg_procedure`} ) ) + " completed.";
`}`}\
   }
   // [(finish create_child)] `{`$arg_id`}
`}
