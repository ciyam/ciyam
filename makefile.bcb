##
## Usage:
##  make [<target1> [<target2>] [...]]
##
##  where:
##  <target>   is:                  to:
##             all                  make all targets
##             dtm                  creates make.dtm
##             clean                clean all targets
##             usage                display this output
##
##             base                 make base.lib target
##             commands             make commands.lib target
##             ciyam_base           make ciyam_base.dll target
##             Meta                 make Meta.dll target
##             bundle               make bundle.exe target
##             check_source         make check_source.exe target
##             ciyam_client         make ciyam_client.exe target
##             ciyam_interface      make ciyam_interface.exe target
##             ciyam_server         make ciyam_server.exe target
##             construct            make construct.exe target
##             diff                 make diff.exe target
##             diffp                make diffp.exe target
##             dump                 make dump.exe target
##             extract              make extract.exe target
##             generate_commands    make generate_commands.exe target
##             modeller             make modeller.exe target
##             test                 make test.exe target
##             test_cache           make test_cache.exe target
##             test_fcgi            make test_fcgi.exe target
##             test_numeric         make test_numeric.exe target
##             test_ods             make test_ods.exe target
##             test_parser          make test_parser.exe target
##             test_pdf_gen         make test_pdf_gen.exe target
##             test_sql             make test_sql.exe target
##             unbundle             make unbundle.exe target
##             upload               make upload.exe target
##             xrep                 make xrep.exe target
##             xvars                make xvars.exe target
##

.autodepend

!ifndef BCCDIR
! error Need to set BCCDIR environment variable (e.g. C:\Borland\BCC55)
!endif

BCB=$(BCCDIR)

# Flags for tools...
THREADS_SINGLE=-tWM-
THREADS_MULTIPLE=-tWM

DYNAMIC_LIBRARY=-WD
DYNAMIC_RUNTIME=-D_RTLDLL

!ifdef DEBUG
DEBUG_CFLAGS=-D_DEBUG -v -y -Od -r- -vi-
DEBUG_LFLAGS=-v
DEBUG_AFLAGS=/P512
!else
DEBUG_CFLAGS=-O2
DEBUG_LFLAGS=
DEBUG_AFLAGS=/P64
!endif

!ifdef CODEGUARD
CODEGUARD_CFLAGS=-vG
CODEGUARD_LIBRARY=cg32.lib
!else
CODEGUARD_CFLAGS=
CODEGUARD_LIBRARY=
!endif

CPPFLAGS=-w-8004 -I. $(CFLAGS) $(DEBUG_CFLAGS) $(CODEGUARD_CFLAGS)
BINDFLAGS=$(DEBUG_AFLAGS)
LINKFLAGS=-q $(DEBUG_LFLAGS)
EXPORTFLAGS=-w

# Libraries and object files...
CONSOLE_RTOBJS=c0x32.obj
CONSOLE_LFLAGS=-ap -Tpe

DYNAMIC_RTOBJS=c0d32.obj
DYNAMIC_LFLAGS=-Tpd

RTL_STATIC_STHREAD=cw32.lib
RTL_STATIC_MTHREAD=cw32mt.lib

RTL_DYNAMIC_STHREAD=cw32i.lib
RTL_DYNAMIC_MTHREAD=cw32mti.lib

COMMON_LIBS=import32.lib $(CODEGUARD_LIBRARY)

WINSOCK_LIBS=$(BCB)\Lib\Psdk\wsock32.lib $(BCB)\Lib\Psdk\iphlpapi.lib
OPENSSL_LIBS=libeay32.lib ssleay32.lib

LIBFCGI_LIBS=libfcgi.lib

LIBHARU_LIBS=libhpdf.lib

LIBICONV_LIBS=iconv.lib

MYSQL_LIBS=libmysql.lib

ZLIB_LIBS=zlib1.lib

# Tools and implicit rules...
CPP=bcc32.exe

BIND=@echo Binding $&............... &tlib
LINK=@echo Linking $&............... &ilink32
EXPORT=@echo Exporting $&............... &implib

# Remove implicit .cpp to .exe rule to ensure correct linkage.
.cpp.exe:

# Change implicit .cpp to .obj rule to support multiple source file compilation.
.cpp.obj:
 @compile.bat {$< }
# @test_compile.bat {$< }

# Custom rule to generate command definitions.
.cms.cmh:
 @generate_commands $&.cms

#CPP_NORMAL_OPT=STATIC_RTL_SINGLE_THREAD
#CPP_NORMAL_OPT=STATIC_RTL_MULTIPLE_THREADS
#CPP_NORMAL_OPT=DYNAMIC_RTL_SINGLE_THREAD
CPP_NORMAL_OPT=DYNAMIC_RTL_MULTIPLE_THREADS

#CPP_DYNAMIC_OPT=DYNAMIC_RTL_SINGLE_THREAD
CPP_DYNAMIC_OPT=DYNAMIC_RTL_MULTIPLE_THREADS

CPP_NORMAL_SRTL_ST=@$(CPP) -q $(CPPFLAGS) $(THREADS_SINGLE) -H=$&.csm -Hc -c
CPP_NORMAL_SRTL_MT=@$(CPP) -q $(CPPFLAGS) $(THREADS_MULTIPLE) -H=$&.csm -Hc -c

CPP_NORMAL_DRTL_ST=@$(CPP) -q $(CPPFLAGS) $(DYNAMIC_RUNTIME) $(THREADS_SINGLE) -H=$&.csm -Hc -c
CPP_NORMAL_DRTL_MT=@$(CPP) -q $(CPPFLAGS) $(DYNAMIC_RUNTIME) $(THREADS_MULTIPLE) -H=$&.csm -Hc -c

CPP_DYNAMIC_DRTL_ST=@$(CPP) -q $(CPPFLAGS) $(DYNAMIC_LIBRARY) $(DYNAMIC_RUNTIME) $(THREADS_SINGLE) -H=$&.csm -Hc -c
CPP_DYNAMIC_DRTL_MT=@$(CPP) -q $(CPPFLAGS) $(DYNAMIC_LIBRARY) $(DYNAMIC_RUNTIME) $(THREADS_MULTIPLE) -H=$&.csm -Hc -c

BIND_NORMAL=$(BINDFLAGS) $@

LINK_NORMAL_SRTL_ST=$(LINKFLAGS) $(CONSOLE_LFLAGS) $** $(CONSOLE_RTOBJS), $&.exe, ,$(COMMON_LIBS) $(RTL_STATIC_STHREAD)
LINK_NORMAL_SRTL_MT=$(LINKFLAGS) $(CONSOLE_LFLAGS) $** $(CONSOLE_RTOBJS), $&.exe, ,$(COMMON_LIBS) $(RTL_STATIC_MTHREAD)

LINK_NORMAL_DRTL_ST=$(LINKFLAGS) $(CONSOLE_LFLAGS) $** $(CONSOLE_RTOBJS), $&.exe, ,$(COMMON_LIBS) $(RTL_DYNAMIC_STHREAD)
LINK_NORMAL_DRTL_MT=$(LINKFLAGS) $(CONSOLE_LFLAGS) $** $(CONSOLE_RTOBJS), $&.exe, ,$(COMMON_LIBS) $(RTL_DYNAMIC_MTHREAD)

LINK_DYNAMIC_DRTL_ST=$(LINKFLAGS) $(DYNAMIC_LFLAGS) $** $(DYNAMIC_RTOBJS), $&.dll, ,$(COMMON_LIBS) $(RTL_DYNAMIC_STHREAD)
LINK_DYNAMIC_DRTL_MT=$(LINKFLAGS) $(DYNAMIC_LFLAGS) $** $(DYNAMIC_RTOBJS), $&.dll, ,$(COMMON_LIBS) $(RTL_DYNAMIC_MTHREAD)

!if $(CPP_NORMAL_OPT) == STATIC_RTL_SINGLE_THREAD
CPP_NORMAL=$(CPP_NORMAL_SRTL_ST)
LINK_NORMAL=$(LINK_NORMAL_SRTL_ST)
!elif $(CPP_NORMAL_OPT) == STATIC_RTL_MULTIPLE_THREADS
CPP_NORMAL=$(CPP_NORMAL_SRTL_MT)
LINK_NORMAL=$(LINK_NORMAL_SRTL_MT)
!elif $(CPP_NORMAL_OPT) == DYNAMIC_RTL_SINGLE_THREAD
CPP_NORMAL=$(CPP_NORMAL_DRTL_ST)
LINK_NORMAL=$(LINK_NORMAL_DRTL_ST)
!elif $(CPP_NORMAL_OPT) == DYNAMIC_RTL_MULTIPLE_THREADS
CPP_NORMAL=$(CPP_NORMAL_DRTL_MT)
LINK_NORMAL=$(LINK_NORMAL_DRTL_MT)
!else
! error Unexpected CPP_NORMAL_OPT value $(CPP_NORMAL_OPT)
!endif

!if $(CPP_DYNAMIC_OPT) == DYNAMIC_RTL_SINGLE_THREAD
CPP_DYNAMIC=$(CPP_DYNAMIC_DRTL_ST)
LINK_DYNAMIC=$(LINK_DYNAMIC_DRTL_ST)
!elif $(CPP_DYNAMIC_OPT) == DYNAMIC_RTL_MULTIPLE_THREADS
CPP_DYNAMIC=$(CPP_DYNAMIC_DRTL_MT)
LINK_DYNAMIC=$(LINK_DYNAMIC_DRTL_MT)
!else
! error Unexpected CPP_DYNAMIC_OPT value $(CPP_DYNAMIC_OPT)
!endif

TARGET_BASE=base.lib
TARGET_BASE_OBJECTS=base64.obj\
 console.obj\
 console_commands.obj\
 command_parser.obj\
 command_handler.obj\
 command_processor.obj\
 crypt_stream.obj\
 date_time.obj\
 dynamic_library.obj\
 file_buffer.obj\
 format.obj\
 fs_iterator.obj\
 hashcash.obj\
 mac.obj\
 md5.obj\
 mime.obj\
 numeric.obj\
 ods.obj\
 pdf.obj\
 pdf_gen.obj\
 pop3.obj\
 ptypes.obj\
 read_write_buffer.obj\
 read_write_buffered_stream.obj\
 regex.obj\
 sio.obj\
 sha1.obj\
 smtp.obj\
 sockets.obj\
 storable_file.obj\
 sql_db.obj\
 tcp_read_write_buffer.obj\
 text_file_buffer.obj\
 utilities.obj
TARGET_BASE_ERRFILE=base.err

TARGET_COMMANDS=commands.lib
TARGET_COMMANDS_OBJECTS=command_parser.obj\
 utilities.obj\
 regex.obj
TARGET_COMMANDS_ERRFILE=commands.err

TARGET_CIYAM_BASE=ciyam_base.dll
TARGET_CIYAM_BASE_EXPORT=ciyam_base.lib
TARGET_CIYAM_BASE_OBJECTS=ciyam_base.obj\
 ciyam_base_command_handler.obj\
 ciyam_base_date_time.obj\
 ciyam_base_file_buffer.obj\
 ciyam_base_numeric.obj\
 ciyam_base_ods.obj\
 class_base.obj\
 commands_date_time.obj\
 commands_numeric.obj\
 mail_source.obj\
 module_management.obj
TARGET_CIYAM_BASE_COMMANDS=date_time.cmh\
 numeric.cmh
TARGET_CIYAM_BASE_ERRFILE=ciyam_base.err

TARGET_META=Meta.dll
TARGET_META_EXPORT=Meta.lib
TARGET_META_OBJECTS=Meta.obj\
 Meta_Application.obj\
 Meta_Auto_Code.obj\
 Meta_Class.obj\
 Meta_Enum.obj\
 Meta_Enum_Item.obj\
 Meta_Field.obj\
 Meta_Index.obj\
 Meta_Initial_Record.obj\
 Meta_Initial_Record_Value.obj\
 Meta_List.obj\
 Meta_List_Field.obj\
 Meta_List_Field_Type.obj\
 Meta_List_Type.obj\
 Meta_Model.obj\
 Meta_Modifier.obj\
 Meta_Modifier_Affect.obj\
 Meta_Module.obj\
 Meta_Package.obj\
 Meta_Package_Option.obj\
 Meta_Package_Type.obj\
 Meta_Permission.obj\
 Meta_Procedure.obj\
 Meta_Procedure_Arg.obj\
 Meta_Relationship.obj\
 Meta_Specification.obj\
 Meta_Specification_Content_Page.obj\
 Meta_Specification_Copy_Child_Links.obj\
 Meta_Specification_Field_Action.obj\
 Meta_Specification_Type.obj\
 Meta_Type.obj\
 Meta_User.obj\
 Meta_View.obj\
 Meta_View_Field.obj\
 Meta_View_Field_Type.obj\
 Meta_View_Type.obj\
 Meta_Workgroup.obj
TARGET_META_COMMANDS=Meta.cmh\
 Meta_Application.cmh\
 Meta_Auto_Code.cmh\
 Meta_Class.cmh\
 Meta_Enum.cmh\
 Meta_Enum_Item.cmh\
 Meta_Field.cmh\
 Meta_Index.cmh\
 Meta_Initial_Record.cmh\
 Meta_Initial_Record_Value.cmh\
 Meta_List.cmh\
 Meta_List_Field.cmh\
 Meta_List_Field_Type.cmh\
 Meta_List_Type.cmh\
 Meta_Model.cmh\
 Meta_Modifier.cmh\
 Meta_Modifier_Affect.cmh\
 Meta_Module.cmh\
 Meta_Package.cmh\
 Meta_Package_Option.cmh\
 Meta_Package_Type.cmh\
 Meta_Permission.cmh\
 Meta_Procedure.cmh\
 Meta_Procedure_Arg.cmh\
 Meta_Relationship.cmh\
 Meta_Specification.cmh\
 Meta_Specification_Content_Page.cmh\
 Meta_Specification_Copy_Child_Links.cmh\
 Meta_Specification_Field_Action.cmh\
 Meta_Specification_Type.cmh\
 Meta_Type.cmh\
 Meta_User.cmh\
 Meta_View.cmh\
 Meta_View_Field.cmh\
 Meta_View_Field_Type.cmh\
 Meta_View_Type.cmh\
 Meta_Workgroup.cmh
TARGET_META_ERRFILE=Meta.err

TARGET_BUNDLE=bundle.exe
TARGET_BUNDLE_OBJECTS=bundle.obj

TARGET_CHECK_SOURCE=check_source.exe
TARGET_CHECK_SOURCE_OBJECTS=check_source.obj

TARGET_CIYAM_CLIENT=ciyam_client.exe
TARGET_CIYAM_CLIENT_OBJECTS=ciyam_client.obj

TARGET_CIYAM_INTERFACE=ciyam_interface.exe
TARGET_CIYAM_INTERFACE_OBJECTS=ciyam_interface.obj\
 fcgi_cmds.obj\
 fcgi_info.obj\
 fcgi_list.obj\
 fcgi_parser.obj\
 fcgi_utils.obj\
 fcgi_view.obj

TARGET_CIYAM_SERVER=ciyam_server.exe
TARGET_CIYAM_SERVER_OBJECTS=auto_script.obj\
 ciyam_server.obj\
 ciyam_session.obj
TARGET_CIYAM_SERVER_COMMANDS=ciyam_session.cmh

TARGET_CONSTRUCT=construct.exe
TARGET_CONSTRUCT_OBJECTS=construct.obj

TARGET_DIFF=diff.exe
TARGET_DIFF_OBJECTS=diff.obj

TARGET_DIFFP=diffp.exe
TARGET_DIFFP_OBJECTS=diffp.obj

TARGET_DUMP=dump.exe
TARGET_DUMP_OBJECTS=dump.obj

TARGET_EXTRACT=extract.exe
TARGET_EXTRACT_OBJECTS=extract.obj

TARGET_GENERATE_COMMANDS=generate_commands.exe
TARGET_GENERATE_COMMANDS_OBJECTS=generate_commands.obj

TARGET_MODELLER=modeller.exe
TARGET_MODELLER_OBJECTS=model.obj\
 model_domains.obj\
 model_specifications.obj\
 interface_specifications.obj\
 modeller.obj
TARGET_MODELLER_COMMANDS=modeller.cmh

TARGET_TEST=test.exe
TARGET_TEST_OBJECTS=test.obj

TARGET_TEST_CACHE=test_cache.exe
TARGET_TEST_CACHE_OBJECTS=test_cache.obj
TARGET_TEST_CACHE_COMMANDS=test_cache.cmh

TARGET_TEST_FCGI=test_fcgi.exe
TARGET_TEST_FCGI_OBJECTS=test_fcgi.obj

TARGET_TEST_NUMERIC=test_numeric.exe
TARGET_TEST_NUMERIC_OBJECTS=test_numeric.obj
TARGET_TEST_NUMERIC_COMMANDS=test_numeric.cmh

TARGET_TEST_ODS=test_ods.exe
TARGET_TEST_ODS_OBJECTS=test_ods.obj
TARGET_TEST_ODS_COMMANDS=test_ods.cmh

TARGET_TEST_PARSER=test_parser.exe
TARGET_TEST_PARSER_OBJECTS=test_parser.obj

TARGET_TEST_PDF_GEN=test_pdf_gen.exe
TARGET_TEST_PDF_GEN_OBJECTS=test_pdf_gen.obj
TARGET_TEST_PDF_GEN_COMMANDS=test_pdf_gen.cmh

TARGET_TEST_SQL=test_sql.exe
TARGET_TEST_SQL_OBJECTS=test_sql.obj

TARGET_UNBUNDLE=unbundle.exe
TARGET_UNBUNDLE_OBJECTS=unbundle.obj

TARGET_UPLOAD=upload.exe
TARGET_UPLOAD_OBJECTS=upload.obj

TARGET_XREP=xrep.exe
TARGET_XREP_OBJECTS=xrep.obj

TARGET_XVARS=xvars.exe
TARGET_XVARS_OBJECTS=xvars.obj

ALL_TARGETS=\
 $(TARGET_BASE)\
 $(TARGET_COMMANDS)\
 $(TARGET_CIYAM_BASE)\
 $(TARGET_META)\
 $(TARGET_BUNDLE)\
 $(TARGET_CHECK_SOURCE)\
 $(TARGET_CIYAM_CLIENT)\
 $(TARGET_CIYAM_INTERFACE)\
 $(TARGET_CIYAM_SERVER)\
 $(TARGET_CONSTRUCT)\
 $(TARGET_DIFF)\
 $(TARGET_DIFFP)\
 $(TARGET_DUMP)\
 $(TARGET_EXTRACT)\
 $(TARGET_GENERATE_COMMANDS)\
 $(TARGET_MODELLER)\
 $(TARGET_TEST)\
 $(TARGET_TEST_CACHE)\
 $(TARGET_TEST_FCGI)\
 $(TARGET_TEST_NUMERIC)\
 $(TARGET_TEST_ODS)\
 $(TARGET_TEST_PARSER)\
 $(TARGET_TEST_PDF_GEN)\
 $(TARGET_TEST_SQL)\
 $(TARGET_UNBUNDLE)\
 $(TARGET_UPLOAD)\
 $(TARGET_XREP)\
 $(TARGET_XVARS)

ALL_EXPORTS=\
 $(TARGET_CIYAM_BASE_EXPORT)\
 $(TARGET_META_EXPORT)

ALL_OBJECTS=\
 $(TARGET_BASE_OBJECTS)\
 $(TARGET_COMMANDS_OBJECTS)\
 $(TARGET_CIYAM_BASE_OBJECTS)\
 $(TARGET_META_OBJECTS)\
 $(TARGET_BUNDLE_OBJECTS)\
 $(TARGET_CHECK_SOURCE_OBJECTS)\
 $(TARGET_CIYAM_CLIENT_OBJECTS)\
 $(TARGET_CIYAM_INTERFACE_OBJECTS)\
 $(TARGET_CIYAM_SERVER_OBJECTS)\
 $(TARGET_CONSTRUCT_OBJECTS)\
 $(TARGET_DIFF_OBJECTS)\
 $(TARGET_DIFFP_OBJECTS)\
 $(TARGET_DUMP_OBJECTS)\
 $(TARGET_EXTRACT_OBJECTS)\
 $(TARGET_GENERATE_COMMANDS_OBJECTS)\
 $(TARGET_MODELLER_OBJECTS)\
 $(TARGET_TEST_OBJECTS)\
 $(TARGET_TEST_CACHE_OBJECTS)\
 $(TARGET_TEST_FCGI_OBJECTS)\
 $(TARGET_TEST_NUMERIC_OBJECTS)\
 $(TARGET_TEST_ODS_OBJECTS)\
 $(TARGET_TEST_PARSER_OBJECTS)\
 $(TARGET_TEST_PDF_GEN_OBJECTS)\
 $(TARGET_TEST_SQL_OBJECTS)\
 $(TARGET_UNBUNDLE_OBJECTS)\
 $(TARGET_UPLOAD_OBJECTS)\
 $(TARGET_XREP_OBJECTS)\
 $(TARGET_XVARS_OBJECTS)

ALL_COMMANDS=\
 $(TARGET_CIYAM_BASE_COMMANDS)\
 $(TARGET_META_COMMANDS)\
 $(TARGET_CIYAM_SERVER_COMMANDS)\
 $(TARGET_MODELLER_COMMANDS)\
 $(TARGET_TEST_CACHE_COMMANDS)\
 $(TARGET_TEST_NUMERIC_COMMANDS)\
 $(TARGET_TEST_ODS_COMMANDS)\
 $(TARGET_TEST_PDF_GEN_COMMANDS)

usage: make_usage

all: $(ALL_TARGETS)

base: $(TARGET_BASE)
commands: $(TARGET_COMMANDS)
ciyam_base: $(TARGET_CIYAM_BASE)
Meta: $(TARGET_META)
bundle: $(TARGET_BUNDLE)
check_source: $(TARGET_CHECK_SOURCE)
ciyam_client: $(TARGET_CIYAM_CLIENT)
ciyam_interface: $(TARGET_CIYAM_INTERFACE)
ciyam_server: $(TARGET_CIYAM_SERVER)
construct: $(TARGET_CONSTRUCT)
diff: $(TARGET_DIFF)
diffp: $(TARGET_DIFFP)
dump: $(TARGET_DUMP)
extract: $(TARGET_EXTRACT)
generate_commands: $(TARGET_GENERATE_COMMANDS)
modeller: $(TARGET_MODELLER)
test: $(TARGET_TEST)
test_cache: $(TARGET_TEST_CACHE)
test_fcgi: $(TARGET_TEST_FCGI)
test_numeric: $(TARGET_TEST_NUMERIC)
test_ods: $(TARGET_TEST_ODS)
test_parser: $(TARGET_TEST_PARSER)
test_pdf_gen: $(TARGET_TEST_PDF_GEN)
test_sql: $(TARGET_TEST_SQL)
unbundle: $(TARGET_UNBUNDLE)
upload: $(TARGET_UPLOAD)
xrep: $(TARGET_XREP)
xvars: $(TARGET_XVARS)

dtm:
 @echo %date% %time%>make.dtm

make_usage:
 @usage.bat makefile.bcb

$(TARGET_BASE:.lib=.compile):
 @echo $(CPP_NORMAL) %* >compile.bat

$(TARGET_BASE):: $(TARGET_BASE:.lib=.compile)

$(TARGET_BASE):: $(TARGET_BASE_OBJECTS)
 @$(BIND) $(BIND_NORMAL) @&&!
-+$(?: = &^
-+)
! >$(TARGET_BASE_ERRFILE)
 @filter -r "^-+" "^TLIB " "^Warning: '.*' not found in library$" <$(TARGET_BASE_ERRFILE)
 @del $(TARGET_BASE_ERRFILE)

$(TARGET_COMMANDS:.lib=.compile):
 @echo $(CPP_NORMAL) %* >compile.bat

$(TARGET_COMMANDS):: $(TARGET_COMMANDS:.lib=.compile)

$(TARGET_COMMANDS):: $(TARGET_COMMANDS_OBJECTS)
 @$(BIND) $(BIND_NORMAL) @&&!
-+$(?: = &^
-+)
! >$(TARGET_COMMANDS_ERRFILE)
 @filter -r "^-+" "^TLIB " "^Warning: '.*' not found in library$" <$(TARGET_COMMANDS_ERRFILE)
 @del $(TARGET_COMMANDS_ERRFILE)

$(TARGET_CIYAM_BASE:.dll=.compile):
 @echo $(CPP_DYNAMIC) %* >compile.bat

$(TARGET_CIYAM_BASE):: $(TARGET_BASE) $(TARGET_GENERATE_COMMANDS) $(TARGET_CIYAM_BASE_COMMANDS) $(TARGET_CIYAM_BASE:.dll=.compile)

$(TARGET_CIYAM_BASE):: $(TARGET_CIYAM_BASE_OBJECTS) $(TARGET_BASE)
 $(LINK) @&&!
 $(LINK_DYNAMIC) $(WINSOCK_LIBS) $(LIBHARU_LIBS) $(LIBICONV_LIBS) $(MYSQL_LIBS)
!
 $(EXPORT) $(EXPORTFLAGS) $(TARGET_CIYAM_BASE:.dll=.lib) $(TARGET_CIYAM_BASE) >$(TARGET_CIYAM_BASE_ERRFILE)
 @filter -r "^$" "^Borland Implib" <$(TARGET_CIYAM_BASE_ERRFILE)
 @del $(TARGET_CIYAM_BASE_ERRFILE)

$(TARGET_META:.dll=.compile):
 @echo $(CPP_DYNAMIC) %* >compile.bat

$(TARGET_META):: $(TARGET_CIYAM_BASE) $(TARGET_GENERATE_COMMANDS) $(TARGET_META_COMMANDS) $(TARGET_META:.dll=.compile)

$(TARGET_META):: $(TARGET_META_OBJECTS) $(TARGET_CIYAM_BASE:.dll=.lib)
 $(LINK) @&&!
 $(LINK_DYNAMIC)
!
 $(EXPORT) $(EXPORTFLAGS) $(TARGET_META:.dll=.lib) $(TARGET_META) >$(TARGET_META_ERRFILE)
 @filter -r "^$" "^Borland Implib" <$(TARGET_META_ERRFILE)
 @del $(TARGET_META_ERRFILE)

$(TARGET_BUNDLE:.exe=.compile):
 @echo $(CPP_NORMAL) %* >compile.bat

$(TARGET_BUNDLE):: $(TARGET_BASE) $(TARGET_BUNDLE:.exe=.compile)

$(TARGET_BUNDLE):: $(TARGET_BUNDLE_OBJECTS) $(TARGET_BASE)
 $(LINK) @&&!
 $(LINK_NORMAL) $(ZLIB_LIBS)
!

$(TARGET_CHECK_SOURCE:.exe=.compile):
 @echo $(CPP_NORMAL) %* >compile.bat

$(TARGET_CHECK_SOURCE):: $(TARGET_CHECK_SOURCE:.exe=.compile)

$(TARGET_CHECK_SOURCE):: $(TARGET_CHECK_SOURCE_OBJECTS)
 $(LINK) @&&!
 $(LINK_NORMAL)
!

$(TARGET_CIYAM_CLIENT:.exe=.compile):
 @echo $(CPP_NORMAL) %* >compile.bat

$(TARGET_CIYAM_CLIENT):: $(TARGET_BASE) $(TARGET_CIYAM_CLIENT:.exe=.compile)

$(TARGET_CIYAM_CLIENT):: $(TARGET_CIYAM_CLIENT_OBJECTS) $(TARGET_BASE)
 $(LINK) @&&!
 $(LINK_NORMAL) $(WINSOCK_LIBS)
!

$(TARGET_CIYAM_INTERFACE:.exe=.compile):
 @echo $(CPP_NORMAL) %* >compile.bat

$(TARGET_CIYAM_INTERFACE):: $(TARGET_BASE) $(TARGET_CIYAM_INTERFACE:.exe=.compile)

$(TARGET_CIYAM_INTERFACE):: $(TARGET_CIYAM_INTERFACE_OBJECTS) $(TARGET_BASE)
 $(LINK) @&&!
 $(LINK_NORMAL) $(WINSOCK_LIBS) $(LIBFCGI_LIBS)
!

$(TARGET_CIYAM_SERVER:.exe=.compile):
 @echo $(CPP_NORMAL) %* >compile.bat

$(TARGET_CIYAM_SERVER):: $(TARGET_BASE) $(TARGET_CIYAM_BASE) $(TARGET_GENERATE_COMMANDS) $(TARGET_CIYAM_SERVER_COMMANDS) $(TARGET_CIYAM_SERVER:.exe=.compile)

$(TARGET_CIYAM_SERVER):: $(TARGET_CIYAM_SERVER_OBJECTS) $(TARGET_BASE) $(TARGET_CIYAM_BASE:.dll=.lib)
 $(LINK) @&&!
 $(LINK_NORMAL) $(WINSOCK_LIBS) $(LIBHARU_LIBS) $(LIBICONV_LIBS)
!

$(TARGET_CONSTRUCT:.exe=.compile):
 @echo $(CPP_NORMAL) %* >compile.bat

$(TARGET_CONSTRUCT):: $(TARGET_BASE) $(TARGET_CONSTRUCT:.exe=.compile)

$(TARGET_CONSTRUCT):: $(TARGET_CONSTRUCT_OBJECTS) $(TARGET_BASE)
 $(LINK) @&&!
 $(LINK_NORMAL)
!

$(TARGET_DIFF:.exe=.compile):
 @echo $(CPP_NORMAL) %* >compile.bat

$(TARGET_DIFF):: $(TARGET_BASE) $(TARGET_DIFF:.exe=.compile)

$(TARGET_DIFF):: $(TARGET_DIFF_OBJECTS) $(TARGET_BASE)
 $(LINK) @&&!
 $(LINK_NORMAL)
!

$(TARGET_DIFFP:.exe=.compile):
 @echo $(CPP_NORMAL) %* >compile.bat

$(TARGET_DIFFP):: $(TARGET_BASE) $(TARGET_DIFFP:.exe=.compile)

$(TARGET_DIFFP):: $(TARGET_DIFFP_OBJECTS) $(TARGET_BASE)
 $(LINK) @&&!
 $(LINK_NORMAL)
!

$(TARGET_DUMP:.exe=.compile):
 @echo $(CPP_NORMAL) %* >compile.bat

$(TARGET_DUMP):: $(TARGET_BASE) $(TARGET_DUMP:.exe=.compile)

$(TARGET_DUMP):: $(TARGET_DUMP_OBJECTS) $(TARGET_BASE)
 $(LINK) @&&!
 $(LINK_NORMAL)
!

$(TARGET_EXTRACT:.exe=.compile):
 @echo $(CPP_NORMAL) %* >compile.bat

$(TARGET_EXTRACT):: $(TARGET_EXTRACT:.exe=.compile)

$(TARGET_EXTRACT):: $(TARGET_EXTRACT_OBJECTS)
 $(LINK) @&&!
 $(LINK_NORMAL)
!

$(TARGET_GENERATE_COMMANDS:.exe=.compile):
 @echo $(CPP_NORMAL) %* >compile.bat

$(TARGET_GENERATE_COMMANDS):: $(TARGET_COMMANDS) $(TARGET_GENERATE_COMMANDS:.exe=.compile)

$(TARGET_GENERATE_COMMANDS):: $(TARGET_GENERATE_COMMANDS_OBJECTS) $(TARGET_COMMANDS)
 $(LINK) @&&!
 $(LINK_NORMAL)
!
 @if exist *.cmh del *.cmh

$(TARGET_MODELLER:.exe=.compile):
 @echo $(CPP_NORMAL) %* >compile.bat

$(TARGET_MODELLER):: $(TARGET_BASE) $(TARGET_GENERATE_COMMANDS) $(TARGET_MODELLER_COMMANDS) $(TARGET_MODELLER:.exe=.compile)

$(TARGET_MODELLER):: $(TARGET_MODELLER_OBJECTS) $(TARGET_BASE)
 $(LINK) @&&!
 $(LINK_NORMAL)
!

$(TARGET_TEST:.exe=.compile):
 @echo $(CPP_NORMAL) %* >compile.bat

$(TARGET_TEST):: $(TARGET_BASE) $(TARGET_TEST:.exe=.compile)

$(TARGET_TEST):: $(TARGET_TEST_OBJECTS) $(TARGET_BASE)
 $(LINK) @&&!
 $(LINK_NORMAL)
!

$(TARGET_TEST_CACHE:.exe=.compile):
 @echo $(CPP_NORMAL) %* >compile.bat

$(TARGET_TEST_CACHE):: $(TARGET_BASE) $(TARGET_GENERATE_COMMANDS) $(TARGET_TEST_CACHE_COMMANDS) $(TARGET_TEST_CACHE:.exe=.compile)

$(TARGET_TEST_CACHE):: $(TARGET_TEST_CACHE_OBJECTS) $(TARGET_BASE)
 $(LINK) @&&!
 $(LINK_NORMAL)
!

$(TARGET_TEST_FCGI:.exe=.compile):
 @echo $(CPP_NORMAL) %* >compile.bat

$(TARGET_TEST_FCGI):: $(TARGET_TEST_FCGI:.exe=.compile)

$(TARGET_TEST_FCGI):: $(TARGET_TEST_FCGI_OBJECTS)
 $(LINK) @&&!
 $(LINK_NORMAL) $(LIBFCGI_LIBS)
!

$(TARGET_TEST_NUMERIC:.exe=.compile):
 @echo $(CPP_NORMAL) %* >compile.bat

$(TARGET_TEST_NUMERIC):: $(TARGET_BASE) $(TARGET_GENERATE_COMMANDS) $(TARGET_TEST_NUMERIC_COMMANDS) $(TARGET_TEST_NUMERIC:.exe=.compile)

$(TARGET_TEST_NUMERIC):: $(TARGET_TEST_NUMERIC_OBJECTS) $(TARGET_BASE)
 $(LINK) @&&!
 $(LINK_NORMAL)
!

$(TARGET_TEST_ODS:.exe=.compile):
 @echo $(CPP_NORMAL) %* >compile.bat

$(TARGET_TEST_ODS):: $(TARGET_BASE) $(TARGET_GENERATE_COMMANDS) $(TARGET_TEST_ODS_COMMANDS) $(TARGET_TEST_ODS:.exe=.compile)

$(TARGET_TEST_ODS):: $(TARGET_TEST_ODS_OBJECTS) $(TARGET_BASE)
 $(LINK) @&&!
 $(LINK_NORMAL)
!

$(TARGET_TEST_PARSER:.exe=.compile):
 @echo $(CPP_NORMAL) %* >compile.bat

$(TARGET_TEST_PARSER):: $(TARGET_BASE) $(TARGET_TEST_PARSER:.exe=.compile)

$(TARGET_TEST_PARSER):: $(TARGET_TEST_PARSER_OBJECTS) $(TARGET_BASE)
 $(LINK) @&&!
 $(LINK_NORMAL)
!

$(TARGET_TEST_PDF_GEN:.exe=.compile):
 @echo $(CPP_NORMAL) %* >compile.bat

$(TARGET_TEST_PDF_GEN):: $(TARGET_BASE) $(TARGET_GENERATE_COMMANDS) $(TARGET_TEST_PDF_GEN_COMMANDS) $(TARGET_TEST_PDF_GEN:.exe=.compile)

$(TARGET_TEST_PDF_GEN):: $(TARGET_TEST_PDF_GEN_OBJECTS) $(TARGET_BASE)
 $(LINK) @&&!
 $(LINK_NORMAL) $(LIBHARU_LIBS) $(LIBICONV_LIBS)
!

$(TARGET_TEST_SQL:.exe=.compile):
 @echo $(CPP_NORMAL) %* >compile.bat

$(TARGET_TEST_SQL):: $(TARGET_BASE) $(TARGET_TEST_SQL:.exe=.compile)

$(TARGET_TEST_SQL):: $(TARGET_TEST_SQL_OBJECTS) $(TARGET_BASE)
 $(LINK) @&&!
 $(LINK_NORMAL) $(MYSQL_LIBS)
!

$(TARGET_UNBUNDLE:.exe=.compile):
 @echo $(CPP_NORMAL) %* >compile.bat

$(TARGET_UNBUNDLE):: $(TARGET_BASE) $(TARGET_UNBUNDLE:.exe=.compile)

$(TARGET_UNBUNDLE):: $(TARGET_UNBUNDLE_OBJECTS) $(TARGET_BASE)
 $(LINK) @&&!
 $(LINK_NORMAL) $(ZLIB_LIBS)
!

$(TARGET_UPLOAD:.exe=.compile):
 @echo $(CPP_NORMAL) %* >compile.bat

$(TARGET_UPLOAD):: $(TARGET_BASE) $(TARGET_UPLOAD:.exe=.compile)

$(TARGET_UPLOAD):: $(TARGET_UPLOAD_OBJECTS) $(TARGET_BASE)
 $(LINK) @&&!
 $(LINK_NORMAL) $(LIBFCGI_LIBS)
!

$(TARGET_XREP:.exe=.compile):
 @echo $(CPP_NORMAL) %* >compile.bat

$(TARGET_XREP):: $(TARGET_BASE) $(TARGET_XREP:.exe=.compile)

$(TARGET_XREP):: $(TARGET_XREP_OBJECTS) $(TARGET_BASE)
 $(LINK) @&&!
 $(LINK_NORMAL)
!

$(TARGET_XVARS:.exe=.compile):
 @echo $(CPP_NORMAL) %* >compile.bat

$(TARGET_XVARS):: $(TARGET_BASE) $(TARGET_XVARS:.exe=.compile)

$(TARGET_XVARS):: $(TARGET_XVARS_OBJECTS) $(TARGET_BASE)
 $(LINK) @&&!
 $(LINK_NORMAL)
!

clean::
 @killfiles $(ALL_TARGETS)
 @killfiles $(ALL_TARGETS:.exe=.csm)
 @killfiles $(ALL_TARGETS:.dll=.csm)
 @killfiles $(ALL_TARGETS:.lib=.csm)
 @killfiles $(ALL_TARGETS:.exe=.^#*)
 @killfiles $(ALL_TARGETS:.dll=.^#*)
 @killfiles $(ALL_TARGETS:.lib=.^#*)
 @killfiles $(ALL_TARGETS:.exe=.ilc)
 @killfiles $(ALL_TARGETS:.dll=.ilc)
 @killfiles $(ALL_TARGETS:.exe=.ild)
 @killfiles $(ALL_TARGETS:.dll=.ild)
 @killfiles $(ALL_TARGETS:.exe=.ilf)
 @killfiles $(ALL_TARGETS:.dll=.ilf)
 @killfiles $(ALL_TARGETS:.exe=.ils)
 @killfiles $(ALL_TARGETS:.dll=.ils)
 @killfiles $(ALL_TARGETS:.exe=.map)
 @killfiles $(ALL_TARGETS:.dll=.map)
 @killfiles $(ALL_TARGETS:.exe=.tds)
 @killfiles $(ALL_TARGETS:.dll=.tds)
 @killfiles $(ALL_EXPORTS)
 @killfiles $(ALL_OBJECTS)
 @killfiles $(ALL_COMMANDS)

