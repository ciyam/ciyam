`{`@eq`(`'inc_procedure`'`,`$section`)\
   // [(start for_auto_code)]
   get_obj( ).op_update( );
   if( !get_obj( ).`{`$arg_exhausted_field`}( ) )
   {
      `{`$arg_inc_value`} = get_obj( ).`{`$arg_next_field`}( );
      string mask( get_obj( ).`{`$arg_mask_field`}( ) );

      if( is_null( get_obj( ).`{`$arg_next_field`}( ) ) )
      {
         string str;
         for( size_t i = 0; i < mask.size( ); i++ )
         {
            if( mask[ i ] == '?' )
               str += 'A';
            else if( mask[ i ] == '#' )
               str += '0';
            else
               str += mask[ i ];
         }

         get_obj( ).`{`$arg_next_field`}( str );
      }
      else
      {
         if( mask.size( ) != get_obj( ).`{`$arg_next_field`}( ).size( ) )
         {
            get_obj( ).op_cancel( );
            throw runtime_error( "unexpected mask/next size mismatch" );
         }

         bool finished = false;
         string str( get_obj( ).`{`$arg_next_field`}( ) );
         for( size_t i = mask.size( ); i > 0; i-- )
         {
            if( mask[ i - 1 ] == '?' )
            {
               if( str[ i - 1 ] == 'Z' )
                  str[ i - 1 ] = 'A';
               else
               {
                  ++str[ i - 1 ];
                  finished = true;
               }
            }
            else if( mask[ i - 1 ] == '#' )
            {
               if( str[ i - 1 ] == '9' )
                  str[ i - 1 ] = '0';
               else
               {
                  ++str[ i - 1 ];
                  finished = true;
               }
            }

            if( finished )
            {
               get_obj( ).`{`$arg_next_field`}( str );
               break;
            }
         }

         if( !finished )
         {
            get_obj( ).`{`$arg_next_field`}( "" );
            get_obj( ).`{`$arg_exhausted_field`}( true );
         }
      }
      get_obj( ).op_apply( );
   }
   else
      get_obj( ).op_cancel( );
   // [(finish for_auto_code)]
`}
`{`@eq`(`'validate`'`,`$section`)\
   // [(start for_auto_code)]
   if( !get_obj( ).`{`$arg_next_field`}( ).empty( ) )
   {
      bool okay = true;

      string next( get_obj( ).`{`$arg_next_field`}( ) );
      string mask( get_obj( ).`{`$arg_mask_field`}( ) );

      if( next.length( ) != mask.length( ) )
         okay = false;
      else
      {
         for( size_t i = 0; i < next.length( ); i++ )
         {
            if( next[ i ] != mask[ i ] )
            {
               if( mask[ i ] == '?' )
               {
                  if( next[ i ] < 'A' || next[ i ] > 'Z' )
                     okay = false;
               }
               else if( mask[ i ] == '#' )
               {
                  if( next[ i ] < '0' || next[ i ] > '9' )
                     okay = false;
               }
               else
                  okay = false;
            }

            if( !okay )
               break;
         }
      }

      if( !okay )
         p_validation_errors->insert( validation_error_value_type( c_field_name_`{`$arg_next_field`},
          get_string_message( GS( c_str_field_mismatch ), make_pair(
          c_str_parm_field_mismatch_field, get_module_string( c_field_display_name_`{`$arg_next_field`} ) ),
          make_pair( c_str_parm_field_mismatch_field2, get_module_string( c_field_display_name_`{`$arg_mask_field`} ) ) ) ) );
   }
   // [(finish for_auto_code)]
`}
